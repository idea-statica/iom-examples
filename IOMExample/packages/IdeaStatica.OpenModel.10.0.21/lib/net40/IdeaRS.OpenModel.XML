<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IdeaRS.OpenModel</name>
    </assembly>
    <members>
        <member name="T:IdeaRS.OpenModel.OpenModelPropertyAttribute">
            <summary>
            Property attribute 
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.OpenModelPropertyAttribute.StructuralModelName">
            <summary>
            Name in the Idea model
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.OpenModelPropertyAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="structuralModelName">Name of property in the SM</param>
        </member>
        <member name="T:IdeaRS.OpenModel.Beam.IdeaBeamImportSettings">
            <summary>
            Represents settings of improt options into Idea Connections
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Beam.IdeaBeamImportSettings.#ctor">
            <summary>
            Constructor - it sets default values
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Beam.IdeaBeamImportSettings.UseWizard">
            <summary>
            Open import wizard window
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Beam.IdeaBeamImportSettings.ExportAllLinearCombination">
            <summary>
            All linear combination will be exported to IDEA connection
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Beam.IdeaBeamImportSettings.UserWizardBrand">
            <summary>
            Set user Wizard Brand
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Beam.IdeaBeamImportSettings.DesignCode">
            <summary>
            Gets or sets the Design Code
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Beam.IdeaBeamImportSettings.CanChangeDesignCodeInWizard">
            <summary>
            Can change design code in Wizard
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Beam.IdeaBeamImportSettings.BeamFileName">
            <summary>
            Gets or sets the name of the Beam project
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.TypeOfCalculationDeflection">
            <summary>
            Define type of support conditions
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.TypeOfCalculationDeflection.CheckSlenderness">
            <summary>
            check slenderness calculation, if rules are full filed no other calculation is done
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.TypeOfCalculationDeflection.CheckSlendernessContinueDirectCalculation">
            <summary>
            if check of slenderness is not ok then, directly calculation of deflection is done
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.TypeOfCalculationDeflection.DirectCalculation">
            <summary>
            check of slenderness is not taken into account, directly calculation of deflection is done
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.TypeOfCalculationDeflection.BothOfThem">
            <summary>
            both calculation is done, it is for comparative results
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.TypeOfSupportConditions">
            <summary>
            Define type of support conditions
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.TypeOfSupportConditions.NonContinuous">
            <summary>
            Non-continuous members
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.TypeOfSupportConditions.Continuous">
            <summary>
            Continuous members
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.TypeOfSupportConditions.FullyRestrained">
            <summary>
            Supports considered fully restrained
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.TypeOfSupportConditions.Bearing">
            <summary>
            Bearing provided
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.TypeOfSupportConditions.Cantilever">
            <summary>
            Cantilever
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.TypeDeflectionSheme">
            <summary>
            Scheme
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.TypeDeflectionSheme.DeflectionSheme_I">
            <summary>
            constant moment - single span
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.TypeDeflectionSheme.DeflectionSheme_II">
            <summary>
            one single force - single span
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.TypeDeflectionSheme.DeflectionSheme_III">
            <summary>
            single moment at the begging or end of the span - single span
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.TypeDeflectionSheme.DeflectionSheme_IV">
            <summary>
            two forces  - single span
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.TypeDeflectionSheme.DeflectionSheme_V">
            <summary>
            linear distributed loads - single span
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.TypeDeflectionSheme.DeflectionSheme_VI">
            <summary>
            triangle distributed loads - single span
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.TypeDeflectionSheme.DeflectionSheme_VII">
            <summary>
            linear distributed loads, moments in the left and right - continues beam
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.TypeDeflectionSheme.DeflectionSheme_VIII">
            <summary>
            one single force - cantilever
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.TypeDeflectionSheme.DeflectionSheme_IX">
            <summary>
            triangle distributed loads - cantilever
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.TypeDeflectionSheme.DeflectionSheme_X">
            <summary>
            one single force - non continues span
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.TypeDeflectionSheme.DeflectionSheme_XI">
            <summary>
            trapezoidal shape of loads
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.BeamDataEc2">
            <summary>
            Beam data Ec2
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Concrete.BeamDataEc2.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.BeamDataEc2.TypeOfCalculation">
            <summary>
            there are several types of calculation
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.BeamDataEc2.Ln">
            <summary>
            Length of beam
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.BeamDataEc2.BeamSpanLength">
            <summary>
            beam span lengrh - theoretical support distance
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.BeamDataEc2.TypeOfSupportLeft">
            <summary>
            Type of support on the left side
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.BeamDataEc2.TypeOfSupportRight">
            <summary>
            Type of support on the right side
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.BeamDataEc2.WidthOfSupportLeft">
            <summary>
            Width of support on the left side
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.BeamDataEc2.WidthOfSupportRight">
            <summary>
            Width of support on the right side
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.BeamDataEc2.DeflectionSheme">
            <summary>
            type of span loads
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.BeamDataEc2.CheckLimitDeflection">
            <summary>
            indicator for check of limit deflection for beam span
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.BeamDataEc2.IsUserLimitDeflection">
            <summary>
            true for user value of limit deflection (both - total + rheological)
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.BeamDataEc2.UserLimitDeflection">
            <summary>
            user value of limit deflection - denominator - 1 / value
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.BeamDataEc2.CheckLimitDeflRheoEffects">
            <summary>
            true for check of limit deflection for beam span from rheological effects of variable loads
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.BeamDataEc2.UserLimitDeflRheoEffects">
            <summary>
            user value of limit deflection from rheological effects of variable loads - denominator - 1 / value
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.BeamDataEc2.IsAbsValueLimitDeflection">
            <summary>
            true for absolute user value of limit deflection (both - total + rheological)
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.BeamDataEc2.RequiredCamber">
            <summary>
            required camber
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.BeamDataEc2.IsYDirectionData">
            <summary>
             true for deflection data in Y direction
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.CalculationSetup">
            <summary>
            Concrete calculation setup
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Concrete.CalculationSetup.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CalculationSetup.UlsResponse">
            <summary>
            ULS response
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CalculationSetup.UlsDiagram">
            <summary>
            ULS capacity N-M-M
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CalculationSetup.UlsShear">
            <summary>
            ULS shear
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CalculationSetup.UlsTorsion">
            <summary>
            ULS torsion
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CalculationSetup.UlsInteraction">
            <summary>
            Uls interaction
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CalculationSetup.SlsCrack">
            <summary>
            SLS crack
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CalculationSetup.SlsStressLimitation">
            <summary>
            SLS stress limitation
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CalculationSetup.Detailing">
            <summary>
            Detailing
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CalculationSetup.MNKappaDiagram">
            <summary>
            M-N-κ diagram
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CalculationSetup.Fatigue">
            <summary>
            ULS fatigue
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CalculationSetup.CrossSectionCharacteristics">
            <summary>
            Cross section charactertistics
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CalculationSetup.SlsStiffnesses">
            <summary>
            SLS stiffnesses
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CalculationSetup.SlsDeflections">
            <summary>
            SLS deflections
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteSLSCheckResultStiffnessEc2">
            <summary>
            SLS Check Stiffness Ec2
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.CheckResult.SectionStiffnesses">
            <summary>
            Section stiffnesses
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.SectionStiffnesses.Alfa">
            <summary>
            rotation around x-axis
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.SectionStiffnesses.EAx">
            <summary>
            axial stiffness
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.SectionStiffnesses.EccX">
            <summary>
            eccentricity in x-direction
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.SectionStiffnesses.EccY">
            <summary>
            eccentricity in y-direction
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.SectionStiffnesses.EccZ">
            <summary>
            eccentricity in y-direction
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.SectionStiffnesses.EIy">
            <summary>
            bending stiffness
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.SectionStiffnesses.EIz">
            <summary>
            bending stiffness
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.SectionStiffnesses.EDyz">
            <summary>
            product moment stiffness
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.SectionStiffnesses.GAy">
            <summary>
            shear stiffness
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.SectionStiffnesses.GAz">
            <summary>
            shear stiffness
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.SectionStiffnesses.GIx">
            <summary>
            torsion stiffness
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteSLSCheckResultStiffness">
            <summary>
            SLS Check tiffness base
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteSLSCheckResultStiffness.LinearStiffness">
            <summary>
            linear stiffnesses
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteSLSCheckResultStiffness.Stiffness">
            <summary>
            result stiffnesses
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteSLSCheckResultStiffness.StiffnessI">
            <summary>
            stiffnesses calculated on uncracked cross-section
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteSLSCheckResultStiffness.CharacteristicsI">
            <summary>
            stiffnesses calculated on uncracked cross-section
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteSLSCheckResultStiffness.StiffnessII">
            <summary>
            stiffnesses calculated on fully-cracked cross-section
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteSLSCheckResultStiffness.CharacteristicsII">
            <summary>
            stiffnesses calculated on cracked cross-section
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteSLSCheckResultStiffness.Fr">
            <summary>
            crack resistance internal forces
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteCheckDetailingEc2">
            <summary>
            Check Detailing Ec2
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteCheckDetailingEc2.CheckValueLongReinf">
            <summary>
            check value of longitudinal reinforcement
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteCheckDetailingEc2.CheckValueShearReinf">
            <summary>
            check value of shear  reinforcement
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.CheckResult.CheckResultType">
            <summary>
            Check result type
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CheckResultType.Capacity">
            <summary>
            calculation of capacity by the interaction diagram
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CheckResultType.Response">
            <summary>
            calculation plane of deformation
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CheckResultType.Shear">
            <summary>
            shear check
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CheckResultType.Torsion">
            <summary>
            torsion check
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CheckResultType.Interaction">
            <summary>
            interaction shear+torsion
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CheckResultType.Fatigue">
            <summary>
            calculation - response for fatigue
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CheckResultType.StressLimitation">
            <summary>
            stress limitation check
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CheckResultType.CrackWidth">
            <summary>
            crack width check
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CheckResultType.Detailing">
            <summary>
            detailing check
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CheckResultType.Stiffness">
            <summary>
            stiffness
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CheckResultType.Deflection">
            <summary>
            deflection
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteCheckResult">
            <summary>
            Concrete Check results
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteCheckResult.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteCheckResult.ResultType">
            <summary>
            Check result type
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteCheckResult.CheckResults">
            <summary>
            All results - first is extreme
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteSLSCheckResultCrackWidthEc2">
            <summary>
            SLS Check Crack width Ec2
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteSLSCheckResultCrackWidthEc2.N">
            <summary>
            Normal force for quasi-permanent combination
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteSLSCheckResultCrackWidthEc2.My">
            <summary>
            Bending moment around y axis for quasi-permanent combination
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteSLSCheckResultCrackWidthEc2.Mz">
            <summary>
            Bending moment around z axis for quasi-permanent combination
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteSLSCheckResultCrackWidthEc2.W">
            <summary>
            calculated crack width value
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteSLSCheckResultCrackWidthEc2.Wlim">
            <summary>
            limiting crack width value
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteSLSCheckResultCrackWidth">
            <summary>
            SLS Check Crack width base
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.CheckResult.TypeSLSLimitStressCheck">
            <summary>
            Type of SLS check in extreme result
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.TypeSLSLimitStressCheck.notSet">
            <summary>
            not set value
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.TypeSLSLimitStressCheck.Check_7_2_2_Concrete_fck">
            <summary>
            check 7.2 (2) is used
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.TypeSLSLimitStressCheck.Check_7_2_3_Concrete_fck">
            <summary>
            check 7.2 (3) is used
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.TypeSLSLimitStressCheck.Check_7_2_5_Tendons_fpk">
            <summary>
            check 7.2 (5) stress in reinforcement bars is used
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.TypeSLSLimitStressCheck.Check_7_2_5_ReinforcementBars_fyk">
            <summary>
            check 7.2 (5) stress in tendons is used
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.TypeSLSLimitStressCheck.Check_5_10_3_2_Tendons">
            <summary>
            check 5.10.3 (2) stress in tendons is used
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.TypeSLSLimitStressCheck.Check_5_10_2_1_1_Tendons">
            <summary>
            check 5.10.2.1 (1) stress in tendons is used
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteSLSCheckResultStressLimitationEc2">
            <summary>
            SLS Check Stress Limitation Ec2
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteSLSCheckResultStressLimitationEc2.TypeCheck">
            <summary>
            type of SLS limit stress check
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteSLSCheckResultStressLimitationEc2.Stress">
            <summary>
            type of SLS limit stress check
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteSLSCheckResultStressLimitationEc2.LimitStress">
            <summary>
            type of SLS limit stress check
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteULSCheckResultDiagramCapacityEc2">
            <summary>
            ULS Check Diagram Capacity Ec2
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.CheckResult.IntDiagCheckMethod">
            <summary>
            Flags controlling the method of the check by a interaction diagram
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.IntDiagCheckMethod.IDCheckTypeNuMuMu">
            <summary>
             known Ned,Med; calculate Nrd,Mrd as intersection of ID and line=[0,0];[Ned,Med]
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.IntDiagCheckMethod.IDCheckTypeNuMM">
            <summary>
            know Med; calculate +-Nrd
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.IntDiagCheckMethod.IDCheckTypeNMuMu">
            <summary>
             know Ned; calculate +-Mrd
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.IntDiagCheckMethod.IDOnlyUlsForce1">
            <summary>
            Find intersection only in the direction of the Fd
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.IntDiagCheckMethod.IDOnlyPlanarCheck">
            <summary>
            Only planar check is required
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.IntDiagCheckMethod.IDPlaneInfoRequest">
            <summary>
            Information about plane of deformation is required
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.IntDiagCheckMethod.IDPlanar_0deg">
            <summary>
            used by CheckForceQuick
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.IntDiagCheckMethod.IDPlanar_90deg">
            <summary>
            used by CheckForceQuick
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteULSCheckResultDiagramCapacity">
            <summary>
            ULS Check Diagram Capacity base
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteULSCheckResultDiagramCapacity.Fu">
            <summary>
            calculated ultimate internal forces
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteULSCheckResultDiagramCapacity.CheckMethod">
            <summary>
            method of check
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.CheckResult.FatigueMethod">
            <summary>
            Verification of concrete under compression or shear
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.FatigueMethod.notSet">
            <summary>
            the method has not been set
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.FatigueMethod.Method_6_8_7_1">
            <summary>
            method 6.8.7 (1) according to EN 1992-1-1
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.FatigueMethod.Method_6_8_7_2">
            <summary>
            method 6.8.7 (2) according to EN 1992-1-1
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.FatigueMethod.Method_6_8_7_101">
            <summary>
            method 6.8.7 (101) according to EN 1992-2
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.FatigueMethod.Method_6_8_7_101_ANNEX_NEN">
            <summary>
            method 6.8.7 (101) according to EN 1992-2
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.FatigueMethod.Method_Shear_6_8_7_4">
            <summary>
            6.8.7 Verification of concrete under compression or shear
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.FatigueMethod.Method_Reinf_6_8_5_3">
            <summary>
            6.8.5 Verification using damage equivalent stress range - reinfrocement
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.FatigueMethod.Method_Prestress_6_8_5_3">
            <summary>
            6.8.5 Verification using damage equivalent stress range - prestress
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.FatigueMethod.Method_NN112">
            <summary>
            EN 1992-2, annex NN eq. NN.112
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.FatigueMethod.Method_Reinf_NN102">
            <summary>
            reinforcement EN 1992-2, annex NN eq. NN.102
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.FatigueMethod.Method_Reinf_NN107">
            <summary>
            reinforcement EN 1992-2, annex NN eq. NN.107
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.FatigueMethod.Method_Tendon_NN102">
            <summary>
            tendon EN 1992-2, annex NN eq. NN.102
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.FatigueMethod.Method_Tendon_NN107">
            <summary>
            tendon EN 1992-2, annex NN eq. NN.107
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.FatigueMethod.Method_6_8_7_2_Shear">
            <summary>
            method 6.8.7 (2) according to EN 1992-1-1 under shear
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.FatigueMethod.Method_Reinf_6_8_5_3_Shear">
            <summary>
            6.8.5 Verification of concrete under compression or shear
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteULSCheckResultFatigueEc2">
            <summary>
            ULS Check Fatigue Ec2
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteULSCheckResultFatigueEc2.DecissionMethod">
            <summary>
            decision fatigue check
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteULSCheckResultFatigueEc2.InternalForceMax">
            <summary>
            internal forces for fatigue calculation max
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteULSCheckResultFatigueEc2.InternalForceMin">
            <summary>
            internal forces for fatigue calculation min
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteULSCheckResultInteractionEc2">
            <summary>
            ULS Check Interaction Ec2
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteULSCheckResultInteractionEc2.Ned">
            <summary>
            Design value of the applied axial force
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteULSCheckResultInteractionEc2.Medy">
            <summary>
            Design value of the applied bending moment around y axis
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteULSCheckResultInteractionEc2.Medz">
            <summary>
            Design value of the applied bending moment around z axis
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteULSCheckResultInteractionEc2.Ved">
            <summary>
            Design value of the applied shear force
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteULSCheckResultInteractionEc2.Ted">
            <summary>
            Design value of the applied torsional moment
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteULSCheckResultInteractionEc2.CheckValueShearAndTorsion">
            <summary>
            Calculated value of the exploitation of the cross-section (for interaction of shear and torsion) related to the limit value
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteULSCheckResultInteractionEc2.CheckValueShearTorsionAndBending">
            <summary>
            Calculated value of the exploitation of the cross-section (for interaction of shear, torsion and bending) related to the limit value
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteULSCheckResultInteraction">
            <summary>
            ULS Check Interaction base
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteSLSCheckResultStressLimitation">
            <summary>
            SLS Check Stress Limitation base
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteCheckDetailing">
            <summary>
            Check Detailing base
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteULSCheckResultFatigue">
            <summary>
            ULS Check Fatigue base
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteULSCheckResultTorsionEc2">
            <summary>
            ULS Check Torsion Ec2
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteULSCheckResultTorsionEc2.Ted">
            <summary>
            Design value of the applied torsional moment 
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteULSCheckResultTorsionEc2.Trdc">
            <summary>
            torsional cracking moment
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteULSCheckResultTorsionEc2.Trdmax">
            <summary>
            design torsional resistance moment
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteULSCheckResultTorsionEc2.Trds">
            <summary>
            design torsional resistance moment of shear reinforcement
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteULSCheckResultTorsionEc2.Trd">
            <summary>
            decisive design torsional resistance
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteULSCheckResultTorsion">
            <summary>
            ULS Check Torsion base
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.CheckResult.ShearMethod">
            <summary>
            Method of shear calculation
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.ShearMethod.NoDefined">
            <summary>
            not defined
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.ShearMethod.MethodVrdcCracked">
            <summary>
            method according 6.2.2.1
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.ShearMethod.MethodVrdcPrestress">
            <summary>
            method according 6.2.2.2
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.ShearMethod.MethodVrdcSimpleHcs">
            <summary>
            method according 6.2.2.2
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.ShearMethod.MethodVrdcGeneralHcs">
            <summary>
            method according EN1168
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.ShearMethod.MethodVrdcPlain">
            <summary>
            method according 12.6.3
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.ShearMethod.MethodVrds">
            <summary>
            method according 6.2.3.3
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.ShearMethod.MethodJoints">
            <summary>
            method according 6.2.5(1)
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteULSCheckResultShearEc2">
            <summary>
            ULS Check Shear Ec2
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteULSCheckResultShearEc2.Ved">
            <summary>
            shear force
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteULSCheckResultShearEc2.Vrdc">
            <summary>
            shear resistance of concrete
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteULSCheckResultShearEc2.Vrdr">
            <summary>
            shear resistance
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteULSCheckResultShearEc2.Vrdmax">
            <summary>
            shear resistance of compression strut
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteULSCheckResultShearEc2.Vrds">
            <summary>
            shear resistance of shear reinforcement
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteULSCheckResultShearEc2.Vrd">
            <summary>
            decisive shear resistance
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteULSCheckResultShear">
            <summary>
            ULS Check Shear base
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteCheckResultOverallItem">
            <summary>
            Overal check item
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteCheckResultOverallItem.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteCheckResultOverallItem.ResultType">
            <summary>
            Check result type
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteCheckResultOverallItem.Result">
            <summary>
            check result passed/failed
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteCheckResultOverallItem.CheckValue">
            <summary>
            calculated limited value, calculated as strain to limit strain
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteCheckResultOverall">
            <summary>
            Concrete check result
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteCheckResultOverall.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteCheckResultOverall.Checks">
            <summary>
            All check by the type
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteCheckResults">
            <summary>
            Concrete Check results
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteCheckResults.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteCheckResults.CheckResults">
            <summary>
            All results
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteCheckResults.Overall">
            <summary>
            Overal check
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteULSCheckResultResponse">
            <summary>
            ULS CheckResponce base
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteULSCheckResultResponseEc2">
            <summary>
            ULS CheckResponce Ec2
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.CheckResult.SectionConcreteCheckResult">
            <summary>
            ection concrete result
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Concrete.CheckResult.SectionConcreteCheckResult.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.SectionConcreteCheckResult.SectionId">
            <summary>
            Id Of section
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.SectionConcreteCheckResult.ExtremeResults">
            <summary>
            Extreme results
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.CheckResult.CheckResult">
            <summary>
            The number in enum value description means the priority for extreme check evaluation.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CheckResult.Failed">
            <summary>
            3. check value is bigger than limit check value
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CheckResult.Passed">
            <summary>
            5. check value is lesser than limit check value
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CheckResult.PassedWithWarnings">
            <summary>
            4. check value is lesser than limit check value, but there is a warning in calculation
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CheckResult.FailedWithError">
            <summary>
            2. error appeared during calculation, calculation was terminated
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CheckResult.CheckIsOff">
            <summary>
            7. this kind of the calculation was switched off
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CheckResult.NotDone">
            <summary>
            1. this kind of the calculation was not done
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CheckResult.CheckIsNotNecesssary">
            <summary>
            6. check for some reason not necessary
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType">
            <summary>
            Calculation type
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.NotDefined">
            <summary>
            not defined check
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.Capacity">
            <summary>
            calculation of capacity by the interaction diagram
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.Response">
            <summary>
            calculation plane of deformation
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.Shear">
            <summary>
            shear check
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.Torsion">
            <summary>
            torsion check
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.Interaction">
            <summary>
            interaction shear+torsion
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.Fatigue">
            <summary>
            calculation - response for fatigue
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.StressLimitationShort">
            <summary>
            stress limitation check - short
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.StressLimitationLong">
            <summary>
            stress limitation check - long
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.StressLimitationStage">
            <summary>
            stress limitation check - stage
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.CrackWidthShort">
            <summary>
            crack width check - short
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.CrackWidthLong">
            <summary>
            crack width check - long
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.CrackWidthStage">
            <summary>
            crack width check - stage
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.StiffnessShort">
            <summary>
            stiffness calculation - short
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.StiffnessLong">
            <summary>
            stiffness calculation - long
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.StiffnessStage">
            <summary>
            stiffness calculation - stage
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.Deflection">
            <summary>
            deflection check
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.BrittleFailure">
            <summary>
            brittle failure check
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.Detailing">
            <summary>
            detailing check
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.LinearStressShort">
            <summary>
            Linear stress check - short
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.LinearStressLong">
            <summary>
            Linear stress check - long
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.LinearStressStage">
            <summary>
            Linear stress check - stage
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.CrossSectionCharacteristicsShort">
            <summary>
            calculation cross-section characteristics - short
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.CrossSectionCharacteristicsLong">
            <summary>
            calculation cross-section characteristics - long
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.CrossSectionCharacteristicsStage">
            <summary>
            calculation cross-section characteristics - stage
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.Baumann">
            <summary>
            calculation internal forces for slabs/shells/walls
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.OverallColumnRecalculation">
            <summary>
            all internal forces are recalculated because of slenderness/imperfections etc...
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.ColumnForces">
            <summary>
            Recalculation of internal forces on compression members (effect of geometric imperfections and second order effect).
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.PrestressEffects">
            <summary>
            calculation prestress effects
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.Primaryforces">
            <summary>
            calculation primary forces
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.LongTermLosses">
            <summary>
            calculation long term losses calculation
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.MNKappaDiagramULS">
            <summary>
            calculation M-N-Kappa diagram ULS
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.MNKappaDiagramSLSShort">
            <summary>
            calculation M-N-Kappa diagram SLS-short
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.MNKappaDiagramSLSLong">
            <summary>
            calculation M-N-Kappa diagram SLS-long
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.CreepAndShrinkageCoefficient">
            <summary>
            calculation of creep and shrinkage
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.ConcreteCover">
            <summary>
            calculation of creep and shrinkage
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.CrackingCalculation">
            <summary>
            calculation if cross section is cracked
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.CrackingCalculationShort">
            <summary>
            calculation if cross section is cracked
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.CrackingCalculationLong">
            <summary>
            calculation if cross section is cracked
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.Redistribution">
            <summary>
            calculation of redistribution
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.InitilaStateofCrossSection">
            <summary>
            initial state of cross-section
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.StrutAngle">
            <summary>
            angle of concrete strut
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.DesignReinforcement">
            <summary>
            desing of reinforcement
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.CapacityMesh">
            <summary>
            interaction diagram on mesh
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.StiffnessStageLong">
            <summary>
            calculation siffness with effective modulus of elasticity
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.CheckResult.CalculationType.LongTermLossesCoefficient">
            <summary>
            calculation long-term losses coefficient
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteCheckResultBase">
            <summary>
            Concrete result base class
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteCheckResultBase.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteCheckResultBase.InternalFores">
            <summary>
            internal forces used for calculation
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteCheckResultBase.NonConformities">
            <summary>
            Returns nonconformity in section
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteCheckResultBase.Result">
            <summary>
            check result passed/failed
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteCheckResultBase.CheckValue">
            <summary>
            calculated limited value, calculated as strain to limit strain
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteCheckResultBase.LimitCheckValue">
            <summary>
            limit check value for result check
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckResult.ConcreteCheckResultBase.Check">
            <summary>
            settings of check type
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.CheckSection">
            <summary>
            Check section base class
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Concrete.CheckSection.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckSection.Description">
            <summary>
            Description of this section
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckSection.CheckMember">
            <summary>
            CheckMember
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckSection.ReinfSection">
            <summary>
            Reinforcement of cross-section
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckSection.Extremes">
            <summary>
            Section extremes
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.CheckSectionExtreme">
            <summary>
            Check section extreme base class
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Concrete.CheckSectionExtreme.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckSectionExtreme.Fundamental">
            <summary>
            Fundamental loading
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckSectionExtreme.Accidental">
            <summary>
            Accidental loading
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckSectionExtreme.Characteristic">
            <summary>
            Characterictic loading
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckSectionExtreme.QuasiPermanent">
            <summary>
            Quasi-Permanent loading
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckSectionExtreme.Frequent">
            <summary>
            Frequent loading
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.CheckSectionExtreme.Fatigue">
            <summary>
            Quasi-Permanent loading
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.InputValue">
            <summary>
            Input value type
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.InputValue.Calculated">
            <summary>
            Value is calculated
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.InputValue.UserInput">
            <summary>
            Value is inputed by user
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.InputValue.CalculatedFEM">
            <summary>
            values are calculated in FEM
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.SupportType">
            <summary>
            Types of support
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SupportType.NoSupport">
            <summary>
            Without support
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SupportType.Hinge">
            <summary>
            Hinge type
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SupportType.Rigid">
            <summary>
            Rigid type
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SupportType.HingeNoSupport">
            <summary>
            Combination of hinge and nosupport
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SupportType.HingeHinge">
            <summary>
            Combination of hinge and hinge
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SupportType.RigidNoSupport">
            <summary>
            Combination of rigid and nosupport
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SupportType.RigidHinge">
            <summary>
            Combination of rigid and hinge
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SupportType.RigidRigid">
            <summary>
            Combination of rigid and rigid
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.ImperfectionDirection">
            <summary>
            direction of imperfection
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ImperfectionDirection.BothDirections">
            <summary>
            Imperfections are separately added to both directions, y and z.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ImperfectionDirection.BiggerSlenderner">
            <summary>
            bigger slenderness direction
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ImperfectionDirection.MomentResultant">
            <summary>
            resultant of moments
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ImperfectionDirection.Both">
            <summary>
            both
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ImperfectionDirection.FromSetup">
            <summary>
            Takes imperfection direction from global code setup.
            This value must not be used in code setup!
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.ColumnData">
            <summary>
            Column data base
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Concrete.ColumnData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ColumnData.ImperfectionsInput">
            <summary>
            Indicates, whether use user values or calculate effect of imperfections.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ColumnData.SecondOrderEffectInput">
            <summary>
            Indicates, whether use user values or calculate 2'nd order effect.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ColumnData.CalculateY">
            <summary>
            Gets an indication, whether imperfections and second order have to be performed perpendicular to the y axis.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ColumnData.CalculateZ">
            <summary>
            Gets an indication, whether imperfections and second order have to be performed perpendicular to the z axis.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ColumnData.L">
            <summary>
            Gets or sets the system length of column.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ColumnData.EffectiveLength">
            <summary>
            Gets or sets type of input effective length
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ColumnData.L0Y">
            <summary>
            Gets or sets the user defined effective length of column for Y direction.
            If is not defined, the must be valid support data.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ColumnData.L0Z">
            <summary>
            Gets or sets the user defined effective length of column for Z direction.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ColumnData.FemLenghtFromFlexibleSupport">
            <summary>
            true if FEM length were calculated from flexible supports
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ColumnData.FemL0Y">
            <summary>
            effective length calculated in FEM for Y direction
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ColumnData.FemL0Z">
            <summary>
            effective length calculated in FEM for Z direction
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ColumnData.SupportTopY">
            <summary>
            Gets or sets the end support. Not necessary if effective lengths are defined.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ColumnData.SupportTopZ">
            <summary>
            Gets or sets the end support. Not necessary if effective lengths are defined.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ColumnData.SupportBottomY">
            <summary>
            Gets or sets the end support. Not necessary if effective lengths are defined.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ColumnData.SupportBottomZ">
            <summary>
            Gets or sets the end support. Not necessary if effective lengths are defined.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ColumnData.ImperfectionDirection">
            <summary>
            Gets or sets the direction of imperfection.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.EffectConsideredType">
            <summary>
            Effect concidered types
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.EffectConsideredType.IsolatedMember">
            <summary>
            Isolated system
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.EffectConsideredType.BracingSystem">
            <summary>
            Bracing system
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.SecondOrderEffectMethodEc2">
            <summary>
            The type of method for calculation second order effect.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SecondOrderEffectMethodEc2.NominalStiffness">
            <summary>
            The following model may be used to estimate the nominal stiffness of slender compression
            members with arbitrary cross section.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SecondOrderEffectMethodEc2.NominalCurvature">
            <summary>
            The method based on nominal curvature.
            This method is primarily suitable for isolated members with constant
            normal force and a defined effective length.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.ValueTypec0">
            <summary>
            Define type of c0 value
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ValueTypec0.UserDefined">
            <summary>
            Value is inputed by user
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ValueTypec0.ConstantDistributionMoment">
            <summary>
            Value depends on constant distribution of moment
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ValueTypec0.ParabolicDistributionMoment">
            <summary>
            Value depends on parabolic distribution of moment
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ValueTypec0.TriangularDistributionMoment">
            <summary>
            Value depends on triangular distribution of moment
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.ValueTypec">
            <summary>
            Define type of c value
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ValueTypec.UserDefined">
            <summary>
            Value is inputed by user
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ValueTypec.ConstantCurvatureDistribution">
            <summary>
            Value depends on constant curvature distributio
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ValueTypec.SinusoidalCurvatureDistribution">
            <summary>
            Value depends on sinusoidal curvature distribution
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.ColumnDataEc2">
            <summary>
            Column data Ec2
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Concrete.ColumnDataEc2.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ColumnDataEc2.BracedY">
            <summary>
            Braced structure Y-Y
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ColumnDataEc2.BracedZ">
            <summary>
            Braced structure Z-Z
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ColumnDataEc2.GeometricImperfectionsULS">
            <summary>
            Use calculation geometric imperfections for ULS
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ColumnDataEc2.GeometricImperfectionsSLS">
            <summary>
            Use calculation geometric imperfections for SLS
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ColumnDataEc2.EffectConsidered">
            <summary>
            Effect considered
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ColumnDataEc2.TotalL">
            <summary>
            Gets or sets the total length of building
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ColumnDataEc2.NumberOfVerticalMembersY">
            <summary>
            Gets or sets the number of vertical member in Y direction.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ColumnDataEc2.NumberOfVerticalMembersZ">
            <summary>
            Gets or sets the number of vertical member in Z direction.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ColumnDataEc2.Calculation2ndOrderEffect">
            <summary>
            Use calculation of 2nd order effect
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ColumnDataEc2.SecondOrderEffectMethod">
            <summary>
            Type of calculation method of 2nd order effect
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ColumnDataEc2.ValueTypeOfc0Y">
            <summary>
            Type of c0 value
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ColumnDataEc2.UserValuec0Y">
            <summary>
            c0 user value - for nominal stiffness
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ColumnDataEc2.ValueTypeOfc0Z">
            <summary>
            Type of c0 value
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ColumnDataEc2.UserValuec0Z">
            <summary>
            c0 user value - for nominal stiffness
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ColumnDataEc2.ValueTypeOfcY">
            <summary>
            Type of c value - for nominal curvature
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ColumnDataEc2.UserValuecY">
            <summary>
            c user value - for nominal stiffness
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ColumnDataEc2.ValueTypeOfcZ">
            <summary>
            Type of c value - for nominal curvature
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ColumnDataEc2.UserValuecZ">
            <summary>
            c user value - for nominal stiffness
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.ConcreteMemberType">
            <summary>
            Member type
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ConcreteMemberType.NoDefined">
            <summary>
            Not defined
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ConcreteMemberType.Beam">
            <summary>
            Beam
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ConcreteMemberType.Column">
            <summary>
            Column
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ConcreteMemberType.BeamSlab">
            <summary>
            Beam slab
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ConcreteMemberType.HollowCoreSlab">
            <summary>
            Hollw core slab
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ConcreteMemberType.TwoWaySlab">
            <summary>
            2-way slab
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ConcreteMemberType.Plate">
            <summary>
            Plate
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ConcreteMemberType.Wall">
            <summary>
            Wall
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.TwoWaySlabType">
            <summary>
            Two way slab types
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.TwoWaySlabType.Slab">
            <summary>
            slab model - only bending forces + shell
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.TwoWaySlabType.Wall">
            <summary>
            wall model - only membrane forces
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.TwoWaySlabType.DeepBeam">
            <summary>
            wall model - only membrane forces - detailing for deep beam
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.TwoWaySlabType.ShellAsPlate">
            <summary>
            shell model - all forces - detailing for slab
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.TwoWaySlabType.ShellAsWall">
            <summary>
            shell model - all forces - detailing for wall
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.ConcreteMemberData">
            <summary>
            Concrete member data base
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Concrete.ConcreteMemberData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ConcreteMemberData.MemberType">
            <summary>
            Gets or sets the structural type of member.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ConcreteMemberData.TwoWaySlabType">
            <summary>
            two way slab type
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ConcreteMemberData.TimeAxis">
            <summary>
            Time axis
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ConcreteMemberData.CalculationSetup">
            <summary>
            Calculation setup
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.MemberImportance">
            <summary>
            Member importance
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.MemberImportance.Major">
            <summary>
            Major
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.MemberImportance.Minor">
            <summary>
            Minor
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.DeflectionRequirementEc2">
            <summary>
            deflection calculation requirements
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.DeflectionRequirementEc2.Normal">
            <summary>
            The appearance and general utility of the structure could be impaired when the calculated
            sag of a beam, slab or cantilever subjected to quasi-permanent loads exceeds span/250.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.DeflectionRequirementEc2.Advanced">
            <summary>
            Deflections that could damage adjacent parts of the structure should be limited.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.ConcreteMemberDataEc2">
            <summary>
            Concrete member data Ec2
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Concrete.ConcreteMemberDataEc2.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ConcreteMemberDataEc2.ColumnData">
            <summary>
            Column data
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ConcreteMemberDataEc2.ExposureClassesData">
            <summary>
            Exposure classes
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ConcreteMemberDataEc2.BeamData">
            <summary>
            Beam data
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ConcreteMemberDataEc2.RelativeHumidity">
            <summary>
            Gets or sets the surrounding relative humidity.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ConcreteMemberDataEc2.CreepCoeffInfinityValue">
            <summary>
            type of creep coefficient
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ConcreteMemberDataEc2.CreepCoeffInfinity">
            <summary>
            Gets or sets the user defined creep coefficient in infinity. If null, then we calculate them.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ConcreteMemberDataEc2.MemberImportance">
            <summary>
            Gets or sets the member importance.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ConcreteMemberDataEc2.CoeffKxForWmax">
             <summary>
            coefficient kx to increase limited concrete crack - only Dutch NAD
             </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ConcreteMemberDataEc2.DeflectionRequirement">
            <summary>
            gets or set deflection requirement for deflection calculation
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.ConcreteSetup">
            <summary>
            Concrete setup base class
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Concrete.ConcreteSetup.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ConcreteSetup.SetupValues">
            <summary>
            Setup values
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.SetupValueEc2">
            <summary>
            Setup value types Ec2
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.LimitCheckValue">
            <summary>
            The limit check value, when check is over - check is not satisfactory
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MaxDisplayCheckValue">
            <summary>
            The infinity check value. This will be displayed when the check value equals to infinity
            or check wasn't calculated.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_GammaC">
            <summary>
            partial factor for concrete for ULS accidental design situation 2.4.2.4(1) Setup2Values, double, double
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_GammaS">
            <summary>
            partial factor for reinforcement for ULS accidental design situation 2.4.2.4(1) Setup2Values, double, double
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_GammaSP">
            <summary>
            partial factor for prestressed reinforcement for ULS accidental design situation 2.4.2.4(1) Setup2Values, double, double
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_CoeffEpsudByEpsuk">
            <summary>
            ration of design and characteristics strain limit - reinforcement
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_CoeffEpsudByEpsuk_p">
            <summary>
            ration of design and characteristics strain limit - prestressed reinforcement
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.IterationPrecission">
            <summary>
            Iteration Precission
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.IterationSteps">
            <summary>
            Iteration Steps
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.InteractionDiagramCheckType">
            <summary>
            InteractionDiagramCheckType
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_7_3_1_Wmax_Ec2_1_1">
            <summary>
            NA_7_3_1_Wmax_Ec2_1_1
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_7_2_K1">
            <summary>
            EN 1992-1-1 7.2 (2)
            DIN EN 1992-1-1/NA:2011-01 April 2013 NDP re 7.2 (2)
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_7_2_K2">
            <summary>
            EN 1992-1-1 7.2 (3)
            DIN EN 1992-1-1/NA:2011-01 April 2013 NDP re 7.2 (3)
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_7_2_K3">
            <summary>
            EN 1992-1-1 7.2 (5)
            DIN EN 1992-1-1/NA:2011-01 April 2013 NDP re 7.2 (5)
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_7_2_K4">
            <summary>
            EN 1992-1-1 7.2 (5)
            DIN EN 1992-1-1/NA:2011-01 April 2013 NDP re 7.2 (5)
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_7_2_K5">
            <summary>
            EN 1992-1-1 7.2 (5)
            DIN EN 1992-1-1/NA:2011-01 April 2013 NDP re 7.2 (5)
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_7_3_4_K3">
            <summary>
            NA_7_3_4_K3
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_7_3_4_K4">
            <summary>
            NA_7_3_4_K4
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_LoadDuration">
            <summary>
            NA_LoadDuration
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_Alphacc_92_1_1">
            <summary>
            NA_Alphacc_92_1_1
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_Alphact_92_1_1">
            <summary>
            NA_Alphact_92_1_1
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_Alphaccpl_92_1_1">
            <summary>
            NA_Alphaccpl_92_1_1
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_Alphactpl_92_1_1">
            <summary>
            NA_Alphactpl_92_1_1
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_Alphacc_92_2">
            <summary>
            NA_Alphacc_92_2
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_Alphact_92_2">
            <summary>
            NA_Alphact_92_2
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.Theta">
            <summary>
            Theta
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.ThetaMin">
            <summary>
            ThetaMin
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.ThetaMax">
            <summary>
            ThetaMax
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.CoeffCrdc">
            <summary>
            CoeffCrdc
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.CoeffK1">
            <summary>
            CoeffK1
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.CoeffVmin">
            <summary>
            CoeffVmin
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.CoeffNi1">
            <summary>
            CoeffNi1
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.AlphaCw">
            <summary>
            AlphaCw
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.CoeffKp">
            <summary>
            CoeffKp
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MinLongReinfPercBeam">
            <summary>
            detailing beam
            minimum long reinf percentage
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MaxLongReinfPercBeam">
            <summary>
            maximum long reinf percentage
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MinLongReinfDist">
            <summary>
            minimum long reinf distance
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MaxLongReinfDist">
            <summary>
            maximum long reinf distance
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MinShearReinfPercBeam">
            <summary>
            minimum shear reinf percentage
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MaxShearReinfPercBeam">
            <summary>
            maximum shear reinf percentage
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MaxShearReinfDistBeam">
            <summary>
            maximum shear reinf distance
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MaxShearReinfTransDist">
            <summary>
            maximum shear reinf trans distance
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MinLongReinfPercColumn">
            <summary>
            detailing column
            minimum long reinf percentage
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MaxLongReinfPercColumn">
            <summary>
            maximum long reinf percentage
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MinLongReinfDiamColumn">
            <summary>
            minimum long reinf diameter
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MinNoBarCircColumn">
            <summary>
            minimum number of bars of long reinf
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MaxShearReinfDistColumn">
            <summary>
            maximum shear reinf distance
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MinShearReinfDiamColumn">
            <summary>
            minimum shear reinf diameter
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.StressLimit_TypeFctm">
            <summary>
            stress limitation - type calculation of concrete stress limitation in tension
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.CoeffKl">
            <summary>
            lateral shear - coefficient k (6.2.4 (6))
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.Theta_t">
            <summary>
            lateral shear - angle theta - tensioned flange
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.Theta_c">
            <summary>
            lateral shear - angle theta - compressed flange
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.Theta_min_t">
            <summary>
            lateral shear - min angle theta - tensioned flange
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.Theta_min_c">
            <summary>
            lateral shear - min angle theta - compressed flange
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.Theta_max_f">
            <summary>
            lateral shear - max angle theta
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_5_2_5_Theta0">
            <summary>
            The the basic value of imperfections (See 5.2 (5)).
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_5_8_6_3_GammaCe">
            <summary>
            Partial safety factor for second order effect design, see 5.8.6 (3).
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_k_p">
            <summary>
            ductility factor for prestressed reinforcement
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.WeakenedByBars">
            <summary>
            weakened by bars - all bars area is subtract for concrete area
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.WeakenedByTendons">
            <summary>
            weakened by tendons - all tendons area is subtract for concrete area
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.WeakenedByDucts">
            <summary>
            weakened by ducts - all ducts area is subtract for concrete area
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.ModulusType">
            <summary>
            Type of E-modulus, which is used in calculations
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_5_10_9_r_sup_pre">
            <summary>
            Effects of prestressing at serviceability limit state and limit state of fatigue
            The values of rsup and rinf for use in a Country may be found in its National Annex. The recommended values are:
            - for pre-tensioning or unbonded tendons: rsup = 1,05 and rinf = 0,95
            - when appropriate measures (e.g. direct measurements of pretensioning) are taken: rsup = rinf = 1,0.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_5_10_9_r_inf_pre">
            <summary>
            Effects of prestressing at serviceability limit state and limit state of fatigue
            The values of rsup and rinf for use in a Country may be found in its National Annex. The recommended values are:
            - for pre-tensioning or unbonded tendons: rsup = 1,05 and rinf = 0,95
            - when appropriate measures (e.g. direct measurements of pretensioning) are taken: rsup = rinf = 1,0.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_5_10_9_r_sup_post">
            <summary>
            Effects of prestressing at serviceability limit state and limit state of fatigue
            The values of rsup and rinf for use in a Country may be found in its National Annex. The recommended values are:
            - for post-tensioning with bonded tendons: rsup = 1,10 and rinf = 0,90
            - when appropriate measures (e.g. direct measurements of pretensioning) are taken: rsup = rinf = 1,0.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_5_10_9_r_inf_post">
            <summary>
            Effects of prestressing at serviceability limit state and limit state of fatigue
            The values of rsup and rinf for use in a Country may be found in its National Annex. The recommended values are:
            - for post-tensioning with bonded tendons: rsup = 1,10 and rinf = 0,90
            - when appropriate measures (e.g. direct measurements of pretensioning) are taken: rsup = rinf = 1,0.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_2_4_2_2_Gamma_p_fav">
            <summary>
            Partial factors for prestress
            The value of 􀁊P,fav for use in a Country may be found in its National Annex. The recommended value for
            persistent and transient design situations is 1,0. This value may also be used for fatigue verification
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_2_4_2_2_Gamma_p_unfav">
            <summary>
            Partial factors for prestress
            The value of 􀁊P,unfav in the stability limit state for use in a Country may be found in its National Annex. The
            recommended value for global analysis is 1,3.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_7_3_1_DecompressionDistance">
            <summary>
            The durability of prestressed members may be more critically affected by cracking. In the absence of more
            detailed requirements, it may be assumed that limiting the calculated crack widths to the values of wmax given
            in Table 7.1N, under the frequent combination of loads, will generally be satisfactory for prestressed concrete
            members. The decompression limit requires that all parts of the bonded tendons or duct lie at least 100 mm
            within concrete in compression
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.PlaneDiagramCount">
            <summary>
            Number of the plane interaction diagrams
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.DivisionStrain">
            <summary>
            Division of the plane interaction diagram
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.EndOfCuring">
            <summary>
            The age of the concrete (days) at the beginning of drying shrinkage (or swelling) in days. Normally this is at the end of curing.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.UseGammalt">
            <summary>
            The safety factor for long-term extrapolation of delayed strains, see Ec2-2 B.105.
            Is used for calculation of creep effect. The value Gamma lt is calculated.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_7_3_1_Wmax_Ec2_2">
            <summary>
            NA_7_3_1_Wmax_Ec2_2
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.CheckCrackedCss">
            <summary>
            Check cracks during shear calculation
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.UserValuesForShear">
            <summary>
            User values for shear calculation - d and z
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.Table74N">
            <summary>
            Values in table 74N
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.DecompressionLimit">
            <summary>
            The decompression limit requires that all parts of the bonded tendons or duct lie at least 25 mm within concrete in compression for 1992-1-1
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.DecompressionLimit_2">
            <summary>
            The decompression limit requires that all parts of the bonded tendons or duct lie at least 25 mm within concrete in compression for 1992_2
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MinVertReinfPercWall">
            <summary>
            Minimal reinforcement ratio of vertical reinforcement
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MaxVertReinfPercWall">
            <summary>
            Maximal reinforcement ratio of vertical reinforcement
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MaxVertReinfDistWall">
            <summary>
            Maximal spacing of vertical reinforcement
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MinHorReinfPercWall">
            <summary>
            Minimal reinforcement ratio of horizontal reinforcement
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MaxHorReinfDistWall">
            <summary>
            Maximal spacing of horizontal reinforcement
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MinReinfPercDeepBeam">
            <summary>
            Minimal reinforcement ratio
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MaxReinfDistDeepBeam">
            <summary>
            Maximal spacing of reinforcement
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MinMainReinfPercSlab">
            <summary>
            Minimal reinforcement ratio of main reinforcement
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MaxMainReinfPercSlab">
            <summary>
            Maximal reinforcement ratio of main reinforcement
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MinTransReinfPercSlab">
            <summary>
            Minimal reinforcement ratio of transverse reinforcement
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MaxMainReinfDistSlab">
            <summary>
            Maximal spacing of main reinforcement
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MaxTransReinfDistSlab">
            <summary>
            Maximal spacing of transverse reinforcement
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_LimitQuasiPermanent">
            <summary>
            limit deformation - quasi-permanent deformation
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_LimitCharacteristic">
            <summary>
            limit deformation - characteristics deformation
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_LimitInfrequent">
            <summary>
            limit deformation - infrequent deformation
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MinTendonVertDist">
            <summary>
            Minimal vertical distance of tendons
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MinTendonHorDist">
            <summary>
            Minimal horizontal distance of tendons
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MinDuctVertDist">
            <summary>
            Minimal vertical distance of ducts
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MinDuctHorDist">
            <summary>
            Minimal horizontal distance of ducts
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_5_10_2_1_1_K1">
            <summary>
            maximum tendon stress coeff k1 in 5.10.2.1(1)P
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_5_10_2_1_1_K2">
            <summary>
            maximum tendon stress coeff k2 in 5.10.2.1(1)P
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_5_10_3_2_K7">
            <summary>
            maximum tendon stress coeff k7 in 5.10.3(2)
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_5_10_3_2_K8">
            <summary>
            maximum tendon stress coeff k8 in 5.10.3(2)
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.CheckCrossSectionCrackedIfOneCracked_7_2_Chapter">
            <summary>
            switch if the cross section should be calculated as cracked
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_8_3_2_MinDiameterOfMandrel">
            <summary>
            minimal diameter of mandrel acc table 8.1N
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.CoeffNi">
            <summary>
            strength reduction factor
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.LimitDeflectionNormal">
            <summary>
            limit value of deflection for deflection requirement normal
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.LimitDeflectionAdvanced">
            <summary>
            limit value of deflection for deflection requrement advanced
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MaxLengthOfZone">
            <summary>
            maximum length of zone to divide member for stiffness calculation
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.LimitDeflectionValue">
            <summary>
            limit value as value
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.LinearStiffnessForDeflection">
            <summary>
            linear stiffness for deflection calculation - only for debug
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.ImperfectionDirection">
            <summary>
            direction of imperfection for second order effect
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.InterpolationCurve">
            <summary>
            type of interpolate curce
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.InteractionDiagramDivision">
            <summary>
            division of interaction diagram for export
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_6_5_2_3_Ni">
            <summary>
            coefficient ni - SaT
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_6_5_4_4_K1">
            <summary>
            coefficient k1 - SaT
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_6_5_4_4_K2">
            <summary>
            coefficient k2 - SaT
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_6_5_4_4_K3">
            <summary>
            coefficient k3 - SaT
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_J_3_2_K1">
            <summary>
            coefficient k1 - SaT bracket
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_J_3_3_K2">
            <summary>
            coefficient k2 - SaT bracket
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.SaTMethodType">
            <summary>
            type of SAT method
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.DetailingBracketMethodType">
            <summary>
            calculation method of transversal reinforcement
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MinAnchLenShear">
            <summary>
            minimum anchorage length of shear reinforcement
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.AnchorageDetailType">
            <summary>
            anchorage of reinforcement according to type
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_GammaFfat">
            <summary>
            The partial factor for fatigue loads
            DIN EN 1992-1-1/NA:2011-01 April 2013 NDP re 6.8.4 (1)
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_GammaCfat">
            <summary>
            partial factor for concrete for fatigue - ULS accidental design situation 2.4.2.4(1) Setup2Values, double, double
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_GammaSfat">
            <summary>
            partial factor for reinforcement for fatigue - ULS accidental design situation 2.4.2.4(1) Setup2Values, double, double
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_GammaSPfat">
            <summary>
            partial factor for fatigue - for prestressed reinforcement for ULS accidental design situation 2.4.2.4(1) Setup2Values, double, double
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_TableFatigue63N">
            <summary>
            table 6.3N for fatigue - parameters for reinforcement steel
            DIN EN 1992-1-1/NA:2011-01 April 2013 NCI re 6.8.4, Table 6.3N
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_TableFatigue64N">
            <summary>
            table 6.4N for fatigue - parameters for prestress steel
            DIN EN 1992-1-1/NA:2011-01 April 2013 NCI re 6.8.4, Table 6.4N
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_TableFatigue6101N">
            <summary>
            table 6.101N for fatigue - parameters for reinforcement steel - Dutch annex
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_NCyclesFatigue">
            <summary>
            N fatigue cycles 6.8.7 Verification of concrete under compression or shear
            DIN EN 1992-1-1/NA:2011-01 April 2013 NDP re 6.8.7 (1)
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_K1Fatigue">
            <summary>
            coefficient k1 for fatigue
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.SetupTable45n1991_2">
            <summary>
            table 4.5(n) acc 1991-2 - Indicative number of heavy vehicles expected per year and per slow lane
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.FatigueMethod">
            <summary>
            6.8.7 Verification of concrete under compression or shear
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.CrossSectionCrackedPlate">
            <summary>
            on - the cross-section is calculated always as cracked
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.CalculateSrMaxAccUserSettings">
            <summary>
            sr,max, is calculated according to user
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.TableJointParameters">
            <summary>
            6.2.5 (2) Parameters of joint
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.ModulusTypeLongTermEffects">
            <summary>
            Type of E-modulus, which is used in calculations of long-term effects
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.JointShearStressType">
            <summary>
            Type of shear stress calculation
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.SubintervalsPerDecade">
            <summary>
            Minimal number of time nodes per decade
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_5_5_K1">
            <summary>
            returns K1 coefficient according to 5.5 EN 1992-1-1
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_5_5_K2">
            <summary>
            returns K2 coefficient according to 5.5 EN 1992-1-1
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_5_5_K3">
            <summary>
            returns K3 coefficient according to 5.5 EN 1992-1-1
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_5_5_K4">
            <summary>
            returns K4 coefficient according to 5.5 EN 1992-1-1
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_5_5_K5">
            <summary>
            returns K5 coefficient according to 5.5 EN 1992-1-1
            </summary>
            <returns>k5 - coeffciennt</returns>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_5_5_K6">
            <summary>
            returns K6 coefficient according to 5.5 EN 1992-1-1
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.InteractionDiagramExportType">
            <summary>
            type of interaction diagram for export
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.IsSetPrecissionForNullForces">
            <summary>
            settings if null forces are checked with some precissions
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NoResistanceOfConcreteInTension1D">
            <summary>
            No resistance of concrete in tension - members 1D
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NeglectRedistributionOfMoments">
            <summary>
            Neglect redistribution of moments My, Mz, if the ratio My/Mz is less than 10%
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_1_Wmax_Ec2">
            <summary>
            NA_1_Wmax_Ec2
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NonlinearCreep">
            <summary>
            calculation of non-linear creep
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.AllowCheckInAgeLess3Days">
            <summary>
            true to allow check in concrete age less than 3 days
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.TypeOfInitialstateOfCSS">
            <summary>
            TypeOfInitialstateOfCSS
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.BentUpBarsReduction">
            <summary>
            reduction coefficinet of bent-up bars
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.StrutAngleOptimalization">
            <summary>
            calculate optimalization of strut angle in shear, torsion and interaction
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.IsSetMrForULSMNKappaDiagram">
            <summary>
            IsSetMrForULSMNKappaDiagram
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_EN1992_3_7_3_1_112_x_min">
            <summary>
            x lim crack width
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_EN1992_3_CrackWidth">
            <summary>
            crack width limitation
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.CracksPassThrough">
            <summary>
            CracksPassThrough
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.CracWidthNationalAnnex">
            <summary>
            use some annex specialities in common eurocode
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.VestigalResistance">
            <summary>
            Vestigal resistance
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NoTendonExclusion">
            <summary>
            dont exclude tendons from calculation model of cross-section
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.HighStrengthConcrete">
            <summary>
            High strength concrete for DIN NCI re 3.1.2 (6)
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.InnerPerimeter">
            <summary>
            Inner perimeter for DIN NCI re 3.1.4 (5)
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.LimitLeverArm">
            <summary>
            Limit for lever arm acc. to DIN NCI re 6.2.3 (1)
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_K2Fatigue">
            <summary>
            6.8.4 (5) Pokud se použijí pravidla 6.8 pro vyhodnocení zbytkové životnosti existující konstrukce nebo pro
            posouzení potřeby jejího zesílení, pak pokud začala koroze, lze stanovit rozkmit napětí sníženým
            exponentem napětí k2 pro přímé a ohýbané pruty
            /// DIN EN 1992-1-1/NA:2011-01 April 2013 NDP re 6.8.4 (5)
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.DecompressionLimit_3">
            <summary>
            NCI re 7.3.1 (5)
            In order to keep within the decompression limit, it is required that the concrete surrounding the tendon is in compression over a width of 100 mm
            or 1/10 of the depth of section (whichever is greater). Stresses are to be checked in state II.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_TableFatigue63N_1992_2">
            <summary>
            table 6.3N for fatigue - parameters for reinforcement steel
            DIN EN 1992-2/NA 2013 NCI re 6.8.4, Table 6.3N
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_TableFatigue64N_1992_2">
            <summary>
            table 6.4N for fatigue - parameters for prestress steel
            DIN EN 1992-2/NA April 2013 NCI re 6.8.4, Table 6.4N
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.IncreaseJointResistance">
            <summary>
            the bearing capacity of the reinforcement crossing the joint due to shear friction (third term of the equation) may be increased to become ρ fyd (1,2 μ sin α + cos α).
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.Equation629">
            <summary>
            Equation 6.29 acc. to DIN NCI re 6.3.2 (4)
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.Equation631">
            <summary>
            Equation 6.31 acc. to DIN NCI re 6.3.2 (5)
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_Table7_101DE_1992_2">
            <summary>
            NDP zu 7.3.1 (105) Es gelten Tabelle 7.101DE
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_Table7_102DE_1992_2">
            <summary>
            NDP zu 7.3.1 (105) Es gelten Tabelle 7.102DE
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.FatigueJointCohesion">
            <summary>
            Under fatigue or dynamic loads, the values for c in 6.2.5 (1) should be halved.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.Table74N_1992_1_1">
            <summary>
            Values in table 74N
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_Table7_103DE_1992_2">
            <summary>
            NDP zu 7.3.1 (105) Es gelten Tabelle 7.103DE
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MaxBentUpReinfDist">
            <summary>
            maximum longitudinal spacing of bent-up bars
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MinShearReinfPercSlab">
            <summary>
            Minimal shear reinforcement percentage for slab
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MaxShearReinfDistSlab">
            <summary>
            maximum longitudinal spacing of successive series of links for slab
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MaxShearReinfTransDistSlab">
            <summary>
            maximum transverse spacing of shear reinforcement for slab
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MinShearReinfDiamColumn_EN2_2">
            <summary>
            minimum shear reinf diameter EN2-2
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.CoeffNi1_EN2_2">
            <summary>
            coeff ni1 for EN2-2
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MinLongReinfPercBeam_EN2_2">
            <summary>
            minimum long reinf percentage for EN2-2
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MaxLongReinfPercBeam_EN2_2">
            <summary>
            maximum long reinf percentage for EN2-2
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MaxMainReinfDistSlab_EN2_2">
            <summary>
            maximum main long reinf distance for EN2-2
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MaxTransReinfDistSlab_EN2_2">
            <summary>
            maximum transversal long reinf distance for EN2-2
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MaxHorReinfDistWall_EN2_2">
            <summary>
            maximum horizontal long reinf distance for EN2-2
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.MinReinfPercDeepBeam_EN2_2">
            <summary>
            minimum long reinf percentage for EN2-2
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_5_5_K5_fck_BiggerThan_50MPa">
            <summary>
            returns K5 coefficient according to DIN EN 1992-2/NA April 2013 NDP re 5.5 (4)
            </summary>
            <returns>k5 - coeffciennt</returns>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_5_5_K6_fck_BiggerThan_50MPa">
            <summary>
            returns K5 coefficient according to DIN EN 1992-2/NA April 2013NDP re 5.5 (4)
            </summary>
            <returns>k5 - coeffciennt</returns>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_7_3_4_K1">
            <summary>
            is a coefficient which takes account of the bond properties of the bonded reinforcement
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_7_3_4_K2">
            <summary>
            is a coefficient which takes account of the distribution of strain
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_NN_112_Gamma_sd">
            <summary>
            coefficient
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.CoefficientOfTensionConcrete">
            <summary>
            coefficient witch reduce the tension strength
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.FindOnly2DPlaneDeformation">
            <summary>
            FindOnly2DPlaneDeformation
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.SimplifiedCssModel">
            <summary>
            Use simplified calculation model of cross-section (reinforcement bars in layers are substituted by rectangle polygon component)
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_GammaC_BLR">
            <summary>
            BLR partial factor for concrete for ULS accidental design situation 2.4.2.4(1) Setup2Values, double, double
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_GammaS_BLR">
            <summary>
            BLR partial factor for reinforcement for ULS accidental design situation 2.4.2.4(1) Setup2Values, double, double
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_GammaSP_BLR">
            <summary>
            partial factor for prestressed reinforcement for ULS accidental design situation 2.4.2.4(1) Setup2Values, double, double
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.BLRPRecisionCheckValue">
            <summary>
            precision of bridge load rating - check value
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.TypeSLSCalculation">
            <summary>
            set of SLS calculation
            0 - both
            1 - short-term
            2 - long-term
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NoResistanceOfConcreteInTension2D">
            <summary>
            No resistance of concrete in tension - plates
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NumberPartsOfDM">
            <summary>
            number of parts on design member
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.CalculateShrinkage">
            <summary>
            calculate influence of shrinkage to stiffnesses
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.NA_EN1992_3_CrackWidth_XA2_XA3_XF2_XF3_XF4">
            <summary>
            crack width limitation
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.CalculationOfStressLimitationK1">
            <summary>
            calculation of stress limitation k1
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.CalculationOfStressLimitationK2">
            <summary>
            calculation of stress limitation k2
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.SetupValueEc2.CalculationOfStressLimitationK3">
            <summary>
            calculation of stress limitation k3
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.NationalAnnexCode">
            <summary>
            Annex code
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.NationalAnnexCode.NoAnnex">
            <summary>
            No national annex defined
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.NationalAnnexCode.Czech">
            <summary>
            Czech national annex
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.NationalAnnexCode.Slovak">
            <summary>
            Slovak national annex
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.NationalAnnexCode.Austrian">
            <summary>
            Austria national annex
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.NationalAnnexCode.German">
            <summary>
            Germany national annex
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.NationalAnnexCode.Dutch">
            <summary>
            Dutch national annex
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.NationalAnnexCode.Belgian">
            <summary>
            Belgian national annex
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.NationalAnnexCode.French">
            <summary>
            France national annex
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.NationalAnnexCode.English">
            <summary>
            England national annex
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.NationalAnnexCode.Singapore">
            <summary>
            Singapore national annex
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.NationalAnnexCode.Polish">
            <summary>
            Polish national annex
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.ConcreteSetupEc2">
            <summary>
            Concrete setup Ec2
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ConcreteSetupEc2.Annex">
            <summary>
            Annex code
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ConcreteSetupEc2.Nad">
            <summary>
            Nad strategy
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.ExposureClassEc2">
            <summary>
            Type of exposure class
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ExposureClassEc2.X0">
            <summary>
            No risk of corrosion or attack - very dry
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ExposureClassEc2.XC1">
            <summary>
            Corrosion induced by carbonation - dry or permanently wet
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ExposureClassEc2.XC2">
            <summary>
            Corrosion induced by carbonation - wet, rarely dry
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ExposureClassEc2.XC3">
            <summary>
            Corrosion induced by carbonation - moderate humidity
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ExposureClassEc2.XC4">
            <summary>
            Corrosion induced by carbonation - cyclic wet and dry
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ExposureClassEc2.XD1">
            <summary>
            Corrosion induced by chlorides - moderate humidity
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ExposureClassEc2.XD2">
            <summary>
            Corrosion induced by chlorides - wet, rarely dry
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ExposureClassEc2.XD3">
            <summary>
            Corrosion induced by chlorides - cyclic wet and dry
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ExposureClassEc2.XS1">
            <summary>
            Corrosion induced by chlorides from sea water - exposed to airborne salt but not in direct contact with sea water
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ExposureClassEc2.XS2">
            <summary>
            Corrosion induced by chlorides from sea water - permanently submerged
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ExposureClassEc2.XS3">
            <summary>
            Corrosion induced by chlorides from sea water - tidal, splash and spray zones
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ExposureClassEc2.XF1">
            <summary>
            Freeze/Thaw Attack - moderate water saturation, without de-icing agent
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ExposureClassEc2.XF2">
            <summary>
            Freeze/Thaw Attack - moderate water saturation, with de-icing agent
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ExposureClassEc2.XF3">
            <summary>
            Freeze/Thaw Attack - high water saturation, without de-icing agents
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ExposureClassEc2.XF4">
            <summary>
            Freeze/Thaw Attack - high water saturation with de-icing agents or sea water
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ExposureClassEc2.XA1">
            <summary>
            Chemical attack - slightly aggressive chemical environment according to EN 206-1, Table 2
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ExposureClassEc2.XA2">
            <summary>
            Chemical attack - moderately aggressive chemical environment according to EN 206-1, Table 2
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.ExposureClassEc2.XA3">
            <summary>
            Chemical attack - highly aggressive chemical environment according to EN 206-1, Table 2
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.ExposureClassesDataEc2">
            <summary>
            Exposure Classes Ec2
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Concrete.ExposureClassesDataEc2.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ExposureClassesDataEc2.NoCorrosionCheck">
            <summary>
            Check box No corrosion
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ExposureClassesDataEc2.CarbonationCheck">
            <summary>
            Check box Carbonation
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ExposureClassesDataEc2.Carbonation">
            <summary>
            Combo box Carbonation
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ExposureClassesDataEc2.ChloridesCheck">
            <summary>
            Check box Chlorides
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ExposureClassesDataEc2.Chlorides">
            <summary>
            Combo box Chlorides
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ExposureClassesDataEc2.ChloridesFromSeaCheck">
            <summary>
            Check box Chlorides from sea
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ExposureClassesDataEc2.ChloridesFromSea">
            <summary>
            Combo box Chlorides from sea
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ExposureClassesDataEc2.FreezeAttackCheck">
            <summary>
            Check box Freeze/Thaw Attack
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ExposureClassesDataEc2.FreezeAttack">
            <summary>
            Combo box Freeze/Thaw Attack
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ExposureClassesDataEc2.ChemicalAttackCheck">
            <summary>
            Check box Chemical Attack
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ExposureClassesDataEc2.ChemicalAttack">
            <summary>
            Combo box Chemical Attack
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.Load.CssComponentLoading">
            <summary>
            Cross-section coponent loading
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Concrete.Load.CssComponentLoading.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.Load.CssComponentLoading.Id">
            <summary>
            Id of cross-section component
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.Load.CssComponentLoading.Loading">
            <summary>
            Loading
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.Load.CssComponentTimeLoading">
            <summary>
            Cross-section coponent loading
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.Load.CssComponentTimeLoading.Time">
            <summary>
            Time
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.Load.CssComponentTimeLoading.Loading">
            <summary>
            Loading
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.Load.FatigueLoading">
            <summary>
            Fatigue loading
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Concrete.Load.FatigueLoading.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.Load.FatigueLoading.MaxLoading">
            <summary>
            Max. cyclic loading
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.Load.FatigueLoading.MinLoading">
            <summary>
            Min. cyclic loading
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.Load.LoadingSLS">
            <summary>
            Loading SLS
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Concrete.Load.LoadingSLS.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.Load.LoadingSLS.InternalForces">
            <summary>
            Internal force in section (permanent for staged section)
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.Load.LoadingSLS.InternalForcesVariable">
            <summary>
            Variable internal force in staged section only
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.Load.LoadingSLS.InternalForcesImperfection">
            <summary>
            Internal forces of imperfection effect
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.Load.LoadingULS">
            <summary>
            Loading ULS
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Concrete.Load.LoadingULS.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.Load.LoadingULS.InternalForces">
            <summary>
            Internal force in section (permanent for staged section)
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.Load.LoadingULS.InternalForcesVariable">
            <summary>
            Variable internal force in staged section only
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.Load.LoadingULS.InternalForcesBegin">
            <summary>
            Internal forces at the beginnig
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.Load.LoadingULS.InternalForcesEnd">
            <summary>
            Internal forces at the end
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.Load.LoadingULS.InternalForces2ndOrder">
            <summary>
            Internal forces of 2nd order effect
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.Load.LoadingULS.InternalForcesImperfection">
            <summary>
            Internal forces of imperfection effect
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.Load.StageLoading">
            <summary>
            Staged loading
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.Load.StageLoading.Time">
            <summary>
            Time
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.Load.StageLoading.PermanentForces">
            <summary>
            Primary internal force in section
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.Load.PrestressLoading">
            <summary>
            Prestress loading
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.Load.PrestressLoading.Time">
            <summary>
            Time
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.Load.PrestressLoading.PrimaryForces">
            <summary>
            Primary internal force in section
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.Load.PrestressLoading.SecondaryForces">
            <summary>
            Secondary internal force in section
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.Load.CssEffectType">
            <summary>
            Type of effects in cross-section component
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.Load.CssEffectType.InternalForce">
            <summary>
            internal forces
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.Load.CssEffectType.DeformationPlane">
            <summary>
            deformation plane
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.Load.PrestressInputType">
            <summary>
            Type of input of prestressing
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.Load.PrestressInputType.AfterTransfer">
            <summary>
            stress after transfer - long term losses will be calculated
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Concrete.Load.PrestressInputType.AfterLongTermLosses">
            <summary>
            stress after long term losses is added to tendon
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.Load.StagesLoading">
            <summary>
            Stages loading
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Concrete.Load.StagesLoading.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.Load.StagesLoading.CssEffectType">
            <summary>
            Type of effects in cross-section component
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.Load.StagesLoading.PrestressInputType">
            <summary>
            Type of input of prestressing
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.Load.StagesLoading.PermanentLoad">
            <summary>
            Permanent loading
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.Load.StagesLoading.PrestressLoad">
            <summary>
            Prestress loading
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.Load.StagesLoading.CssComponentLoad">
            <summary>
            Cross-section component loading
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.Load.StagesLoading.TendonComponentLoad">
            <summary>
            Tendon component loading
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.Load.TendonComponentLoading">
            <summary>
            Tendon component loading
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.Load.TendonComponentLoading.Id">
            <summary>
            Tendon component Id
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.Load.TendonComponentLoading.Loading">
            <summary>
            Loading
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.Load.TendonLoading">
            <summary>
            Tendon loading base class
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.Load.TendonStressLoading">
            <summary>
            Tendon stress loading
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Concrete.Load.TendonStressLoading.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.Load.TendonStressLoading.Stresses">
            <summary>
            Tendon stress
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.Load.TendonTimeStressLoading">
            <summary>
            Tendon stress loading
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.Load.TendonTimeStressLoading.Time">
            <summary>
            Time
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.Load.TendonTimeStressLoading.Stress">
            <summary>
            Tendon stress
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.Load.TendonLossesLoading">
            <summary>
            Tendon losses loading
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.Load.TendonLossesLoading.Time">
            <summary>
            Time
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.NadStrategyConcrete">
            <summary>
            Nad strategy concrete
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Concrete.NadStrategyConcrete.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.NadStrategyConcrete.SetupValues">
            <summary>
            Setup values
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.NadSetupValue">
            <summary>
            Setup value base
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.NadSetupValue.Id">
            <summary>
            Gets or sets the value id.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.NadSetupValue.IsActive">
            <summary>
            Is active
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.NadSetupValueBool">
            <summary>
            Setup value bool
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.NadSetupValueBool.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.NadSetupValueShort">
            <summary>
            Setup value bool
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.NadSetupValueShort.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.NadSetupValueInt">
            <summary>
            Setup value int
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.NadSetupValueInt.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.NadSetupValueLong">
            <summary>
            Setup value long
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.NadSetupValueLong.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.NadSetupValueFloat">
            <summary>
            Setup value float
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.NadSetupValueFloat.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.NadSetupValueDouble">
            <summary>
            Setup value double
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.NadSetupValueDouble.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.ProjectDataConcrete">
            <summary>
            Project data concrete
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Concrete.ProjectDataConcrete.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ProjectDataConcrete.DesignWorkingLife">
            <summary>
            Design working fife
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.ProjectDataConcreteEc2">
            <summary>
            Project data concrete Ec2
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Concrete.ProjectDataConcreteEc2.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ProjectDataConcreteEc2.CodeEN1992_2">
            <summary>
            Flag if code EN 1992-2 is included
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.ProjectDataConcreteEc2.CodeEN1992_3">
            <summary>
            Flag if code EN 1992-2 is included
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.SetupValue">
            <summary>
            Setup value base
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.SetupValue.Id">
            <summary>
            Gets or sets the value id.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.SetupValueBool">
            <summary>
            Setup value bool
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.SetupValueBool.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.SetupValueShort">
            <summary>
            Setup value bool
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.SetupValueShort.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.SetupValueInt">
            <summary>
            Setup value int
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.SetupValueInt.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.SetupValueLong">
            <summary>
            Setup value long
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.SetupValueLong.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.SetupValueFloat">
            <summary>
            Setup value float
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.SetupValueFloat.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.SetupValueDouble">
            <summary>
            Setup value double
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.SetupValueDouble.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.StagedCheckSection">
            <summary>
            Single check section
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Concrete.StagedCheckSection.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.StagedCheckSection.StagesLoading">
            <summary>
            Stages loading
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.StandardCheckSection">
            <summary>
            Single check section
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Concrete.StandardCheckSection.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.StagedCheckSectionExtreme">
            <summary>
            Standard check section extreme
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Concrete.StagedCheckSectionExtreme.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.StagedCheckSectionExtreme.Time">
            <summary>
            Time
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.StandardCheckSectionExtreme">
            <summary>
            Standard check section extreme
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Concrete.StandardCheckSectionExtreme.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.TimePoint">
            <summary>
            Point on time axis
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Concrete.TimePoint.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.TimePoint.Name">
            <summary>
            Name of time point
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.TimePoint.Time">
            <summary>
            Time
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.TimePoint.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.TimePoint.Stage">
            <summary>
            Stage
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.TimePoint.Age">
            <summary>
            Age
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.TimePoint.Prestressing">
            <summary>
            Prestressing
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.TimePoint.LastConstructionStage">
            <summary>
            Last construction stage - Time of the start of cyclic loading for fatigue check
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.TimePoint.AllowCheckInAgeLess3Days">
            <summary>
            true to allow chec in age less 3 days
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.TimePoint.Fix2DRotation">
            <summary>
            true to fix around Y axis ( Mz is not taken into account )
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Concrete.TimeAxis">
            <summary>
            Time axis
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Concrete.TimeAxis.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.TimeAxis.Times">
            <summary>
            Times
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Concrete.TimeAxis.CreepTime">
            <summary>
            time from which the creep is calculated
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Connection.ConnectionInfo">
            <summary>
            Provides information about connection
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConnectionInfo.Name">
            <summary>
            The name of the connection
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConnectionInfo.Description">
            <summary>
            The description of the connection
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConnectionInfo.Id">
            <summary>
            The id of the connection
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConnectionInfo.Identifier">
            <summary>
            The identifier of the connection
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Connection.ConProjectInfo">
            <summary>
            Provides informationabout
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConProjectInfo.Name">
            <summary>
            The name of the project
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConProjectInfo.Description">
            <summary>
            The description of the project
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConProjectInfo.ProjectNumber">
            <summary>
            Project number
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConProjectInfo.Author">
            <summary>
            Name of the author
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConProjectInfo.DesignCode">
            <summary>
            Design code
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConProjectInfo.Date">
            <summary>
            Date
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConProjectInfo.Connections">
            <summary>
            Connections in the project
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Connection.IAppController">
            <summary>
            Enables controlling of the application IdeaConnection
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Connection.IAppController.OpenIdeaConnection(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Opens the application Idea Connection and waits till this application is closed
            </summary>
            <param name="iom">The input stream which includes IdeaOpenModel (in xml format)</param>
            <param name="results">The input stream which includes OpenModelResult (in xml format)</param>
            <param name="existingConProj">The input stream which includes Idea Connection project (binary data)</param>
            <param name="requiredTemplate">The input stream which includes Idea Connection remplate (CONTEMP file)</param>
            <param name="importSettings">Connection import settings</param>
        </member>
        <member name="M:IdeaRS.OpenModel.Connection.IAppController.OpenIdeaConnectionService">
             <summary>
            
             </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Connection.IAppController.GetConnectionData(System.Guid)">
             <summary>
            
             </summary>
             <param name="connectionId"></param>
             <returns></returns>
        </member>
        <member name="M:IdeaRS.OpenModel.Connection.IAppController.GetIdeaConnectionProject">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="T:IdeaRS.OpenModel.Connection.ConnectionData">
             <summary>
             Provides data of the connection
             </summary>
            
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConnectionData.Beams">
            <summary>
            Connected beams
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConnectionData.Plates">
            <summary>
            Plates of the connection
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConnectionData.BoltGrids">
            <summary>
            Bolt grids which belongs to the connection
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConnectionData.Welds">
            <summary>
            Welds of the connection
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConnectionData.ConcreteBlocks">
            <summary>
            ConcreteBlocksof the connection
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Connection.ConcreteBlockData">
            <summary>
            Provides data of the single concrete block
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConcreteBlockData.Id">
            <summary>
            Plate unique ID
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConcreteBlockData.Name">
            <summary>
            Name of the concrete block
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConcreteBlockData.Depth">
            <summary>
            Depth of the concrete block
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConcreteBlockData.Material">
            <summary>
            Name of the material
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConcreteBlockData.Center">
            <summary>
            Center of the concrete block LCS
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConcreteBlockData.OutlinePoints">
            <summary>
            Outline points
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConcreteBlockData.Origin">
            <summary>
            Origin of the concrete block LCS
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConcreteBlockData.AxisX">
            <summary>
            LCS - Axis X
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConcreteBlockData.AxisY">
            <summary>
            LCS - Axis Y
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConcreteBlockData.AxisZ">
            <summary>
            LCS - Axis Z
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConcreteBlockData.Region">
            <summary>
            Geometry of the concrete block in svg format
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConcreteBlockData.OriginalModelId">
            <summary>
            Get or set the identification in the original model
            In the case of the imported connection from another application
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Connection.BoltGrid">
            <summary>
            Data of the bolt grid
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.BoltGrid.Id">
            <summary>
            Unique Id of the bolt grid
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.BoltGrid.IsAnchor">
            <summary>
            Is Anchor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.BoltGrid.AnchorLen">
            <summary>
            Anchor lenght
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.BoltGrid.HoleDiameter">
            <summary>
            The diameter of the hole
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.BoltGrid.Diameter">
            <summary>
            The diameter of bold
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.BoltGrid.HeadDiameter">
            <summary>
            The head diameter of bold
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.BoltGrid.DiagonalHeadDiameter">
            <summary>
            The Diagonal Head Diameter of bold
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.BoltGrid.HeadHeight">
            <summary>
            The Head Height of bold
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.BoltGrid.BoreHole">
            <summary>
            The BoreHole of bold
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.BoltGrid.TensileStressArea">
            <summary>
            The Tensile Stress Area of bold
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.BoltGrid.NutThickness">
            <summary>
            The Nut Thickness of bold
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.BoltGrid.BoltAssemblyName">
            <summary>
            The description of the bolt assembly
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.BoltGrid.Standard">
            <summary>
            The standard of the bolt assembly
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.BoltGrid.Material">
            <summary>
            The material of the bolt assembly
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.BoltGrid.Origin">
            <summary>
            Origin of the bolt grid LCS
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.BoltGrid.AxisX">
            <summary>
            Bolt grid LCS - Axis X
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.BoltGrid.AxisY">
            <summary>
            Bolt grid LCS - Axis Y
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.BoltGrid.AxisZ">
            <summary>
            Bolt grid LCS - Axis Z
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.BoltGrid.Positions">
            <summary>
            Positions of holes in the local coodinate system of the bolt grid
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.BoltGrid.ConnectedPlates">
            <summary>
            Identifiers of the connected plates
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.BoltGrid.ConnectedPartIds">
            <summary>
            Id of the weld
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Connection.BeamData">
            <summary>
            Provides data of the connected beam
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.BeamData.Id">
            <summary>
            Id of the beam
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.BeamData.Name">
            <summary>
            Name of the beam
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.BeamData.Plates">
            <summary>
            Plates of the beam
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.BeamData.CrossSectionType">
            <summary>
            Type of cross section
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.BeamData.MPRLName">
            <summary>
            MPRL name of beam
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.BeamData.OriginalModelId">
            <summary>
            Get or set the identification in the original model
            In the case of the imported connection from another application
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.BeamData.Cuts">
            <summary>
            Cuts on the beam
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.BeamData.IsAdded">
            <summary>
            Is addes beam
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.BeamData.AddedMember">
            <summary>
            Added member
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.BeamData.MirrorY">
            <summary>
            Mirro by Y
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Connection.WeldType">
             <summary>
            enum of weld types
             </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Connection.WeldType.NotSpecified">
            <summary>
            NotSpecified
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Connection.WeldType.Fillet">
            <summary>
            Fillet
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Connection.WeldType.DoubleFillet">
            <summary>
            DoubleFillet
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Connection.WeldType.Bevel">
            <summary>
            Bevel
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Connection.WeldType.Square">
            <summary>
            Square
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Connection.WeldType.Plug">
            <summary>
            Plug
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Connection.WeldType.LengthAtHaunch">
            <summary>
            LengthAtHaunch
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Connection.WeldType.FilletRear">
            <summary>
            FilletRear
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Connection.WeldType.Contact">
            <summary>
            Contact
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Connection.WeldType.Intermittent">
            <summary>
            Intermittent
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Connection.WeldData">
            <summary>
            Provides data of the single weld
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.WeldData.Id">
            <summary>
            Id of the weld
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.WeldData.Name">
            <summary>
            Name of the weld
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.WeldData.Thickness">
            <summary>
            Thickness of the weld
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.WeldData.Material">
            <summary>
            Name of the material
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.WeldData.WeldType">
            <summary>
            Type of the weld
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.WeldData.ConnectedPartIds">
            <summary>
            Id of the weld
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.WeldData.Start">
            <summary>
            Start of the weld
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.WeldData.End">
            <summary>
            End of the weld
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Connection.PlateData">
            <summary>
            Provides data of the single plate
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.PlateData.Id">
            <summary>
            Plate unique ID
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.PlateData.Name">
            <summary>
            Name of the plate
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.PlateData.Thickness">
            <summary>
            Thickness of the plate
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.PlateData.Material">
            <summary>
            Name of the material
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.PlateData.OutlinePoints">
            <summary>
            Outline points
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.PlateData.Origin">
            <summary>
            Origin of the plate LCS
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.PlateData.AxisX">
            <summary>
            LCS - Axis X
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.PlateData.AxisY">
            <summary>
            LCS - Axis Y
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.PlateData.AxisZ">
            <summary>
            LCS - Axis Z
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.PlateData.Region">
            <summary>
            Geometry of the plate in svg format
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.PlateData.OriginalModelId">
            <summary>
            Get or set the identification in the original model
            In the case of the imported connection from another application
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Connection.CutData">
            <summary>
            Provides data of the cut beam
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.CutData.PlanePoint">
            <summary>
            3DPlane Point
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.CutData.PlaneNormalX">
            <summary>
            3DPlane Normal AxisX
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.CutData.PlaneNormalY">
            <summary>
            3DPlane Normal AxisY
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Connection.ConnectionPoint">
            <summary>
            ConnectedDesignMemeber
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Connection.ConnectionPoint.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConnectionPoint.Name">
            <summary>
            Name of Element
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConnectionPoint.NodeId">
            <summary>
            Id of node
            </summary>
            <remarks>
            This property is not longer supported. Use the <see cref="P:IdeaRS.OpenModel.Connection.ConnectionPoint.Node"/> property instead of this one.
            </remarks>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConnectionPoint.Node">
            <summary>
            Node
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConnectionPoint.ConnectedMembers">
            <summary>
            Connected members as collection of IDs.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConnectionPoint.BearingMember">
            <summary>
            Bearing Member
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConnectionPoint.NodeIdSerialize">
            <summary>
            Gets or sets the Id of node for Xml serialization (back compatibility).
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Connection.ConnectedMember">
            <summary>
            ConnectedMember
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConnectedMember.MemberId">
            <summary>
            MemberId
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConnectedMember.IsContinuous">
            <summary>
            IsContinuous
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConnectedMember.OriginalModelId">
            <summary>
            Get or set the identification in the original model
            In the case of the imported connection from another application
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConnectedMember.Length">
            <summary>
            Length of the member
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Connection.CheckResSummary">
            <summary>
            Check summary
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.CheckResSummary.CheckValue">
            <summary>
            Check value
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.CheckResSummary.CheckStatus">
            <summary>
            Status of check
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.CheckResSummary.LoadCaseId">
            <summary>
            Id of Load Case
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.CheckResSummary.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.CheckResSummary.UnityCheckMessage">
            <summary>
            Detail message about overall check
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Connection.ConnectionCheckRes">
            <summary>
            Results for connection in project
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Connection.ConnectionCheckRes.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConnectionCheckRes.CheckResSummary">
            <summary>
            List of CheckResSummary
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConnectionCheckRes.CheckResPlate">
            <summary>
            List of check results for plates
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConnectionCheckRes.CheckResWeld">
            <summary>
            List of check results for welds
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConnectionCheckRes.CheckResBolt">
            <summary>
            List of check results for bolts
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConnectionCheckRes.CheckResAnchor">
            <summary>
            List of check results for anchors
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConnectionCheckRes.CheckResConcreteBlock">
            <summary>
            List of check results for concrete blocks
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConnectionCheckRes.Name">
            <summary>
            Name of connection
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConnectionCheckRes.ConnectionID">
            <summary>
            Guid of connection
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConnectionCheckRes.Messages">
            <summary>
            Gets or sets the list of errors, that apears during validation and/or calculation.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Connection.ConnectionResultsData">
            <summary>
            Results for all connections in project
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Connection.ConnectionResultsData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConnectionResultsData.ConnectionCheckRes">
            <summary>
            List of ConnectionCheckRes
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Connection.CheckResConcreteBlock">
            <summary>
            Check value for Concrete Block
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.CheckResConcreteBlock.Name">
            <summary>
            Name of Concrete Block
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.CheckResConcreteBlock.UnityCheck">
            <summary>
            Unity Check
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.CheckResConcreteBlock.CheckStatus">
            <summary>
            Status of the Check
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.CheckResConcreteBlock.LoadCaseId">
            <summary>
            Id of Load Case
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Connection.CheckResBolt">
            <summary>
            Check value for Bolts
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.CheckResBolt.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.CheckResBolt.UnityCheck">
            <summary>
            Unity Check
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.CheckResBolt.CheckStatus">
            <summary>
            Status of the Check
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.CheckResBolt.LoadCaseId">
            <summary>
            Id of Load Case
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Connection.CheckResAnchor">
            <summary>
            Check value for Anchor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.CheckResAnchor.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.CheckResAnchor.UnityCheck">
            <summary>
            Unity Check
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.CheckResAnchor.CheckStatus">
            <summary>
            Status of the Check
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.CheckResAnchor.LoadCaseId">
            <summary>
            Id of Load Case
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Connection.CheckResPlate">
            <summary>
            Check value for Plate
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.CheckResPlate.Name">
            <summary>
            Name of Plate
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.CheckResPlate.CheckStatus">
            <summary>
            Status of the Check
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.CheckResPlate.LoadCaseId">
            <summary>
            Id of Load Case
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.CheckResPlate.MaxStrain">
            <summary>
            Max Strain
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.CheckResPlate.MaxStress">
            <summary>
            Max Stress
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.CheckResPlate.Items">
            <summary>
            In case of presentation of groups plates (uncoiled beams)
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Connection.CheckResWeld">
            <summary>
            Check value for Weld
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.CheckResWeld.Name">
            <summary>
            Name of Weld
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.CheckResWeld.Id">
            <summary>
            Unique id of weld
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.CheckResWeld.UnityCheck">
            <summary>
            Unity Check Stress
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.CheckResWeld.CheckStatus">
            <summary>
            Status of the Check
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.CheckResWeld.LoadCaseId">
            <summary>
            Id of Load Case
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.CheckResWeld.Items">
            <summary>
            In case of presentation of groups plates (uncoiled beams)
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Connection.ConnectionLoadInfo">
            <summary>
            Information about connection load update
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConnectionLoadInfo.Description">
            <summary>
            Name of Weld
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ConnectionLoadInfo.BeamMapping">
            <summary>
            BeamMapping
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Connection.BeamLoadsImportMappingData">
            <summary>
            BeamLoadsImportMappingData
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Connection.BeamLoadsImportMappingData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.BeamLoadsImportMappingData.BeamID">
            <summary>
            BeamID
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.BeamLoadsImportMappingData.CADBeamID">
            <summary>
            CADBeamID
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.BeamLoadsImportMappingData.CoeffVM_Y">
            <summary>
            CoeffVM_Y
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.BeamLoadsImportMappingData.CoeffVM_Z">
            <summary>
            CoeffVM_Z
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.BeamLoadsImportMappingData.CoeffVM_X">
            <summary>
            CoeffVM_X
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Connection.IdeaConImportSettings">
            <summary>
            Represents settings of improt options into Idea Connections
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Connection.IdeaConImportSettings.#ctor">
            <summary>
            Constructor - it sets default values
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.IdeaConImportSettings.UseWizard">
            <summary>
            Open import wizard window
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.IdeaConImportSettings.DefaultBoltAssembly">
            <summary>
            Gets or sets the name of the default bolt assembly 
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.IdeaConImportSettings.DefaultSteelMaterial">
            <summary>
            Gets or sets the name of the default material of plates which are added from the template
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.IdeaConImportSettings.ExportAllLinearCombination">
            <summary>
            All linear combination will be exported to IDEA connection
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.IdeaConImportSettings.OnePageWizard">
            <summary>
            One page wizard
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.IdeaConImportSettings.ConnectionFileName">
            <summary>
            Gets or sets the name of the Connection project
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.IdeaConImportSettings.WaitForExit">
            <summary>
            WaitForExit
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.IdeaConImportSettings.CanChangeDesignCodeInWizard">
            <summary>
            Can change design code in Wizard
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.IdeaConImportSettings.UserWizardBrand">
            <summary>
            Set user Wizard Brand
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.IdeaConImportSettings.RunningApplication">
            <summary>
            Running application
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.IdeaConImportSettings.DesignCode">
            <summary>
            Gets or sets the Design Code
            There can be :
            ECEN
            AISC
            CISC
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.IdeaConImportSettings.DefaultWeldMaterial">
            <summary>
            Gets or sets the name of the default weld material
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.IdeaConImportSettings.StartIdeaStaticaApp">
            <summary>
            StartIdeaStaticaApp
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Connection.ReportType">
            <summary>
            Defines a report type.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Connection.ReportType.Brief">
            <summary>
            Brief report - only summary is created.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Connection.ReportType.Detailed">
            <summary>
            Detailed report - with all results related to report settings.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Connection.FormulasType">
            <summary>
            Type formulas output
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Connection.FormulasType.Disabled">
            <summary>
            Formulas are not presented in report
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Connection.FormulasType.Extreme">
            <summary>
            Formulas are presented for extreme result
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Connection.FormulasType.All">
            <summary>
            Formulas are presented for all results
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Connection.ReportSettings">
            <summary>
            Report settings for IDEA connections.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ReportSettings.ReportType">
            <summary>
            Gets or sets the type of report.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ReportSettings.Views">
            <summary>
            Indicates, whether generate views (XY, XZ, YZ) into report.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ReportSettings.ResultsPictures">
            <summary>
            Indicates, whether generate pictures of results.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ReportSettings.SymbolExplanations">
            <summary>
            Indicates, whether generate explanations to report.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ReportSettings.PlatesDrawings">
            <summary>
            Indicates, whether generate drawing of plates.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ReportSettings.TheoreticalBackground">
            <summary>
            Indicates, whether generate theoretical background.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ReportSettings.CultureName">
            <summary>
            The name of the required culture of the report
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Connection.ReportSettings.Formulas">
            <summary>
            Indicates if formulas are in report
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.DappedEndHaunchType">
            <summary>
            Type of haunch on dapped end
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.DappedEndHaunchType.None">
            <summary>
            No haunch
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.DappedEndHaunchType.Left">
            <summary>
            Left haunch
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.DappedEndHaunchType.Right">
            <summary>
            Right haunch
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.DappedEndHaunchType.Both">
            <summary>
            Both sides
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.DappedEnd">
            <summary>
            Representation of dapped end in IDEA StatiCa Detail
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Detail.DappedEnd.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.DappedEnd.GeomId">
            <summary>
            Id representing geometrical parts of Detail
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.DappedEnd.Width">
            <summary>
            Width of dapped end
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.DappedEnd.Height">
            <summary>
            Height of dapped end
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.DappedEnd.MasterComponent">
            <summary>
            Master component
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.DappedEnd.MasterPoint">
            <summary>
            Insert point 0 - 1
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.DappedEnd.Outline">
            <summary>
            Outline of dapped end
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.DappedEnd.Position">
            <summary>
            Offset between MasterPoint and InsertPoint
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.DappedEnd.DappedEndHaunch">
            <summary>
            Type of haunch on dapped end
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.DappedEnd.Haunch">
            <summary>
            Haunch size of dapped end
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.DappedEnd.Rotation">
            <summary>
            Rotation of dapped end
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.IGeometryPart">
            <summary>
            Geotery interface
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.IGeometryPart.Edges">
            <summary>
            Lines of input edges on wall or beam
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.Loading.CalculationCase">
            <summary>
            load case/combination data
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Detail.Loading.CalculationCase.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Loading.CalculationCase.Name">
            <summary>
            Gets or set the name
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Loading.CalculationCase.IsActive">
            <summary>
            active load case/combination
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.Loading.TypeLinePosition">
            <summary>
            type position line support
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.Loading.TypeLinePosition.Point">
            <summary>
            on point (0, 0) or selected point
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.Loading.TypeLinePosition.OnWallEdge">
            <summary>
            on wall edge
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.Loading.TypeLinePosition.Polyline">
            <summary>
            polyline
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.Loading.DirectionType">
            <summary>
            Direction type
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.Loading.DirectionType.GlobalX">
            <summary>
            GlobalX
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.Loading.DirectionType.GlobalY">
            <summary>
            Global Y
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.Loading.DirectionType.GlobalZ">
            <summary>
            Global Z
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.Loading.DirectionType.LocalX">
            <summary>
            Local X
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.Loading.DirectionType.LocalY">
            <summary>
            Local Y
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.Loading.DirectionType.LocalZ">
            <summary>
            Local Z
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.Loading.LineLoad">
            <summary>
            Line load
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Detail.Loading.LineLoad.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Loading.LineLoad.Name">
            <summary>
            Gets or set the name
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Loading.LineLoad.BegFx">
            <summary>
            force in X at biginning
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Loading.LineLoad.EndFx">
            <summary>
            force in X at end
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Loading.LineLoad.BegFy">
            <summary>
            force in Y at beginning
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Loading.LineLoad.EndFy">
            <summary>
            force in Y at end
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Loading.LineLoad.Direction">
            <summary>
            local / global
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Loading.LineLoad.GeometryPointsPath">
            <summary>
            list of line load points
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Loading.LineLoad.ResultantForces">
            <summary>
            forces value
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Loading.LineLoad.BegPositionX">
            <summary>
            point support position X
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Loading.LineLoad.BegPositionY">
            <summary>
            point support position Y
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Loading.LineLoad.EndPositionX">
            <summary>
            point support position X
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Loading.LineLoad.EndPositionY">
            <summary>
            point support position Y
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Loading.LineLoad.DirectionType">
            <summary>
            direction type of load
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Loading.LineLoad.Angle">
            <summary>
            angle of load
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Loading.LineLoad.TypeLinePosition">
            <summary>
            type of position
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Loading.LineLoad.MasterComponent">
            <summary>
            Gets or sets the master component
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Loading.LineLoad.MasterEdge">
            <summary>
            master component edge
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Loading.LineLoad.MasterPoint">
            <summary>
            master point
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Loading.LineLoad.TypeEdgePosition">
            <summary>
            edge position type
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Loading.LineLoad.EdgePositionType">
            <summary>
            edge position type
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Loading.LineLoad.PositionOnEdge">
            <summary>
            position od edge
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Loading.LineLoad.LengthOnEdge">
            <summary>
            length of load
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Loading.LineLoad.GeneralLine">
            <summary>
            general shape
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.Loading.LoadBase">
            <summary>
            Load base object
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Loading.LoadBase.Id">
            <summary>
            Element Id
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.Loading.LoadCaseType">
            <summary>
            Type of load case
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.Loading.LoadCaseType.Permanent">
            <summary>
            Permanent
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.Loading.LoadCaseType.Variable">
            <summary>
            Variable
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.Loading.LoadCase">
            <summary>
            Load case
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Detail.Loading.LoadCase.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Loading.LoadCase.LoadCaseType">
            <summary>
            Type of load case
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Loading.LoadCase.Load">
            <summary>
            Load
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.TypeEdgePosition">
            <summary>
            Type edge position
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.TypeEdgePosition.WholeLength">
            <summary>
            whole length
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.TypeEdgePosition.PartEdge">
            <summary>
            part of the edge, mereno od pocatku hrany nebo podle zadani v jinem properties
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.TypeEdgePosition.PartEdgeToEndEdge">
            <summary>
            parts of the edge to end edge - pouze na vybranem vlasniku - napriklad u linioveho zatizeni na hrane
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.TypeEdgePosition.PartEdgeToSegment">
            <summary>
            parts on edge, protazene az k segmentu nebo k poslenimu pruseciku s vnejsim obrysem - napriklad u vyztuze
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.TypeEdgePosition.PartEdgeFromEnd">
            <summary>
            on part of edge measured from end of the edge
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.LoadDirection">
            <summary>
            Direction of load
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.LoadDirection.InLcs">
            <summary>
            Direction in Local coordinate system
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.LoadDirection.InGcs">
            <summary>
            Direction in global coordinate system
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.LineSupport">
            <summary>
            Line support
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Detail.LineSupport.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.LineSupport.Name">
            <summary>
            Gets or set the name
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.LineSupport.X">
            <summary>
            displacement in X
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.LineSupport.Y">
            <summary>
            displacement in Y
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.LineSupport.Rz">
            <summary>
            rotation Rz
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.LineSupport.IsUserStiffnessX">
            <summary>
            true for user stiffness
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.LineSupport.StiffnessX">
            <summary>
            support stiffness X
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.LineSupport.IsUserStiffnessY">
            <summary>
            true for user stiffness
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.LineSupport.StiffnessY">
            <summary>
            support stiffness Y
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.LineSupport.IsPressureOnlyY">
            <summary>
            pressure only for Y
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.LineSupport.StiffnessRz">
            <summary>
            support stiffness Rz
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.LineSupport.Direction">
            <summary>
            local / global
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.LineSupport.GeometryPointsPath">
            <summary>
            list of line load points
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.LineSupport.OnWallEdge">
            <summary>
            true to add line support on wall edge
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.LineSupport.GeomId">
            <summary>
            Id representing geometrical parts of Detail
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.LineSupport.MasterComponent">
            <summary>
            Gets or sets the master component
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.LineSupport.MasterEdge">
            <summary>
            master component edge
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.LineSupport.TypeEdgePosition">
            <summary>
            edge position type
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.LineSupport.EdgePositionType">
            <summary>
            edge position type
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.LineSupport.PositionOnEdge">
            <summary>
            position od edge
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.LineSupport.SupportLength">
            <summary>
            support lengtj
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.LineSupport.GeneralLine">
            <summary>
            general shape
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.PatchDevice">
            <summary>
            Abstract class of patch support/load
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Detail.PatchDevice.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.PatchDevice.GeomId">
            <summary>
            Id representing geometrical parts of Detail
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.PatchDevice.MasterComponent">
            <summary>
            Master component
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.PatchDevice.MasterPoint">
            <summary>
            Master point 0 - 9
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.PatchDevice.Position">
            <summary>
            Offset between MasterPoint and patch support/load
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.PatchLoad">
            <summary>
            Representation of patch load in IDEA StatiCa Detail
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Detail.PatchLoad.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.PatchSupport">
            <summary>
            Representation of patch support in IDEA StatiCa Detail
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Detail.PatchSupport.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.ISDImportSettings">
            <summary>
            Represents settings of improt options into Idea StatiCa Detail
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Detail.ISDImportSettings.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ISDImportSettings.UseWizard">
            <summary>
            Open import wizard window
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.ISDType">
            <summary>
            Type of IDEA StatiCa Detail
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.ISDType.Wall">
            <summary>
            Wall
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.ISDType.Member1D">
            <summary>
            Member1D
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.ISDType.FrameJoint">
            <summary>
            Frame joint
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.ISDModel">
            <summary>
            Model of IDEA StatiCa Detail
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Detail.ISDModel.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ISDModel.ISDType">
            <summary>
            Type of IDEA StatiCa Detail
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ISDModel.Setting">
            <summary>
            Setting
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ISDModel.Geometry">
            <summary>
            All geometrical entities of Detail 
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ISDModel.Reinforcement">
            <summary>
            All reinforcement of Detail 
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ISDModel.Loading">
            <summary>
            All loading entities of Detail 
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.ISDSetting">
            <summary>
            IDEA StatiCa Detail setting
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Detail.ISDSetting.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ISDSetting.Cover">
            <summary>
            Concrete cover
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.Beam">
            <summary>
            Representation of 1D member in IDEA StatiCa Detail
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Detail.Beam.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Beam.GeomId">
            <summary>
            Id representing geometrical parts of Detail
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Beam.MasterComponent">
            <summary>
            Master component
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Beam.MasterPoint">
            <summary>
            Master point 0 - 9
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Beam.InsertPoint">
            <summary>
            Insert point 0 - 9
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Beam.Edges">
            <summary>
            Lines of Element2D including edges, which are created by opening
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Beam.Position">
            <summary>
            Offset between MasterPoint and InsertPoint
            If MasterPoint is null, position is from origin of coordinate system
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.Wall">
            <summary>
            Representation of Wall in IDEA StatiCa Detail
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Wall.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Detail.Wall.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Wall.GeomId">
            <summary>
            Id representing geometrical parts of Detail
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Wall.MasterComponent">
            <summary>
            Master component
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Wall.MasterPoint">
            <summary>
            Master point 0 - 9
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Wall.InsertPoint">
            <summary>
            Insert point 0 - 9
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Wall.Edges">
            <summary>
            Lines of Element2D including edges, which are created by opening
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Wall.Position">
            <summary>
            Offset between MasterPoint and InsertPoint
            If MasterPoint is null, position is from origin of coordinate system
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.WallRect">
            <summary>
            Representation of rectangular element2D in IDEA StatiCa Detail
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Detail.WallRect.#ctor">
            <summary>
            Coonstructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.WallRect.Width">
            <summary>
            Width of wall
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.WallRect.Height">
            <summary>
            Height of wall
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.Opening">
            <summary>
            Representation of opening in IDEA StatiCa Detail
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Detail.Opening.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Opening.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Opening.GeomId">
            <summary>
            Id representing geometrical parts of Detail
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Opening.MasterComponent">
            <summary>
            Master component
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Opening.MasterPoint">
            <summary>
            Master point 0 - 9
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Opening.InsertPoint">
            <summary>
            Insert point 0 - 9
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Opening.Outline">
            <summary>
            Outline of Oopening
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Opening.Position">
            <summary>
            Offset between MasterPoint and InsertPoint
            If MasterPoint is null, position is from origin of coordinate system
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.OpeningCirc">
            <summary>
            Representation of circular opening in IDEA StatiCa Detail
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Detail.OpeningCirc.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.OpeningCirc.Diameter">
            <summary>
            Diameter of opening
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.OpeningRect">
            <summary>
            Representation of rectangular opening in IDEA StatiCa Detail
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Detail.OpeningRect.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.OpeningRect.Width">
            <summary>
            Width of wall
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.OpeningRect.Height">
            <summary>
            Height of wall
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.BentUpBar">
            <summary>
            Representing bent-Up bar in IDEA StatiCa Detail
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Detail.BentUpBar.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.BentUpBar.MasterComponent">
            <summary>
            Master component of reinforcement
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.BentUpBar.IsOnLeft">
            <summary>
            Bar is on left or right side of member1D
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.BentUpBar.Offset">
            <summary>
            Offset of bent-Up bar from left/right edge
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.BentUpBar.Angle">
            <summary>
            Angle between bar and master edge
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.BentUpBar.TopLength">
            <summary>
            Length of additional bar on the top
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.BentUpBar.BottomLength">
            <summary>
            Length of additional bar on the bottom
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.BentUpBar.AddAnchor">
            <summary>
            Add anchor to bent up bar
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.BentUpBar.AnchorLength">
            <summary>
            Length of anchor for bent up bar
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.HangingType">
            <summary>
            Type of hanging
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.HangingType.StraightAnchorStraightBranches">
            <summary>
            Straight anchor with straight branches ||
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.HangingType.StraightAnchorLShapedBranches">
            <summary>
            Straight anchor with L-shaped branches _||_
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.HangingType.AngleAnchorStraightBranches">
            <summary>
            Angle anchor with straight branches /\
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.HangingType.AngleAnchorLShapedBranches">
            <summary>
            Angle anchor with L-shaped branches _/\_
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.HangingType.StraightAnchorSingleBar">
            <summary>
            Straight single bar |
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.EdgeOrientationType">
            <summary>
            Edge position type
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.EdgeOrientationType.FromBegin">
            <summary>
            Distance measured from the beginning of edge
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.EdgeOrientationType.FromEnd">
            <summary>
            Distance measured from the end of edge
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.Hanging">
            <summary>
            Representing hanging in IDEA StatiCa Detail
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Detail.Hanging.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Hanging.MasterComponent">
            <summary>
            Master component of hanging
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Hanging.MasterEdge">
            <summary>
            Master edge of hanging
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Hanging.EdgeOrientationType">
            <summary>
            Edge orientation type
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Hanging.PositionOnEdge">
            <summary>
            Position on edge
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Hanging.Diameter">
            <summary>
            Diameter o reinforcement
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Hanging.EndsType">
            <summary>
            End type of the reinforcement bar - same for both ends
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Hanging.DiameterOfMandrel">
            <summary>
            Diameter of mandrel - multiplier of bar diameter to obtain inner diameter of bent reinforcement bars
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Hanging.HangingType">
            <summary>
            Type of hanging
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Hanging.UpperLength">
            <summary>
            Length of upper part of hanging
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Hanging.BottomLength">
            <summary>
            Length of inside part of anchor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Hanging.LegsLength">
            <summary>
            Length of legs
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Hanging.Angle">
            <summary>
            Angle between braches
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Hanging.Radius">
            <summary>
            Radius of top loop
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.HangingAroundPatch">
            <summary>
            Representing of hanging hanging around patch load/support in IDEA StatiCa Detail
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Detail.HangingAroundPatch.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.HangingAroundPatch.MasterComponent">
            <summary>
            Master component of hanging
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.HangingAroundPatch.NumOfBarsInLayer">
            <summary>
            Number of bars in layer
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.HangingAroundPatch.Diameter">
            <summary>
            Diameter o reinforcement
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.HangingAroundPatch.EndsType">
            <summary>
            End type of the reinforcement bar - same for both ends
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.HangingAroundPatch.DiameterOfMandrel">
            <summary>
            Diameter of mandrel - multiplier of bar diameter to obtain inner diameter of bent reinforcement bars
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.HangingAroundPatch.DistanceFromPatch">
            <summary>
            Distance from patch support/load
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.HangingAroundPatch.BottomPartLength">
            <summary>
            Length of bottom part
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.HangingAroundPatch.InclinedPartsLength">
            <summary>
            Length of inclined parts
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.HangingAroundPatch.LegsLength">
            <summary>
            Length of legs
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.HangingAroundPatch.InclinedPartsAngle">
            <summary>
            Inclination of inclined parts
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.HangingAroundPatch.Rotation">
            <summary>
            Angle of reinforcement rotation around patch point
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.HangingAroundPatch.IsMirrored">
            <summary>
            Add same reinforcement on oposide side (rotated 180°)
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.ReinfAroundOpening">
            <summary>
            Representing reinforcement around opening in IDEA StatiCa Detail
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Detail.ReinfAroundOpening.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfAroundOpening.MasterComponent">
            <summary>
            Master component of reinforcement
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfAroundOpening.NumOfLayers">
            <summary>
            Number of layers
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfAroundOpening.Distance">
            <summary>
            Distance between reinforcement layers
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfAroundOpening.AnchorLength">
            <summary>
            Anchor length of main bars
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfAroundOpening.DiagonalReinforcement">
            <summary>
            Add diagonal reinforcement
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfAroundOpening.DiagonalDiameter">
            <summary>
            Diameter of diagonal reinforcement
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfAroundOpening.DiagonalNumOfBarsInLayer">
            <summary>
            Number of diagonal bars in layer
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfAroundOpening.DiagonalNumOfLayers">
            <summary>
            Number of diagonal layers
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfAroundOpening.DiagonalDistance">
            <summary>
            Distance between diagonal reinforcement layers
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfAroundOpening.DiagonalLength">
            <summary>
            length of diagonal bar
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfAroundOpening.DiagonalEndsType">
            <summary>
            End type of diagonal reinforcement bar
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.InclinedReinfBarType">
            <summary>
            Type of inclined bar
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.InclinedReinfBarType.InputByLength">
            <summary>
            Length of bar is directly in put by user
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.InclinedReinfBarType.FullLength">
            <summary>
            Length is extended to outer edges of structure
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.ReinfBarInclined">
            <summary>
            Representing reinforcement inclined bar in IDEA StatiCa Detail
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Detail.ReinfBarInclined.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarInclined.MasterComponent">
            <summary>
            Master component of reinforcement
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarInclined.MasterPoint">
            <summary>
            Master point of reinforcement
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarInclined.MasterEdge">
            <summary>
            Master edge of reinforcement - edge from which is measured angle
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarInclined.InclinedReinfBarType">
            <summary>
            Type of inclined reinf bar
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarInclined.Angle">
            <summary>
            Angle between bar and master edge
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarInclined.AddBarOnTop">
            <summary>
            Add bar on top - possible only for FullLength
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarInclined.TopLength">
            <summary>
            Length of additional bar on the top
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarInclined.AddBarOnBottom">
            <summary>
             Add bar on Bottom - possible only for FullLength
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarInclined.BottomLength">
            <summary>
            Length of additional bar on the bottom
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.EdgePositionType">
            <summary>
            Position of reinforcement on edge
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.EdgePositionType.WholeLength">
            <summary>
            WholeLength
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.EdgePositionType.PartEdgeFromBegin">
            <summary>
            Part edge from beginning
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.EdgePositionType.PartEdgeFromEnd">
            <summary>
            Part edge from end
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.EdgePositionType.PartEdgeToSegment">
            <summary>
            Part edge to the end
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.BarEndExtendType">
            <summary>
            Type of extension of bar
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.BarEndExtendType.No">
            <summary>
            No extension
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.BarEndExtendType.ExtendToSegment">
            <summary>
            Extension to the end of segment
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.BarEndExtendType.ExtendByDistance">
            <summary>
            Extension by distance
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.ReinfBarOnEdge">
            <summary>
            Representing reinforcement bar input on edge in IDEA StatiCa Detail
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Detail.ReinfBarOnEdge.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarOnEdge.MasterComponent">
            <summary>
            Master component of reinforcement
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarOnEdge.MasterEdge">
            <summary>
            Master edge on Outline of MasterComponent
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarOnEdge.BarDistance">
            <summary>
            Vector determining direction of reinforcement layers, vector is defined in local coordinates of first segment
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarOnEdge.NumOfLayers">
            <summary>
            Number of layers
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarOnEdge.Distance">
            <summary>
            Distance between reinforcement layers
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarOnEdge.EdgePositionType">
            <summary>
            Position of reinforcement on edge
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarOnEdge.PositionOnEdge">
            <summary>
            Position of beginning of bar from start or end of edge
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarOnEdge.Length">
            <summary>
            length of bar
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarOnEdge.AnchorLength">
            <summary>
            Anchor length of main bars, if MasterComponent is opening
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarOnEdge.ExtendTypeBegin">
            <summary>
            type of extension of beginning of bar
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarOnEdge.ExtendDistanceBegin">
            <summary>
            Distance of extension of beginning
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarOnEdge.ExtendTypeEnd">
            <summary>
            type of extension of end of bar
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarOnEdge.ExtendDistanceEnd">
            <summary>
            Distance of extension of end
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.ReinfBarOnMoreEdges">
            <summary>
            Representing reinforcement bar input on more edges in IDEA StatiCa Detail
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Detail.ReinfBarOnMoreEdges.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarOnMoreEdges.MasterComponent">
            <summary>
            Master component of reinforcement
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarOnMoreEdges.MasterEdges">
            <summary>
            Master Edges
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarOnMoreEdges.Covers">
            <summary>
            Covers
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarOnMoreEdges.WholeFirstEdge">
            <summary>
            Bar is on whole length of first edge
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarOnMoreEdges.LengthFromFirstIntersection">
            <summary>
            Length of bar from first intersection in the direction of edge
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarOnMoreEdges.WholeLastEdge">
            <summary>
             Bar is on whole length of last edge
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarOnMoreEdges.LengthFromLastIntersection">
            <summary>
            Length of bar from last intersection in the direction of edge
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.ReinfFabric">
            <summary>
             Representing fabric reinforcement in IDEA StatiCa Detail
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Detail.ReinfFabric.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfFabric.MasterComponent">
            <summary>
            Master component of reinforcement, if null, fabric reinforcement is in all components
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfFabric.DiameterX">
            <summary>
            Bar diameter - direction X
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfFabric.DiameterY">
            <summary>
            Bar diameter - direction Y
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfFabric.DistanceX">
            <summary>
            Distance between bars - direction X
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfFabric.DistanceY">
            <summary>
            Distance between bars - direction Y
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfFabric.SeparatelyPerWall">
            <summary>
            true - add fabric reinfrocement separatelly for each wall, false - merge walls and add reinforcement on merged shape
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfFabric.Number">
            <summary>
            number of fabric in wall projection
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfFabric.CoverFromSetting">
            <summary>
            Use cover from DetailModelSetting
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfFabric.Cover">
            <summary>
            Cover of reinforcement
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfFabric.Position">
            <summary>
            Position of bottom left corner of fabric reinforcement related to point number 1 of master wall
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfFabric.Angle">
            <summary>
            Rotation of fabric reinforcement related to global X coordinate
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.LongReinfEndType">
            <summary>
            End type of longitudional reinforcement
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.LongReinfEndType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.LongReinfEndType.Bend">
            <summary>
            Bend
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.LongReinfEndType.Hook">
            <summary>
            Hook
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.LongReinfEndType.Loop">
            <summary>
            Loop
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.LongReinfEndType.WeldedTransverseBar">
            <summary>
            WeldedTransverseBar
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.LongReinfEndType.ContinuousBar">
            <summary>
            Continuous bar - full anchorage
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.LongReinfEndType.ContinuousBarOutside">
            <summary>
            Continuous bar outside - no anchorage
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.LongReinfEndType.Hook90DegreeACI">
            <summary>
            90 degree hook for ACI
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Detail.LongReinfEndType.Hook180DegreeACI">
            <summary>
            180 degree hook for ACI
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.ReinforcementGroup">
            <summary>
            Base class representing group reinforcement in IDEA StatiCa Detail
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinforcementGroup.Diameter">
            <summary>
            Diameter o reinforcement
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinforcementGroup.NumOfBarsInLayer">
            <summary>
            Number of bars in layer
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinforcementGroup.CoverFromSetting">
            <summary>
            Use cover from DetailModelSetting
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinforcementGroup.Cover">
            <summary>
            Cover of reinforcement
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinforcementGroup.EndsTypeBeg">
            <summary>
            End type of the beginning of reinforcement bar
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinforcementGroup.EndsTypeEnd">
            <summary>
            End type of the end of reinforcement bar
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinforcementGroup.DiameterOfMandrel">
            <summary>
            Diameter of mandrel - multiplier of bar diameter to obtain inner diameter of bent reinforcement bars
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.Reinforcement">
            <summary>
            Base class representing reinforcement in IDEA StatiCa Detail
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Reinforcement.ReinfId">
            <summary>
            Id representing reinforcement in Detail
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.Reinforcement.Material">
            <summary>
            Material
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.ReinfBarByPolyline">
            <summary>
            Representing reinforcement bar input by polyline in IDEA StatiCa Detail
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Detail.ReinfBarByPolyline.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarByPolyline.MasterComponent">
            <summary>
            Master component of reinforcement
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarByPolyline.MasterPoint">
            <summary>
            Master point of reinforcement
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarByPolyline.BarShape">
            <summary>
            Polyline representing shape of bar
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarByPolyline.BarDistance">
            <summary>
            Vector determining direction of reinforcement layers, vector is defined in local coordinates of first segment
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarByPolyline.NumOfLayers">
            <summary>
            Number of layers
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarByPolyline.Distance">
            <summary>
            Distance between reinforcement layers
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarByPolyline.Position">
            <summary>
            Offset between master point and first point of BarShape
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Detail.ReinfBarByTwoPoints">
            <summary>
            Representing reinforcement bar input by two points in IDEA StatiCa Detail
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Detail.ReinfBarByTwoPoints.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarByTwoPoints.MasterComponent1">
            <summary>
            First master component of reinforcement
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarByTwoPoints.MasterComponent2">
            <summary>
            Second master component of reinforcement
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarByTwoPoints.MasterPoint1">
            <summary>
            First master point of reinforcement
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarByTwoPoints.MasterPoint2">
            <summary>
            Second master point of reinforcement
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarByTwoPoints.BarDistance">
            <summary>
            Vector determining direction of reinforcement layers, vector is defined in local coordinates of first segment
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarByTwoPoints.NumOfLayers">
            <summary>
            Number of layers
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarByTwoPoints.Distance">
            <summary>
            Distance between reinforcement layers
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarByTwoPoints.Position1">
            <summary>
            Offset between first master point and first point of bar
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Detail.ReinfBarByTwoPoints.Position2">
            <summary>
            Offset between second master point and second point of bar
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.CoordinateSystemMethod">
            <summary>
            A system which uses one or more numbers, or coordinates, to uniquely determine the position of a point or other geometric element.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CoordinateSystemMethod.Cartesian">
            <summary>
            The Cartesian coordinate system.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CoordinateSystemMethod.Polar">
            <summary>
            The polar coordinate system.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Symmetry">
            <summary>
            The symmetry type.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Symmetry.NotAvailable">
            <summary>
            Symmetry is not available to input.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Symmetry.Symmetrical">
            <summary>
            Symmetrical input.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Symmetry.Asymmetrical">
            <summary>
            Non-symmetrical input.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Geometry2D.ArcSegment2D">
            <summary>
            Represents an arc segment in two-dimensional space.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry2D.ArcSegment2D.Point">
            <summary>
            Gets or sets the point of circular arc somewhere between start and end point.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Geometry2D.LineSegment2D">
            <summary>
            Represents a line segment in two-dimensional space.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Geometry2D.Point2D">
            <summary>
            Represents an x- and y-coordinate pair in two-dimensional space.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry2D.Point2D.X">
            <summary>
            Gets or sets the X-coordinate value
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry2D.Point2D.Y">
            <summary>
            Gets or sets the Y-coordinate value
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Geometry2D.Polygon2D">
            <summary>
            Represents a polygon in two-dimensional space.
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Geometry2D.Polygon2D.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry2D.Polygon2D.Points">
            <summary>
            List of polygon points
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Geometry2D.PolyLine2D">
            <summary>
            Represents a polyline in two-dimensional space.
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Geometry2D.PolyLine2D.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry2D.PolyLine2D.StartPoint">
            <summary>
            Gets or sets the point where the <c>PolyLine2D</c> begins.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry2D.PolyLine2D.Segments">
            <summary>
            Gets segments of <c>PolyLine2D</c>.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Geometry2D.Region2D">
            <summary>
            Represents a region in two-dimensional space included outline (border) and openings.
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Geometry2D.Region2D.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry2D.Region2D.Outline">
            <summary>
            Gets or sets the outline curve of Region2D.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry2D.Region2D.Openings">
            <summary>
            Gets or sets the list of openings in the Region2D.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Geometry2D.SectionCharacteristics">
            <summary>
            Section characteristics
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry2D.SectionCharacteristics.A">
            <summary>
            Gets or sets the area.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry2D.SectionCharacteristics.Sy">
            <summary>
            Gets or sets the first moment of area related to the Y axis.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry2D.SectionCharacteristics.Sz">
            <summary>
            Gets or sets the first moment of area related to the Z axis.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry2D.SectionCharacteristics.Iy">
            <summary>
            Gets or sets the second moment of area related to the Y axis.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry2D.SectionCharacteristics.Iz">
            <summary>
            Gets or sets the second moment of area related to the Z axis.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry2D.SectionCharacteristics.Dyz">
            <summary>
            Gets or sets the product moment of area.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry2D.SectionCharacteristics.Cgy">
            <summary>
            Gets the centre of gravity related to the axis Y.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry2D.SectionCharacteristics.Cgz">
            <summary>
            Gets the centre of gravity related to the axis Z.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry2D.SectionCharacteristics.Rgy">
            <summary>
            Gets the radius of gyration related to the axis Y.
            Also known as iy.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry2D.SectionCharacteristics.Rgz">
            <summary>
            Gets the radius of gyration related to the axis Z.
            Also known as iz.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry2D.SectionCharacteristics.E">
            <summary>
            Gets or sets the responding E modulus.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry2D.SectionCharacteristics.Wely">
            <summary>
            Gets or sets the Elastic section modulus related to axis Y.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry2D.SectionCharacteristics.Welz">
            <summary>
            Gets or sets the Elastic section modulus related to axis Z.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry2D.SectionCharacteristics.Wply">
            <summary>
            Gets or sets the Plastic section modulus related to axis Y.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry2D.SectionCharacteristics.Wplz">
            <summary>
            Gets or sets the Plastic section modulus related to axis Z.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry2D.SectionCharacteristics.Iw">
            <summary>
            Gets or sets the Warping constant.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry2D.SectionCharacteristics.It">
            <summary>
            Gets or sets the Torsional constant.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry2D.SectionCharacteristics.Y0">
            <summary>
            Gets or sets the Shear center coordinate Y related to the center of gravity.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry2D.SectionCharacteristics.Z0">
            <summary>
            Gets or sets the Shear center coordinate Z related to the center of gravity.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry2D.SectionCharacteristics.Ay">
            <summary>
            Shear area
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry2D.SectionCharacteristics.Az">
            <summary>
            Shear area
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Geometry2D.Segment2D">
            <summary>
            Represents a segment in two-dimensional space.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry2D.Segment2D.EndPoint">
            <summary>
            Gets or sets the endpoint of the segment.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Geometry2D.TemperatureCurve2D">
            <summary>
            Reperesents a thermal curve.
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Geometry2D.TemperatureCurve2D.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry2D.TemperatureCurve2D.Temperature">
            <summary>
            The temperature [K]
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Geometry2D.Vector2D">
            <summary>
            Represents a vector in two-dimensional space.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry2D.Vector2D.X">
            <summary>
            Gets or sets the X-dirrection value
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry2D.Vector2D.Y">
            <summary>
            Gets or sets the Y-dirrection value
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Geometry3D.ArcSegment3D">
            <summary>
            Represents an arc segment in three-dimensional space.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry3D.ArcSegment3D.Point">
            <summary>
            Gets or sets the reference to <see cref="T:IdeaRS.OpenModel.Geometry3D.Point3D"/> of circular arc somewhere between start and end point.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Geometry3D.CoordSystem">
            <summary>
            Coordinate system base class
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Geometry3D.Plane">
            <summary>
            Defines basic planes
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Geometry3D.Plane.XY">
            <summary>
            XY Plane - Plane normal to Z axis
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Geometry3D.Plane.YZ">
            <summary>
            YZ Plane - Plane normal to X axis
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Geometry3D.Plane.ZX">
            <summary>
            ZX Plane - Plane normal to Y axis
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Geometry3D.CoordSystemByPoint">
            <summary>
            Coordinates system defid by the point and the plane
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry3D.CoordSystemByPoint.Point">
            <summary>
            Point where Y o Z axis is located
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry3D.CoordSystemByPoint.InPlane">
            <summary>
            Point is in Plane
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Geometry3D.CoordSystemByVector">
            <summary>
            Coordinate system defined by vectors
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry3D.CoordSystemByVector.VecX">
            <summary>
            Axis X unit vector
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry3D.CoordSystemByVector.VecY">
            <summary>
            Axis Y unit vector
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry3D.CoordSystemByVector.VecZ">
            <summary>
            Axis Z unit vector
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Geometry3D.CoordSystemByZup">
            <summary>
            Coordinates system based on local Z axis up
            In case local X is vertical then Y local axis follows Y global axis.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Geometry3D.LineSegment3D">
            <summary>
            Represents a line segment in three-dimensional space.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Geometry3D.Point3D">
            <summary>
            Represents an x- , y- an z-coordinates in three-dimensional space.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry3D.Point3D.Name">
            <summary>
            Gets or sets the Name
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry3D.Point3D.X">
            <summary>
            Gets or sets the X-coordinate value
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry3D.Point3D.Y">
            <summary>
            Gets or sets the Y-coordinate value
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry3D.Point3D.Z">
            <summary>
            Gets or sets the Z-coordinate value
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Geometry3D.PointOnLine3D">
            <summary>
            Represents a Point dependent on the line in three-dimensional space.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry3D.PointOnLine3D.Geometry">
            <summary>
            Gets or sets the reference to <see cref="T:IdeaRS.OpenModel.Geometry3D.PolyLine3D"/> line or <see cref="T:IdeaRS.OpenModel.Geometry3D.Segment3D"/> segment.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry3D.PointOnLine3D.Position">
            <summary>
            Gets or sets the position value on the line.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry3D.PointOnLine3D.IsRelative">
            <summary>
            Gets or sets absolute or relative representation of the position value.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry3D.PointOnLine3D.IsFromStart">
            <summary>
            Gets or sets the position value is measured from the start or the ent of the line.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Geometry3D.Polygon3D">
            <summary>
            Represents a polygon in three-dimensional space.
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Geometry3D.Polygon3D.#ctor">
            <summary>
            Contructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry3D.Polygon3D.Points">
            <summary>
            List of polygon points
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Geometry3D.PolyLine3D">
            <summary>
            Represents a polyline in three-dimensional space.
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Geometry3D.PolyLine3D.#ctor">
            <summary>
            Contructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry3D.PolyLine3D.Segments">
            <summary>
            Gets or sets list of references to <see cref="T:IdeaRS.OpenModel.Geometry3D.Segment3D"/> of <c>PolyLine3D</c>.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Geometry3D.Region3D">
            <summary>
            Represents a region in three-dimensional space included outline (border) and openings.
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Geometry3D.Region3D.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry3D.Region3D.Outline">
            <summary>
            Gets or sets the reference to <see cref="T:IdeaRS.OpenModel.Geometry3D.PolyLine3D"/> curve of Region3D.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry3D.Region3D.Openings">
            <summary>
            Gets or sets the list of references to <see cref="T:IdeaRS.OpenModel.Geometry3D.PolyLine3D"/>openning curve in the Region3D.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Geometry3D.Segment3D">
            <summary>
            Represents a segment in three-dimensional space.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry3D.Segment3D.StartPoint">
            <summary>
            Gets or sets the reference to <see cref="T:IdeaRS.OpenModel.Geometry3D.Point3D"/> startpoint of the segment.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry3D.Segment3D.EndPoint">
            <summary>
            Gets or sets the reference to <see cref="T:IdeaRS.OpenModel.Geometry3D.Point3D"/> endpoint of the segment.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry3D.Segment3D.LocalCoordinateSystem">
            <summary>
            Local coordinate system
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Geometry3D.Vector3D">
            <summary>
            Represents a vector in three-dimensional space.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry3D.Vector3D.X">
            <summary>
            Gets or sets the X-dirrection value
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry3D.Vector3D.Y">
            <summary>
            Gets or sets the Y-dirrection value
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Geometry3D.Vector3D.Z">
            <summary>
            Gets or sets the Z-dirrection value
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.CrossSection.CrossSection">
            <summary>
            Cross-section
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSection.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.CrossSection.Name">
            <summary>
            Name of cross-section
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.CrossSection.CrossSectionRotation">
            <summary>
            Rotation of Cross - Section
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.CrossSection.CrossSectionComponent">
             <summary>
             Cross-section defined by components
             </summary>
             <example> 
             This sample shows how to create a cross-section defined by components.
             <code lang = "C#">
             //Creating the model
             OpenModel openModel = new OpenModel();
             
             //Cocrete material
             MatConcreteEc2 mat = new MatConcreteEc2();
             //...
             openModel.AddObject(mat);
            
             //Cross-section without the bars
             //One component square 0.8x0.8m
             IdeaRS.OpenModel.CrossSection.CrossSectionComponent css = new IdeaRS.OpenModel.CrossSection.CrossSectionComponent();
             css.Name = "CSS1";
             
             //Component of cross-section
             CssComponent comp = new CssComponent();
             comp.Material = new ReferenceElement(mat);
             comp.Phase = 0;
             
             //Geometry of component 0.8x0.8
             Region2D region = new Region2D();
             PolyLine2D outline = new PolyLine2D();
             outline.StartPoint = new Point2D();
             outline.StartPoint.X = -0.04;
             outline.StartPoint.Y = -0.04;
             LineSegment2D seg = new LineSegment2D();
             seg.EndPoint = new Point2D();
             seg.EndPoint.X = 0.04;
             seg.EndPoint.Y = -0.04;
             outline.Segments.Add(seg);
             seg = new LineSegment2D();
             seg.EndPoint = new Point2D();
             seg.EndPoint.X = 0.04;
             seg.EndPoint.Y = 0.04;
             outline.Segments.Add(seg);
             seg = new LineSegment2D();
             seg.EndPoint = new Point2D();
             seg.EndPoint.X = -0.04;
             seg.EndPoint.Y = 0.04;
             outline.Segments.Add(seg);
             seg = new LineSegment2D();
             seg.EndPoint = new Point2D();
             seg.EndPoint.X = -0.04;
             seg.EndPoint.Y = -0.04;
             outline.Segments.Add(seg);
             region.Outline = outline;
             
             //Optional - setting openning in this component 0,2x0,2
             PolyLine2D openning = new PolyLine2D();
             openning.StartPoint = new Point2D();
             openning.StartPoint.X = -0.01;
             openning.StartPoint.Y = -0.01;
             seg = new LineSegment2D();
             seg.EndPoint = new Point2D();
             seg.EndPoint.X = -0.01;
             seg.EndPoint.Y = 0.01;
             openning.Segments.Add(seg);
             seg = new LineSegment2D();
             seg.EndPoint = new Point2D();
             seg.EndPoint.X = 0.01;
             seg.EndPoint.Y = 0.01;
             openning.Segments.Add(seg);
             seg = new LineSegment2D();
             seg.EndPoint = new Point2D();
             seg.EndPoint.X = 0.01;
             seg.EndPoint.Y = -0.01;
             openning.Segments.Add(seg);
             seg = new LineSegment2D();
             seg.EndPoint = new Point2D();
             seg.EndPoint.X = -0.01;
             seg.EndPoint.Y = -0.01;
             openning.Segments.Add(seg);
             region.Openings.Add(openning);
             
             comp.Geometry = region;
             css.Components.Add(comp);
             openModel.AddObject(css);
             </code>
             </example>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionComponent.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.CrossSectionComponent.Components">
            <summary>
            List of components
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.CrossSection.CrossSectionCreepCoefficientAttribute">
            <summary>
            Cross-section creep coefficient attribute
            </summary>
            <example> 
            This sample shows how to create attributes for creep calculation.
            <code lang = "C#">
            //Creating the model
            OpenModel openModel = new OpenModel();
            
            //Set creep definition - on component 0, creep and notional size are calculated, humidity 60%
            CrossSectionCreepCoefficientAttribute creepAttr = new CrossSectionCreepCoefficientAttribute();
            creepAttr.Element = new ReferenceElement(css);
            CrossSectionCreepCoefficientData creepComp = new CrossSectionCreepCoefficientData();
            creepComp.CreepInput = InputValueType.Calculate;
            creepComp.ComponentIndex = new List&lt;int&gt;() { 0 };
            creepComp.Humidity = 0.6;
            creepComp.NotionalSizeInput = InputValueType.Calculate;
            creepAttr.Components.Add(creepComp);
            openModel.AddObject(creepAttr);
            </code>
            </example>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionCreepCoefficientAttribute.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.CrossSectionCreepCoefficientAttribute.Components">
            <summary>
            List of components
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.CrossSection.InputValueType">
            <summary>
            Input value type
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.InputValueType.Calculate">
            <summary>
            Calculate by the code
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.InputValueType.UserInput">
            <summary>
            User input
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.CrossSection.CrossSectionCreepCoefficientData">
            <summary>
            Cross-section component creep coefficient data
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.CrossSectionCreepCoefficientData.ComponentIndex">
            <summary>
            Zero based index of component
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.CrossSectionCreepCoefficientData.CreepInput">
            <summary>
            User-defined curvature for creep coefficient { x = t[day], y = ϕ }
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.CrossSectionCreepCoefficientData.UserCreepCoeeficient">
            <summary>
            User creep coefficient
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.CrossSectionCreepCoefficientData.Humidity">
            <summary>
            Humidity in the relative value
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.CrossSectionCreepCoefficientData.NotionalSizeInput">
            <summary>
            Input type of Notional size
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.CrossSectionCreepCoefficientData.NotionalSize">
            <summary>
            User-defined notional size
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.CrossSection.CrossSectionFactory">
            <summary>
            CrossSectionFactory
            </summary>
            <summary>
            CrossSectionFactory
            </summary>
            <summary>
            CrossSectionFactory
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionFactory.FillColdFormedZ(IdeaRS.OpenModel.CrossSection.CrossSectionParameter,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Fill parameters for cold formed Z section
            </summary>
            <param name="css">Parameters of CrossSectionParameter will be filled</param>
            <param name="Width">Css width</param>
            <param name="Height">Height of cross-section</param>
            <param name="Thickness">Thickness</param>
            <param name="Radius">Inside radius</param>
            <param name="Mirror">Mirrored shape</param>
            <remarks>Dimension of cold formed Z section<br/>
            <img src="Images\CFZ.png" /> <br/>
            </remarks>
            <example> 
            This sample shows how to call this method./>
            <code lang = "C#">
            CrossSectionParameter css = new CrossSectionParameter();
            css.Id = 6;
            css.Material = new ReferenceElement(openStructModel.MatSteel.First());
            double Width = 0.15;
            double Height = 0.20;
            double Thickness = 0.003;
            double Radius = 0.005;
            bool Mirror = false;
            CrossSectionFactory.FillColdFormedZ(css, Width, Height, Thickness, Radius, Mirror);
            openStructModel.AddObject(css);
            </code>
            </example>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionFactory.FillColdFormedZed(IdeaRS.OpenModel.CrossSection.CrossSectionParameter,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Fill parameters for cold formed Z-ed section
            </summary>
            <param name="css">Parameters of CrossSectionParameter will be filled</param>
            <param name="Width">Css width</param>
            <param name="Height">Height of cross-section</param>
            <param name="Thickness">Thickness</param>
            <param name="Radius">Inside radius</param>
            <param name="Lip">Lip length</param>
            <param name="Mirror">Mirrored shape</param>
            <remarks>Dimension of cold formed Z-ed section<br/>
            <img src="Images\CFZed.png" /> <br/>
            </remarks>
            <example> 
            This sample shows how to call this method./>
            <code lang = "C#">
            CrossSectionParameter css = new CrossSectionParameter();
            css.Id = 7;
            css.Material = new ReferenceElement(openStructModel.MatSteel.First());
            double Width = 0.15;
            double Height = 0.20;
            double Thickness = 0.004;
            double Radius = 0.01;
            double Lip = 0.02;
            bool Mirror = false;
            CrossSectionFactory.FillColdFormedZed(css, Width, Height, Thickness, Radius, Lip, Mirror);
            openStructModel.AddObject(css);
            </code>
            </example>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionFactory.FillColdFormedOmega(IdeaRS.OpenModel.CrossSection.CrossSectionParameter,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Fill parameters for cold formed Omega section
            </summary>
            <param name="css">Parameters of CrossSectionParameter will be filled</param>
            <param name="Width">Css width</param>
            <param name="Height">Height of cross-section</param>
            <param name="FlangeWidth">Flange width</param>
            <param name="Thickness">Thickness</param>
            <param name="Radius">Inside radius</param>
            <remarks>Dimension of cold formed Omega section<br/>
            <img src="Images\CFOmega.png" /> <br/>
            </remarks>
            <example> 
            This sample shows how to call this method./>
            <code lang = "C#">
            CrossSectionParameter css = new CrossSectionParameter();
            css.Id = 8;
            css.Material = new ReferenceElement(openStructModel.MatSteel.First());
            double Width = 0.20;
            double Height = 0.10;
            double FlangeWidth = 0.10;
            double Thickness = 0.003;
            double Radius = 0.005;
            CrossSectionFactory.FillColdFormedOmega(css, Width, Height, FlangeWidth, Thickness, Radius);
            openStructModel.AddObject(css);
            </code>
            </example>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionFactory.FillColdFormedL(IdeaRS.OpenModel.CrossSection.CrossSectionParameter,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Fill parameters for cold formed L section
            </summary>
            <param name="css">Parameters of CrossSectionParameter will be filled</param>
            <param name="Width">Horizontal leg length</param>
            <param name="Height">Vertical leg length</param>
            <param name="Thickness">Thickness</param>
            <param name="Radius">Inside radius</param>
            <remarks>Dimension of cold formed L section<br/>
            <img src="Images\CFL.png" /> <br/>
            </remarks>
            <example> 
            This sample shows how to call this method./>
            <code lang = "C#">
            CrossSectionParameter css = new CrossSectionParameter();
            css.Id = 9;
            css.Material = new ReferenceElement(openStructModel.MatSteel.First());
            double Width = 0.10;
            double Height = 0.10;
            double Thickness = 0.003;
            double Radius = 0.005;
            CrossSectionFactory.FillColdFormedL(css, Width, Height, Thickness, Radius);
            openStructModel.AddObject(css);
            </code>
            </example>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionFactory.FillColdFormedLgen(IdeaRS.OpenModel.CrossSection.CrossSectionParameter,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Fill parameters for cold formed L - gen section
            </summary>
            <param name="css">Parameters of CrossSectionParameter will be filled</param>
            <param name="Width">Horizontal leg length</param>
            <param name="Height">Vertical leg length</param>
            <param name="Angle">Angle between legs</param>
            <param name="Thickness">Thickness</param>
            <param name="Radius">Inside radius</param>
            <remarks>Dimension of cold formed L - gen section<br/>
            <img src="Images\CFLgen.png" /> <br/>
            </remarks>
            <example> 
            This sample shows how to call this method./>
            <code lang = "C#">
            CrossSectionParameter css = new CrossSectionParameter();
            css.Id = 10;
            css.Material = new ReferenceElement(openStructModel.MatSteel.First());
            double Width = 0.10;
            double Height = 0.10;
            double Angle = Math.PI / 2.0;
            double Thickness = 0.003;
            double Radius = 0.005;
            CrossSectionFactory.FillColdFormedLgen(css, Width, Height, Angle, Thickness, Radius);
            openStructModel.AddObject(css);
            </code>
            </example>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionFactory.FillColdFormedRegularPolygon(IdeaRS.OpenModel.CrossSection.CrossSectionParameter,System.Double,System.Int32,System.Double,System.Double)">
            <summary>
            Fill parameters for cold formed Regular polygon section
            </summary>
            <param name="css">Parameters of CrossSectionParameter will be filled</param>
            <param name="Radius">Radius</param>
            <param name="Number">Number</param>
            <param name="Thickness">Thickness</param>
            <param name="InsideRadius">Inside radius</param>
            <remarks>Dimension of cold formed Regular polygon section<br/>
            <img src="Images\CFRegP.png" /> <br/>
            </remarks>
            <example> 
            This sample shows how to call this method./>
            <code lang = "C#">
            CrossSectionParameter css = new CrossSectionParameter();
            css.Id = 11;
            css.Material = new ReferenceElement(openStructModel.MatSteel.First());
            double Radius = 0.10;
            int Number = 8;
            double Thickness = 0.003;
            double InsideRadius = 0.005;
            CrossSectionFactory.FillColdFormedRegularPolygon(css, Radius, Number, Thickness, InsideRadius);
            openStructModel.AddObject(css);
            </code>
            </example>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionFactory.FillColdFormedSigma(IdeaRS.OpenModel.CrossSection.CrossSectionParameter,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Fill parameters for cold formed sigma section
            </summary>
            <param name="css">Parameters of CrossSectionParameter will be filled</param>
            <param name="Height">Height</param>
            <param name="Width">Width</param>
            <param name="Lip">Length of lip</param>
            <param name="Thickness">Thickness</param>
            <param name="InsideRadius">Inside radius</param>
            <param name="HeightMiddle">Height of middle part</param>
            <param name="HeightEdge">Height of edge part</param>
            <param name="Depth">Depth of web-fold</param>
            <remarks>Dimension of cold formed sigma section<br/>
            <img src="Images\CFSigma.png" /> <br/>
            </remarks>
            <example> 
            This sample shows how to call this method./>
            <code lang = "C#">
            CrossSectionParameter css = new CrossSectionParameter();
            css.Id = 12;
            css.Material = new ReferenceElement(openStructModel.MatSteel.First());
            double Height = 0.20;
            double Width = 0.15;
            double Lip = 0.02;
            double Thickness = 0.005;
            double InsideRadius = 0.010;
            double HeightMiddle = 0.10;
            double HeightEdge = 0.035;
            double Depth = 0.035;
            CrossSectionFactory.FillColdFormedSigma(css, Height, Width, Lip, Thickness, InsideRadius, HeightMiddle, HeightEdge, Depth);
            openStructModel.AddObject(css);
            </code>
            </example>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionFactory.FillColdFormedRHS(IdeaRS.OpenModel.CrossSection.CrossSectionParameter,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Fill parameters for cold formed RHS section
            </summary>
            <param name="css">Parameters of CrossSectionParameter will be filled</param>
            <param name="Height">Height</param>
            <param name="Width">Width</param>
            <param name="Thickness">Thickness</param>
            <param name="InsideRadius">Inside radius</param>
            <remarks>Dimension of cold formed RHS section<br/>
            <img src="Images\CFRHS.png" /> <br/>
            </remarks>
            <example> 
            This sample shows how to call this method./>
            <code lang = "C#">
            CrossSectionParameter css = new CrossSectionParameter();
            css.Id = 13;
            css.Material = new ReferenceElement(openStructModel.MatSteel.First());
            double Height = 0.20;
            double Width = 0.15;
            double Thickness = 0.005;
            double InsideRadius = 0.010;
            CrossSectionFactory.FillColdFormedRHS(css, Width, Height, Thickness, InsideRadius);
            openStructModel.AddObject(css);
            </code>
            </example>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionFactory.FillWeldedI(IdeaRS.OpenModel.CrossSection.CrossSectionParameter,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Fill steel section of welded I
            </summary>
            <param name="css">Parameters of CrossSectionParameter will be filled</param>
            <param name="bu">Width of flange</param>
            <param name="hw">Height of web</param>
            <param name="tw">Web thickness</param>
            <param name="tf">Flange thickness</param>
            <remarks>Dimension of welded I section<br/>
            <img src="Images\WeldedI.png" /> <br/>
            </remarks>
            <example> 
            This sample shows how to call this method./>
            <code lang = "C#">
            CrossSectionParameter css = new CrossSectionParameter();
            css.Id = 1;
            css.Material = new ReferenceElement(openStructModel.MatSteel.First());  // I have only one material, I take the first one
            double bu = 0.2;
            double hw = 0.4;
            double tw = 0.025;
            double tf = 0.02;
            CrossSectionFactory.FillWeldedI(css, bu, hw, tw, tf);
            openStructModel.AddObject(css);
            </code>
            </example>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionFactory.FillWeldedT(IdeaRS.OpenModel.CrossSection.CrossSectionParameter,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Fill steel section of welded T
            </summary>
            <param name="css">Parameters of CrossSectionParameter will be filled</param>
            <param name="b">Width of flange</param>
            <param name="h">Height of web</param>
            <param name="tw">Web thickness</param>
            <param name="tf">Flange thickness</param>
            <remarks>Dimension of welded T section<br/>
            <img src="Images\WeldedT.png" /> <br/>
            </remarks>
            <example> 
            This sample shows how to call this method./>
            <code lang = "C#">
            CrossSectionParameter css = new CrossSectionParameter();
            css.Id = 2;
            css.Material = new ReferenceElement(openStructModel.MatSteel.First());
            double b = 0.2;
            double h = 0.4;
            double tw = 0.02;
            double tf = 0.35;
            CrossSectionFactory.FillWeldedT(css, b, h, tw, tf);
            openStructModel.AddObject(css);
            </code>
            </example>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionFactory.FillWeldedU(IdeaRS.OpenModel.CrossSection.CrossSectionParameter,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Fill steel section of channel shape
            </summary>
            <param name="cssO">Parameters of CrossSectionParameter will be filled</param>
            <param name="b">width</param>
            <param name="hw">depth</param>
            <param name="tw">web thickness</param>
            <param name="tf">flange thickness</param>
            <param name="rw">root radius</param>
            <param name="rf">flange edge rounding radius</param>
            <param name="taperF">Flange taper</param>
            <returns></returns>
            <remarks>Dimension of channel section<br/>
            <img src="Images\WeldedC.png" /> <br/>
            </remarks>
            <example> 
            This sample shows how to call this method./>
            <code lang = "C#">
            CrossSectionParameter css = new CrossSectionParameter();
            css.Id = 3;
            css.Material = new ReferenceElement(openStructModel.MatSteel.First());
            double b = 0.2;
            double hw = 0.4;
            double tw = 0.025;
            double tf= 0.02;
            double rw= 0.004;
            double rf = 0.002;
            double taperF = 0.001;
            CrossSectionFactory.FillWeldedU(css, b, hw, tw, tf, rw, rf, taperF);
            openStructModel.AddObject(css);
            </code>
            </example>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionFactory.FillCssSteelAngle(IdeaRS.OpenModel.CrossSection.CrossSectionParameter,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Fill steel section of angle shape
            </summary>
            <param name="css">Parameters of CrossSectionParameter will be filled</param>
            <param name="B">width</param>
            <param name="D">depth</param>
            <param name="t">thickness</param>
            <param name="rw">root radius</param>
            <param name="r2">toe radius</param>
            <param name="C">centroid position</param>
            <param name="mirrorZ">profile can be mirrored</param>
            <returns></returns>
            <remarks>Dimension of angle section<br/>
            <img src="Images\WeldedL.png" /> <br/>
            </remarks>
            <example> 
            This sample shows how to call this method./>
            <code lang = "C#">
            CrossSectionParameter css = new CrossSectionParameter();
            css.Id = 4;
            css.Material = new ReferenceElement(openStructModel.MatSteel.First());
            double B = 0.2;
            double D = 0.4;
            double t = 0.025;
            double rw = 0.004;
            double r2 = 0.002;
            double C = 0.0;
            bool mirrorZ = false;
            CrossSectionFactory.FillCssSteelAngle(css, B, D, t, rw, r2, C, mirrorZ);
            openStructModel.AddObject(css);
            </code>
            </example>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionFactory.FillCssIarc(IdeaRS.OpenModel.CrossSection.CrossSectionParameter,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Fill steel section of parametric I section
            </summary>
            <param name="css">Parameters of CrossSectionParameter will be filled</param>
            <param name="cssGeomB">Css width</param>
            <param name="cssGeomH">Height of cross-section</param>
            <param name="cssGeomS">Web thickness</param>
            <param name="cssGeomT">Flange thickness</param>
            <param name="cssGeomR2">inside radius</param>
            <param name="tapperF">Flange tapper</param>
            <param name="r1">Flange edge rounding radius</param>
            <returns></returns>
            <remarks>Dimension of parametric I section<br/>
            <img src="Images\Iarc.png" /> <br/>
            </remarks>
            <example> 
            This sample shows how to call this method./>
            <code lang = "C#">
            CrossSectionParameter css = new CrossSectionParameter();
            css.Id = 8;
            css.Material = new ReferenceElement(openStructModel.MatSteel.First());
            double cssGeomB = 0.25;
            double cssGeomH = 0.45;
            double cssGeomS = 0.02;
            double cssGeomT = 0.03;
            double cssGeomR2 = 0.012;
            double tapperF = Math.PI / 180.0 * 5.0;
            double r1 = 0.015;
            CrossSectionFactory.FillCssIarc(css, cssGeomB, cssGeomH, cssGeomS, cssGeomT, cssGeomR2, tapperF, r1);
            openStructModel.AddObject(css);
            </code>
            </example>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionFactory.FillCssTarc(IdeaRS.OpenModel.CrossSection.CrossSectionParameter,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates one item cross-section T - steel shape
            </summary>
            <param name="css">Parameters of CrossSectionParameter will be filled</param>
            <param name="cssGeomB">Css width</param>
            <param name="cssGeomH">Height of cross-section</param>
            <param name="cssGeomTw">Web thickness</param>
            <param name="cssGeomTf">Flange thickness</param>
            <param name="cssGeomR">Inside radius</param>
            <param name="cssGeomR1">Flange edge rounding radius</param>
            <param name="cssGeomR2">Web edge rounding radius</param>
            <param name="tapperF">Flange tapper</param>
            <param name="tapperW">Web tapper</param>
            <returns></returns>
            <example> 
            This sample shows how to call this method./>
            <code lang = "C#">
            CrossSectionParameter css = new CrossSectionParameter();
            css.Id = 9;
            css.Material = new ReferenceElement(openStructModel.MatSteel.First());
            double cssGeomB = 0.25;
            double cssGeomH = 0.30;
            double cssGeomTw = 0.02;
            double cssGeomTf = 0.03;
            double cssGeomR = 0.015;
            double cssGeomR1 = 0.008;
            double cssGeomR2 = 0.0010;
            double tapperF = Math.PI / 180.0 * 5.0;
            double tapperW = Math.PI / 180.0 * 7.0;
            CrossSectionFactory.FillCssTarc(css, cssGeomB, cssGeomH, cssGeomTw, cssGeomTf, cssGeomR, cssGeomR1, cssGeomR2, tapperF, tapperW);
            openStructModel.AddObject(css);
            </code>
            </example>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionFactory.FillWeldedAsymI(IdeaRS.OpenModel.CrossSection.CrossSectionParameter,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Welded I asymetrical - steel shape
            </summary>
            <param name="css">Parameters of CrossSectionParameter will be filled</param>
            <param name="bu">Width of upper flange</param>
            <param name="bb">Width of bottom flange</param>
            <param name="hw">Height of web</param>
            <param name="tw">Web thickness</param>
            <param name="tfu">Upper flange thickness</param>
            <param name="tfb">Bottom flange thickness</param>
            <remarks>Dimension of assymetrical I section<br/>
            <img src="Images\Iasym.png" /> <br/>
            </remarks>
            <example> 
            This sample shows how to call this method./>
            <code lang = "C#">
            CrossSectionParameter css = new CrossSectionParameter();
            css.Id = 4;
            css.Material = new ReferenceElement(openStructModel.MatSteel.First());
            double bu = 0.150;
            double bb = 0.180;
            double hw = 0.320;
            double tw = 0.016;
            double tfu = 0.014;
            double tfb = 0.018;
            CrossSectionFactory.FillWeldedAsymI(css, bu, bb, hw, tw, tfu, tfb);
            openStructModel.AddObject(css);
            </code>
            </example>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionFactory.FillShapeDblU(IdeaRS.OpenModel.CrossSection.CrossSectionParameter,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a ][ steel shape of css. 
            </summary>
            <param name="css">Parameters of CrossSectionParameter will be filled</param>
            <param name="bt">The width of U top flange.</param>
            <param name="bb">The width of U bottom flange.</param>
            <param name="h">The height of U shape.</param>
            <param name="tb">The bottom deck thickness.</param>
            <param name="tl">The left deck thickness.</param>
            <param name="tr">The right deck thickness.</param>
            <param name="dis">Distance between ][</param>
            <remarks>Dimension of assymetrical I section<br/>
            <img src="Images\Iasym.png" /> <br/>
            </remarks>
            <example> 
            This sample shows how to call this method./>
            <code lang = "C#">
            CrossSectionParameter css = new CrossSectionParameter();
            css.Id = 5;
            css.Material = new ReferenceElement(openStructModel.MatSteel.First());
            double bt = 0.150;
            double bb = 0.180;
            double h = 0.320;
            double tb = 0.016;
            double tfu = 0.014;
            double tfb = 0.018;
            double dis= 0.025;
            CrossSectionFactory.FillShapeDblU(css, bt, bb, h, tb, tl, tr, dis);
            openStructModel.AddObject(css);
            </code>
            </example>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionFactory.FillBox2(IdeaRS.OpenModel.CrossSection.CrossSectionParameter,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Box 2 - steel shape
            </summary>
            <param name="css">Parameters of CrossSectionParameter will be filled</param>
            <param name="bu">Width of upper flange</param>
            <param name="bb">Width of bottom flange</param>
            <param name="hw">Height of web</param>
            <param name="b1">Web distance</param>
            <param name="tw">Web thickness</param>
            <param name="tfu">Upper flange thickness</param>
            <param name="tfb">Bottom flange thickness</param>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionFactory.FillCHSPar(IdeaRS.OpenModel.CrossSection.CrossSectionParameter,System.Double,System.Double)">
            <summary>
            Circular hollow section  - steel shape
            </summary>
            <param name="css">Parameters of CrossSectionParameter will be filled</param>
            <param name="D">Diameter</param>
            <param name="t">thickness</param>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionFactory.FillCssSteelChannel(IdeaRS.OpenModel.CrossSection.CrossSectionParameter,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Create steel section Channel shape - steel shape
            </summary>
            <param name="css">Parameters of CrossSectionParameter will be filled</param>
            <param name="B">width</param>
            <param name="D">depth</param>
            <param name="tw">web thickness</param>
            <param name="tf">flange thickness</param>
            <param name="rw">root radius</param>
            <param name="rf">flange edge rounding radius</param>
            <param name="taperF">Flange taper</param>
            <returns></returns>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionFactory.FillCssSteelRectangularHollow(IdeaRS.OpenModel.CrossSection.CrossSectionParameter,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Fill cross-section of shape rectangular for steel sections
            </summary>
            <param name="cssO">Parameters of CrossSectionParameter will be filled</param>
            <param name="D">depth</param>
            <param name="B">width</param>
            <param name="t">thickness</param>
            <param name="r1">inner radius</param>
            <param name="r2">outer radius</param>
            <param name="d">web buckling depth</param>
            <returns></returns>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionFactory.FillWelded2Uc(IdeaRS.OpenModel.CrossSection.CrossSectionParameter,System.String,System.Double)">
            <summary>
            Fill steel section Channel shape
            </summary>
            <param name="cssO">Parameters of CrossSectionParameter will be filled</param>
            <param name="name">Name</param>
            <param name="Distance">Distance</param>
            <returns></returns>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionFactory.FillWelded2Lt(IdeaRS.OpenModel.CrossSection.CrossSectionParameter,System.String,System.Double)">
            <summary>
            Fill steel section Lt shape
            </summary>
            <param name="cssO">Parameters of CrossSectionParameter will be filled</param>
            <param name="name">Name</param>
            <param name="Distance">Distance</param>
            <returns></returns>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionFactory.FillSteelTI(IdeaRS.OpenModel.CrossSection.CrossSectionParameter,System.String,System.Double)">
            <summary>
            Fill steel T profile made from part of I profile
            </summary>
            <param name="cssO">Parameters of CrossSectionParameter will be filled</param>
            <param name="name">Name</param>
            <param name="H">Height</param>
            <returns></returns>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionFactory.FillWelded2Lu(IdeaRS.OpenModel.CrossSection.CrossSectionParameter,System.String,System.Double)">
            <summary>
            Fill steel section Lu shape
            </summary>
            <param name="cssO">Parameters of CrossSectionParameter will be filled</param>
            <param name="name">Name</param>
            <param name="Distance">Distance</param>
            <returns></returns>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionFactory.FillOHollow(IdeaRS.OpenModel.CrossSection.CrossSectionParameter,System.Double,System.Double)">
            <summary>
            Fill massive pipe steel shape
            </summary>
            <param name="cssO">Parameters of CrossSectionParameter will be filled</param>
            <param name="r">The radius of circle.</param>
            <param name="t">The thickness of wall.</param>
            <returns></returns>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionFactory.FillSteelTube(IdeaRS.OpenModel.CrossSection.CrossSectionParameter,System.Double,System.Double)">
            <summary>
            Fill steel tube
            </summary>
            <param name="cssO">Parameters of CrossSectionParameter will be filled</param>
            <param name="r">The radius of circle.</param>
            <param name="t">The thickness of wall.</param>
            <returns></returns>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionFactory.FillRectangle(IdeaRS.OpenModel.CrossSection.CrossSectionParameter,System.Double,System.Double)">
            <summary>
            Rectangle shape - massive concrete shape
            </summary>
            <param name="css">Parameters of CrossSectionParameter will be filled</param>
            <param name="width">Width of the rectangle</param>
            <param name="height">Height of the rectangle</param>
            <returns></returns>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionFactory.FillCircle(IdeaRS.OpenModel.CrossSection.CrossSectionParameter,System.Double)">
            <summary>
            Circular shape - massive concrete shape
            </summary>
            <param name="css">Parameters of CrossSectionParameter will be filled</param>
            <param name="d">Diametrer of the shape</param>
            <returns></returns>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionFactory.FillShapeI(IdeaRS.OpenModel.CrossSection.CrossSectionParameter,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            I shape - massive concrete shape
            </summary>
            <param name="css">Parameters of CrossSectionParameter will be filled</param>
            <param name="h">Total height</param>
            <param name="btf">Width of the upper part</param>
            <param name="bbf">Width of the bottom part</param>
            <param name="htf">Thickness of the upper part</param>
            <param name="hbf">Thickness of the bottom  part</param>
            <param name="tw">Thinkness of the web</param>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionFactory.FillShapeL(IdeaRS.OpenModel.CrossSection.CrossSectionParameter,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a new L shape css - massive concrete shape
            </summary>
            <param name="css">Parameters of CrossSectionParameter will be filled</param>
            <param name="h">The height of css.</param>
            <param name="b">The width of css.</param>
            <param name="th">The bottom flange thisckness.</param>
            <param name="sh">The wall thickness.</param>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionFactory.FillShapeDblL(IdeaRS.OpenModel.CrossSection.CrossSectionParameter,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a new L shape css
            </summary>
            <param name="css">Parameters of CrossSectionParameter will be filled</param>
            <param name="h">The height of css.</param>
            <param name="b">The width of css.</param>
            <param name="th">The bottom flange thisckness.</param>
            <param name="sh">The wall thickness.</param>
            <param name="dis">Distance between _||_</param>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionFactory.FillShapeDblLu(IdeaRS.OpenModel.CrossSection.CrossSectionParameter,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a new L shape css.
            </summary>
            <param name="css">Parameters of CrossSectionParameter will be filled</param>
            <param name="h">The height of css.</param>
            <param name="b">The width of css.</param>
            <param name="th">The bottom flange thisckness.</param>
            <param name="sh">The wall thickness.</param>
            <param name="dis">Distance between _||_</param>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionFactory.FillShapeT(IdeaRS.OpenModel.CrossSection.CrossSectionParameter,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            T shape  - massive concrete shape
            </summary>
            <param name="css">Parameters of CrossSectionParameter will be filled</param>
            <param name="b">Width of shape</param>
            <param name="h">Height of shape</param>
            <param name="hf">Top flange width</param>
            <param name="bw">Wall width</param>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionFactory.FillShapeTrev(IdeaRS.OpenModel.CrossSection.CrossSectionParameter,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            T turned shape - massive concrete shape
            </summary>
            <param name="css">Parameters of CrossSectionParameter will be filled</param>
            <param name="b">Width of shape</param>
            <param name="h">Height of shape</param>
            <param name="hf">Top flange width</param>
            <param name="bw">Wall width</param>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionFactory.FillShapeU(IdeaRS.OpenModel.CrossSection.CrossSectionParameter,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a U shape of css.
            </summary>
            <param name="css">Parameters of CrossSectionParameter will be filled</param>
            <param name="bt">The width of U top flange.</param>
            <param name="bb">The width of U bottom flange.</param>
            <param name="h">The height of U shape.</param>
            <param name="tb">The bottom deck thickness.</param>
            <param name="tl">The left deck thickness.</param>
            <param name="tr">The right deck thickness.</param>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionFactory.FillCssRectangleHollow(IdeaRS.OpenModel.CrossSection.CrossSectionParameter,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Fill cross-section of shape rectangular for concrete sections
            </summary>
            <param name="cssO">Parameters of CrossSectionParameter will be filled</param>
            <param name="width">The width of css.</param>
            <param name="height">The height of css.</param>
            <param name="thickLeft">The thickness at the left side.</param>
            <param name="thickRight">The thickness at the rigth side.</param>
            <param name="thickTop">The thickness at the top.</param>
            <param name="thickBottom">The thickness at the bottom.</param>
            <returns></returns>
        </member>
        <member name="T:IdeaRS.OpenModel.CrossSection.CrossSectionType">
            <summary>
            Type of cross-section
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.OneComponentCss">
            <summary>
            Cross-section with one component without shape specification
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.RolledI">
            <summary>
            Rolled I
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.RolledAngle">
            <summary>
            Rolled angle
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.RolledT">
            <summary>
            Rolled T
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.RolledU">
            <summary>
            Rolled Channel
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.RolledCHS">
            <summary>
            Rolled circular holow section
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.RolledRHS">
            <summary>
            Rolled rectangular hollow setion
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.RolledDoubleUo">
            <summary>
            Composed double U rolled - ][
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.RolledDoubleUc">
            <summary>
            Composed double U rolled - []
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.RolledDoubleLt">
            <summary>
            Composed double L rolled - _||_
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.RolledDoubleLu">
            <summary>
            Pair double L  |_ _|
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.RolledTI">
            <summary>
            T profile made from part of I profile
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.RolledIPar">
            <summary>
            Rolled IPar - Parametrized I section
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.RolledUPar">
            <summary>
            Rolled UPar - Parametrized Channel section
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.RolledLPar">
            <summary>
            Rolled LPar - Parametrized Angle section
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.BoxFl">
            <summary>
            Welded Box - contains two dominante flanges and two webs
            -----
             | |
            -----
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.BoxWeb">
            <summary>
            Welded Box - contains two dominante flanges and two webs, bottom flange is inside between webs
            ------
             |  |
             |--|
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.Box2I">
            <summary>
            Box from double I rolled - II
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.Box2U">
            <summary>
            Box from double 2U
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.Box2U2PI">
            <summary>
            Box from 2U and 2 Plates
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.Box2L">
            <summary>
            Box welded from two rolled L-profiles
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.Box4L">
            <summary>
            Box section welded from 4 L-profiles
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.Iw">
            <summary>
            Welded I
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.Iwn">
            <summary>
            Asymmetrical welded I
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.Tw">
            <summary>
            Welded T
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.O">
            <summary>
            Circular section
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.Rect">
            <summary>
            Rectangular
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.Ign">
            <summary>
            Massive asymetrical I
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.Igh">
            <summary>
            Massive symetrical I with web root chamfering
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.Tg">
            <summary>
            Massive T
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.Lg">
            <summary>
            Massive L
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.LgMirrored">
            <summary>
            Mirrored Massive L
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.Ug">
            <summary>
            Massive U
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.CHSg">
            <summary>
            Massive circular hollow section
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.Zg">
            <summary>
            Massive Z section
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.RHSg">
            <summary>
            Massive Rectangular hollow section
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.Oval">
            <summary>
            Oval shape
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.General">
            <summary>
            General cross-section
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.Rolled2I">
            <summary>
            Pair rolled 2I
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.Trapezoid">
            <summary>
            Trapezoid
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.Ttfh">
            <summary>
            Massive T with top flange haunch
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.Twh">
            <summary>
            Massive T with wall haunch
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.Tgrev">
            <summary>
            Massive T reverse
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.Ttfhrev">
            <summary>
            Massive T reverse with bottom flange haunch
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.Twhrev">
            <summary>
            Massive T reverse with wall haunch
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.Tchamfer1">
            <summary>
            Massive T chamfer 1
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.Tchamfer2">
            <summary>
            Massive T chamfer 2
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.TT">
            <summary>
            TT section
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.TT1">
            <summary>
            TT chamfer section
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.Sg">
            <summary>
            Massive S section
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.GeneralSteel">
            <summary>
            General steel cross-section
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.GeneralConcrete">
            <summary>
            General concrete cross-section
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.CompositeBeamBox">
            <summary>
            Hollow cross-section with composite slab
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.CompositeBeamBox1">
            <summary>
            Hollow cross-section with composite slab
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.CompositeBeamIgenT">
            <summary>
            I-shaped cross-section with composite slab
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.CompositeBeamLLeft">
            <summary>
            Composite beam cross-section - L left
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.CompositeBeamPlate">
            <summary>
            Composite slab
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.CompositeBeamRResT">
            <summary>
            Composite beam cross-section - R res T
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.CompositeBeamRResT1">
            <summary>
            Composite beam cross-section - R res T - 1
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.CompositeBeamRT">
            <summary>
            Composite beam cross-section - R T
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.CompositeBeamShapeChamf">
            <summary>
            I-shaped cross-section with composite slab
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.CompositeBeamShapeChamfAssym">
            <summary>
            Assymetrical I-shaped cross-section with composite slab
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.CompositeBeamShapeIgen">
            <summary>
            I-shaped cross-section with composite slab
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.CompositeBeamShapeIT">
            <summary>
            I-shaped cross-section with composite slab
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.CompositeBeamShapeITAssym">
            <summary>
            Assymetrical I-shaped cross-section with composite slab
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.CompositeBeamTLeft">
            <summary>
            Composite beam cross-section -  T left
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.CompositeBeamTrapezoid">
            <summary>
            Trapezoidal cross-section with composite slab
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.CompositeBeamTresT">
            <summary>
            T-shaped cross-section with composite slab
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.CompositeBeamTrev">
            <summary>
            T-shaped cross-section with composite slab
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.CompositeBeamTrevResI">
            <summary>
            Composite beam cross-section -  T rev res I
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.CompositeBeamTrevResI1">
            <summary>
            Composite beam cross-section -  T rev res I - 1
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.CompositeBeamTrevResR">
            <summary>
            Composite beam cross-section -  T rev res R
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.CompositeBeamTrevResR1">
            <summary>
            Composite beam cross-section -  T rev res R - 1
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.CompositeBeamTrevT">
            <summary>
            Composite beam cross-section -  T rev T
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.CompositeBeamShapeTT">
            <summary>
            Composite beam cross-section -  TT
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.BeamShapeIHaunchChamfer">
            <summary>
            Beam cross-section -  I haunch chamfer
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.BeamShapeIHaunchChamferAssym">
            <summary>
            Beam cross-section -  I haunch chamfer assymetric
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.BeamShapeRevU">
            <summary>
            Beam cross-section -  Rev U
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.BeamShapeBox">
            <summary>
            Beam cross-section -  Box
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.BeamShapeBox1">
            <summary>
            Beam cross-section -  Box - 1
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.BeamShapeTrevChamferHaunchS">
            <summary>
            Beam cross-section -  T rev Chamfer Haunch S
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.BeamShapeTrevChamferHaunchD">
            <summary>
            Beam cross-section -  T rev Chamfer Haunch D
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.BeamShapeIrevDegen">
            <summary>
            Beam cross-section -  I rev Degen
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.BeamShapeIrevDegenAdd">
            <summary>
            Beam cross-section -  I rev Degen Add
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.BeamShapeTrevDegen">
            <summary>
            Beam cross-section -  T rev Degen
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.BeamShapeTrevDegenAdd">
            <summary>
            Beam cross-section -  T rev Degen Add
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.BeamShapeZDegen">
            <summary>
            Beam cross-section -  Z Degen
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.BeamShapeIZDegen">
            <summary>
            Beam cross-section -  IZ Degen
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.BeamShapeLDegen">
            <summary>
            Beam cross-section -  L Degen
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.CFZ">
            <summary>
            Cold formed thin-wall Z section
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.CFZed">
            <summary>
            Cold formed thin-wall Z section with lips
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.CFSigma">
            <summary>
            Cold formed thin-wall sigma section
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.CFC">
            <summary>
            Cold formed thin-wall C section
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.CFU">
            <summary>
            Cold formed thin-wall Channel section
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.CFL">
            <summary>
            Cold formed thin-wall angle section
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.CFRegPolygon">
            <summary>
            Cold formed thin-wall regular polygon
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.CFOmega">
            <summary>
            Cold formed thin-wall omega section
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.BoxDelta">
            <summary>
            Welded box - delta shape
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.BoxTriangle">
            <summary>
            Welded box - triangular shape
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.CF2Co">
            <summary>
            Cold formed - Pair 2C - opened (back to back)
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.CHSPar">
            <summary>
            Parametric circular hollow section
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.CFLgen">
            <summary>
            Cold formed - general angle section
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.CrossSectionType.UniqueName">
            <summary>
            Unique Name
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.CrossSection.CrossSectionParameter">
            <summary>
            Cross-section defined by parameters
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionParameter.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.CrossSectionParameter.CrossSectionType">
            <summary>
            Type of cross-section
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.CrossSectionParameter.Parameters">
            <summary>
            Parameters
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.CrossSectionParameter.Material">
            <summary>
            Material
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.CrossSection.ThermalConductivityLimit">
            <summary>
            Thermal conductivity limit
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.ThermalConductivityLimit.Upper">
            <summary>
            Upper limit
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.ThermalConductivityLimit.Lower">
            <summary>
            Lower limit
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.CrossSection.CrossSectionThermalAttribute">
            <summary>
            Cross-section thermal attribute
            </summary>
            <example> 
            This sample shows how to create thermal attributes on cross-section.
            <code lang = "C#">
            //Creating the model
            OpenModel openModel = new OpenModel();
            
            Set thermal definition - on component 0, 
            CrossSectionThermalAttribute thermalAttr = new CrossSectionThermalAttribute();
            thermalAttr.Element = new ReferenceElement(css);
            CrossSectionComponentThermalData thermalComp = new CrossSectionComponentThermalData();
            thermalComp.MoistureContent = 0.015;
            thermalComp.ThermalConductivityLimit = ThermalConductivityLimit.Lower;
            thermalComp.ComponentIndex = 0;
            thermalAttr.Components.Add(thermalComp);
            openModel.AddObject(thermalAttr);
            </code>
            </example>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.CrossSectionThermalAttribute.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.CrossSectionThermalAttribute.Components">
            <summary>
            List of components
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.CrossSection.CrossSectionComponentThermalData">
            <summary>
            Cross-section component thermal data
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.CrossSectionComponentThermalData.ComponentIndex">
            <summary>
            Zero based index of component
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.CrossSectionComponentThermalData.MoistureContent">
            <summary>
            Moisture content
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.CrossSectionComponentThermalData.ThermalConductivityLimit">
            <summary>
            Thermal conductivity limit
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.CrossSection.CssComponent">
            <summary>
            One component of cross-section
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.CssComponent.Id">
            <summary>
            Component Id
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.CssComponent.Material">
            <summary>
            Material
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.CssComponent.Geometry">
            <summary>
            Geometry
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.CssComponent.Phase">
            <summary>
            Phase
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.CrossSection.Parameter">
            <summary>
            Common parameter of cross-section
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.Parameter.Name">
            <summary>
            Name of property
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.CrossSection.ParameterDouble">
            <summary>
            Double parameter of cross-section
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.ParameterDouble.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.CrossSection.ParameterInt">
            <summary>
            Integer parameter of cross-section
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.ParameterInt.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.CrossSection.ParameterBool">
            <summary>
            Boolean parameter of cross-section
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.ParameterBool.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.CrossSection.ParameterString">
            <summary>
            String parameter of cross-section
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.ParameterString.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.CrossSection.ParameterReferenceElement">
            <summary>
            Reference element parameter of cross-section
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.ParameterReferenceElement.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.CrossSection.ReinforcedCrossSection">
             <summary>
             Reinforced cross-section
             </summary>
             <example> 
             This sample shows how to create reinforced cross-section.
             <code lang = "C#">
             //Creating the model
             OpenModel openModel = new OpenModel();
             
             //Cocrete material
             MatConcreteEc2 mat = new MatConcreteEc2();
             //...
             openModel.AddObject(mat);
            
             //Reinforcement material
             MatReinforcementEc2 matR = new MatReinforcementEc2();
             //...
             openModel.AddObject(matR);
            
             //Cross-section without the bars
             //One component square 0.8x0.8m
             IdeaRS.OpenModel.CrossSection.CrossSectionComponent css = new IdeaRS.OpenModel.CrossSection.CrossSectionComponent();
             css.Name = "CSS1";
             
             //Component of cross-section
             CssComponent comp = new CssComponent();
             comp.Material = new ReferenceElement(mat);
             comp.Phase = 0;
             
             //Geometry of component 0.8x0.8
             Region2D region = new Region2D();
             PolyLine2D outline = new PolyLine2D();
             outline.StartPoint = new Point2D();
             outline.StartPoint.X = -0.04;
             outline.StartPoint.Y = -0.04;
             LineSegment2D seg = new LineSegment2D();
             seg.EndPoint = new Point2D();
             seg.EndPoint.X = 0.04;
             seg.EndPoint.Y = -0.04;
             outline.Segments.Add(seg);
             seg = new LineSegment2D();
             seg.EndPoint = new Point2D();
             seg.EndPoint.X = 0.04;
             seg.EndPoint.Y = 0.04;
             outline.Segments.Add(seg);
             seg = new LineSegment2D();
             seg.EndPoint = new Point2D();
             seg.EndPoint.X = -0.04;
             seg.EndPoint.Y = 0.04;
             outline.Segments.Add(seg);
             seg = new LineSegment2D();
             seg.EndPoint = new Point2D();
             seg.EndPoint.X = -0.04;
             seg.EndPoint.Y = -0.04;
             outline.Segments.Add(seg);
             region.Outline = outline;
             
             //Optional - setting openning in this component 0,2x0,2
             PolyLine2D openning = new PolyLine2D();
             openning.StartPoint = new Point2D();
             openning.StartPoint.X = -0.01;
             openning.StartPoint.Y = -0.01;
             seg = new LineSegment2D();
             seg.EndPoint = new Point2D();
             seg.EndPoint.X = -0.01;
             seg.EndPoint.Y = 0.01;
             openning.Segments.Add(seg);
             seg = new LineSegment2D();
             seg.EndPoint = new Point2D();
             seg.EndPoint.X = 0.01;
             seg.EndPoint.Y = 0.01;
             openning.Segments.Add(seg);
             seg = new LineSegment2D();
             seg.EndPoint = new Point2D();
             seg.EndPoint.X = 0.01;
             seg.EndPoint.Y = -0.01;
             openning.Segments.Add(seg);
             seg = new LineSegment2D();
             seg.EndPoint = new Point2D();
             seg.EndPoint.X = -0.01;
             seg.EndPoint.Y = -0.01;
             openning.Segments.Add(seg);
             region.Openings.Add(openning);
             
             comp.Geometry = region;
             css.Components.Add(comp);
             openModel.AddObject(css);
             
             //Reinforced cross-section (references cross-section and adds the bars)
             //bar 8mm in each corner
             ReinforcedCrossSection rcs = new ReinforcedCrossSection();
             rcs.Name = "RCSS1";
             rcs.CrossSection = new ReferenceElement(css);
             
             //One bar in the corner
             ReinforcedBar bar = new ReinforcedBar();
             bar.Diameter = 0.008;
             bar.Material = new ReferenceElement(matR);
             bar.Point = new Point2D();
             bar.Point.X = -0.025;
             bar.Point.Y = -0.025;
             rcs.Bars.Add(bar);
             
             bar = new ReinforcedBar();
             bar.Diameter = 0.008;
             bar.Material = new ReferenceElement(matR);
             bar.Point = new Point2D();
             bar.Point.X = 0.025;
             bar.Point.Y = -0.025;
             rcs.Bars.Add(bar);
             
             bar = new ReinforcedBar();
             bar.Diameter = 0.008;
             bar.Material = new ReferenceElement(matR);
             bar.Point = new Point2D();
             bar.Point.X = 0.025;
             bar.Point.Y = 0.025;
             rcs.Bars.Add(bar);
             
             bar = new ReinforcedBar();
             bar.Diameter = 0.008;
             bar.Material = new ReferenceElement(matR);
             bar.Point = new Point2D();
             bar.Point.X = -0.025;
             bar.Point.Y = 0.025;
             rcs.Bars.Add(bar);
             
             openModel.AddObject(rcs);
             </code>
             </example>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.ReinforcedCrossSection.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.ReinforcedCrossSection.Name">
            <summary>
            Name of cross-section
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.ReinforcedCrossSection.CrossSection">
            <summary>
            Cross-section
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.ReinforcedCrossSection.Bars">
            <summary>
            Reinforced bars
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.ReinforcedCrossSection.Stirrups">
            <summary>
            Stirrups
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.ReinforcedCrossSection.TendonBars">
            <summary>
            Tendon bars
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.ReinforcedCrossSection.TendonDucts">
            <summary>
            Tendon ducts
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.CrossSection.Stirrup">
            <summary>
            Stirrup
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.CrossSection.Stirrup.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.Stirrup.Geometry">
            <summary>
            Geometry
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.Stirrup.Diameter">
            <summary>
            Diameter
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.Stirrup.Material">
            <summary>
            Material
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.Stirrup.AnchorageLenght">
            <summary>
            Anchorage Lenght
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.Stirrup.DiameterOfMandrel">
            <summary>
            Radius of stirrup mandrel - refering to stirrup axis
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.Stirrup.IsClosed">
            <summary>
            Open / Closed stirrup
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.Stirrup.Distance">
            <summary>
            Longitudinal distance between stirrups
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.Stirrup.ShearCheck">
            <summary>
            Status of shear check, not possible for detailing stirrup
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.Stirrup.TorsionCheck">
            <summary>
            Status of torsion check, not possible for detailing stirrup
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.CrossSection.FatigueTypeOfPrestressingSteel">
            <summary>
            Posttensioned reinforcement type
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.FatigueTypeOfPrestressingSteel.PostTensioningSingleStrandsInPlasticDucts">
            <summary>
            Table 6.4N: Parameters for S-N curves of prestressing steel - row 2
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.FatigueTypeOfPrestressingSteel.PostTensioningStraightTendonsOrCurvedTendonsInPlasticDucts">
            <summary>
            Table 6.4N: Parameters for S-N curves of prestressing steel - row 3
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.FatigueTypeOfPrestressingSteel.PostTensioningCurvedTendonsInSteelDucts">
            <summary>
            Table 6.4N: Parameters for S-N curves of prestressing steel - row 4
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.FatigueTypeOfPrestressingSteel.PostTensioningSplicingDevices">
            <summary>
            Table 6.4N: Parameters for S-N curves of prestressing steel - row 5
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.FatigueTypeOfPrestressingSteel.PreTensioning">
            <summary>
            Table 6.4N: Parameters for S-N curves of prestressing steel - row 1
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.FatigueTypeOfPrestressingSteel.ExternalTendon">
            <summary>
            Table 6.4N: Parameters for S-N curves of prestressing steel - special type
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.CrossSection.TendonBarType">
            <summary>
            Tendon bar type
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.TendonBarType.Posttensioned">
            <summary>
            Post-tensioned
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.TendonBarType.Pretensioned">
            <summary>
            Pre-tensioned
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.CrossSection.TendonBar">
            <summary>
            Tendon bar
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.TendonBar.Id">
            <summary>
            Tendon Id
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.TendonBar.TendonType">
            <summary>
            Tendon type
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.TendonBar.Point">
            <summary>
            Position of bar
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.TendonBar.Material">
            <summary>
            Material
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.TendonBar.PrestressingOrder">
            <summary>
            order of tendon prestessing
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.TendonBar.NumStrandsInTendon">
            <summary>
            number of ropes in tendon
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.TendonBar.PrestressReinforcementType">
            <summary>
            set of prestress reinforcement type
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.TendonBar.Phase">
            <summary>
            Phase
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.TendonBar.TendonDuct">
            <summary>
            Tendon duct
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.CrossSection.MaterialDuct">
            <summary>
            Tendon ducts material type
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.MaterialDuct.Metal">
            <summary>
            Metal
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSection.MaterialDuct.Plastic">
            <summary>
            Plastic
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.CrossSection.TendonDuct">
            <summary>
            Tendon duct
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.TendonDuct.Id">
            <summary>
            Tendon duct Id
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.TendonDuct.Point">
            <summary>
            Position of duct
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.TendonDuct.MaterialDuct">
            <summary>
            Tendon duct material
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.TendonDuct.IsDebondingTube">
            <summary>
            rue for debonding tubes, false for tendon ducts
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.TendonDuct.Diameter">
            <summary>
            Diameter
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.CrossSection.ReinforcedBar">
            <summary>
            Reinforced bar
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.ReinforcedBar.Point">
            <summary>
            Position of bar
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.ReinforcedBar.Diameter">
            <summary>
            Diameter
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.CrossSection.ReinforcedBar.Material">
            <summary>
            Material
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.BoltAssembly">
            <summary>
            Bolt assembly
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.BoltAssembly.Name">
            <summary>
            Name of bolt assembly
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.BoltAssembly.BoltGrade">
            <summary>
            Bolt grade
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.BoltAssembly.Diameter">
            <summary>
            Bolt diameter
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.BoltAssembly.Borehole">
            <summary>
            Size of borehole
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.BoltAssembly.HeadDiameter">
            <summary>
            Diameter of the head
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.BoltAssembly.DiagonalHeadDiameter">
            <summary>
            Second diameter of the head
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.BoltAssembly.HeadHeight">
            <summary>
            Thickness of head
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.BoltAssembly.GrossArea">
            <summary>
            Gross cross-section area
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.BoltAssembly.TensileStressArea">
            <summary>
            Tensile stress area
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.BoltAssembly.NutThickness">
            <summary>
            Thickness of Nut
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.BoltAssembly.WasherThickness">
            <summary>
            Thickness of washer
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.BoltAssembly.WasherAtHead">
            <summary>
            Washer at head side of bolt assembly
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.BoltAssembly.WasherAtNut">
            <summary>
            Is washer at Nut side of bolt assembly
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.MatAnchorProperties">
            <summary>
            Anchor custom data
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatAnchorProperties.KT">
            <summary>
            Tension linear stiffness.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatAnchorProperties.KTN">
            <summary>
            Nonlinear stiffness in tension after over loaded FLT
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatAnchorProperties.FLT">
            <summary>
            Limit force in tension
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatAnchorProperties.Ult">
            <summary>
            Limit deformation in tension for stop solution UCRIT
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatAnchorProperties.KS">
            <summary>
            Shear linear stiffness.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatAnchorProperties.KSN">
            <summary>
            Nonlinear stiffness in shear after over loaded FLS
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatAnchorProperties.FLS">
            <summary>
            Limit force in shear.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatAnchorProperties.Uls">
            <summary>
            Limit deformation in shear for stop solution UCRIT
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.MatConcreteACI">
            <summary>
            Material concrete ACI
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Material.MatConcreteACI.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteACI.Fcc">
            <summary>
            Compressive strength of concrete
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.MatConcreteCAN">
            <summary>
            Material concrete CAN
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Material.MatConcreteCAN.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteCAN.Fcc">
            <summary>
            Compressive strength of concrete
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.MatConcreteAUS">
            <summary>
            Material concrete CAN
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Material.MatConcreteAUS.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteAUS.Fcc">
            <summary>
            Compressive strength of concrete
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.MatConcreteRUS">
            <summary>
            Material concrete CAN
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Material.MatConcreteRUS.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteRUS.Fck">
            <summary>
            Compressive strength of concrete
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.MaterialBoltGrade">
            <summary>
            Material bolt grade
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MaterialBoltGrade.fub">
            <summary>
            Ultimate tensile strength
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MaterialBoltGrade.fyb">
            <summary>
            Yield strength
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MaterialBoltGrade.Elongation">
            <summary>
            Elongation after fracture - for 20% elongation use value 0.2
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MaterialBoltGrade.Code">
            <summary>
            Design code
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MaterialBoltGrade.MprlElementID">
            <summary>
            Name fo the bolt grade in MPRL database
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MaterialBoltGrade.MprlTableID">
            <summary>
            Unique ID of MPRL database table where the bolt grade was taken from.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.MatReinforcementACI">
            <summary>
            Material reinforcement ACI
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Material.MatReinforcementACI.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatReinforcementACI.Epssu">
            <summary>
            Characteristic strain of reinforcement
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatReinforcementACI.Fy">
            <summary>
            Characteristic yield strength of reinforcement
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.MatSteelAUS">
            <summary>
            Material steel AISC
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatSteelAUS.fy">
            <summary>
            Yield strength for nominal thickness of the element &lt;= 40mm - f<sub>y</sub>
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatSteelAUS.fu">
            <summary>
            Ultimate strength  for nominal thickness of the element &lt;= 40mm - f<sub>u</sub>
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.MatSteelCISC">
            <summary>
            Material steel CISC
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatSteelCISC.fy">
            <summary>
            Yield strength for nominal thickness of the element &lt;= 40mm - f<sub>y</sub>
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatSteelCISC.fu">
            <summary>
            Ultimate strength  for nominal thickness of the element &lt;= 40mm - f<sub>u</sub>
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.MatConcrete">
            <summary>
            Material concrete base class
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.ConcCementClass">
            <summary>
            Cement class
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ConcCementClass.S">
            <summary>
            Cement of strength Classes CEM 32,5 N (Class S)
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ConcCementClass.R">
            <summary>
            Cement of strength Classes CEM 42,5 R, CEM 52,5 N and CEM 52,5 R (Class R)
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ConcCementClass.N">
            <summary>
            Cement of strength Classes CEM 32,5 R, CEM 42,5 N (Class N)
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.ConcAggregateType">
            <summary>
            Concrete aggreage type
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ConcAggregateType.Quartzite">
            <summary>
            Quartzite aggregates
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ConcAggregateType.Limestone">
             <summary>
            Limestone aggregates
             </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ConcAggregateType.Sandstone">
            <summary>
            Sandstone aggregates
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ConcAggregateType.Basalt">
            <summary>
            Basalt aggregates
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.ConcFireDiagramType">
            <summary>
            Concrete stress-strain diagram for fire
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ConcFireDiagramType.ByCodeWithAutomaticTemperature">
            <summary>
            By the code with automatic temperature type
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ConcFireDiagramType.ByCodeWithFixedTemperature">
            <summary>
            By the code with fixed temperature type
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.ConcDiagramType">
            <summary>
            Concrete stress-strain diagram
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ConcDiagramType.Bilinear">
            <summary>
            Bilinear type
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ConcDiagramType.Parabolic">
            <summary>
            Parabolic type
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ConcDiagramType.DefinedByUser">
            <summary>
            Defined by user
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.MatConcreteEc2">
            <summary>
            Material concrete Ec2
            </summary>
            <example> 
            This sample shows how to create concrete material.
            <code lang = "C#">
            //Creating the model
            OpenModel openModel = new OpenModel();
            
            //Cocrete material
            MatConcreteEc2 mat = new MatConcreteEc2();
            mat.Name = "Concrete1";
            mat.UnitMass = 2500.0;
            mat.E = 32.8e9;
            mat.G = 13.667e9;
            mat.Poisson = 0.2;
            mat.SpecificHeat = 0.6;
            mat.ThermalExpansion = 0.00001;
            mat.ThermalConductivity = 45;
            mat.Fck = 25.5e6;
            mat.CalculateDependentValues = true;
            
            //Set s-s diagram as a default parabolic
            mat.DiagramType = ConcDiagramType.Parabolic;
            
            //Set s-s diagram as an user defined
            mat.DiagramType = ConcDiagramType.DefinedByUser;
            var userDiagram = new Polygon2D();
            mat.UserDiagram = userDiagram;
            userDiagram.Points.Add(new Point2D() { X = -0.021, Y = 0 });
            userDiagram.Points.Add(new Point2D() { X = -0.02, Y = 0 });
            userDiagram.Points.Add(new Point2D() { X = -0.0025, Y = -80000000});
            userDiagram.Points.Add(new Point2D() { X = -0.0024, Y = -79868660.43});
            userDiagram.Points.Add(new Point2D() { X = -0.0023, Y = -79461961.9 });
            userDiagram.Points.Add(new Point2D() { X = -0.0022, Y = -78762709.44});
            userDiagram.Points.Add(new Point2D() { X = -0.0021, Y = -77756658.69});
            userDiagram.Points.Add(new Point2D() { X = -0.0019, Y = -74785483.74	});
            userDiagram.Points.Add(new Point2D() { X = -0.0017, Y = -70514061.33	});
            userDiagram.Points.Add(new Point2D() { X = -0.0015, Y = -64981949.46	});
            userDiagram.Points.Add(new Point2D() { X = -0.001	, Y = -46511627.91	});
            userDiagram.Points.Add(new Point2D() { X = -0.0005, Y = -23904382.47	});
            userDiagram.Points.Add(new Point2D() { X = 0, Y = 0});
            userDiagram.Points.Add(new Point2D() { X = 0.001, Y = 0 });
            
            //Setting thermal characteristcs of material (in this case by the code)
            mat.StateOfThermalConductivity = ThermalConductivityState.Code;
            mat.StateOfThermalExpansion = ThermalExpansionState.Code;
            mat.StateOfThermalSpecificHeat = ThermalSpecificHeatState.Code;
            mat.StateOfThermalStressStrain = ThermalStressStrainState.Code;
            
            openModel.AddObject(mat);
            </code>
            </example>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteEc2.CalculateDependentValues">
            <summary>
            Setting calculation dependent values on f<sub>ck</sub>
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteEc2.Fck">
            <summary>
            Characteristic compressive cylinder strength of concrete at 28 days - f<sub>ck</sub>
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteEc2.Ecm">
            <summary>
            Secant modulus of elasticity of concrete - E<sub>cm</sub>
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteEc2.Epsc1">
            <summary>
            Compressive strain in the concrete - ε<sub>c1</sub>
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteEc2.Epsc2">
            <summary>
            Compressive strain in the concrete - ε<sub>c2</sub>
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteEc2.Epsc3">
            <summary>
            Compressive strain in the concrete - ε<sub>c3</sub>
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteEc2.Epscu1">
            <summary>
            Ultimate compressive strain in the concrete - ε<sub>cu1</sub>
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteEc2.Epscu2">
            <summary>
            Ultimate compressive strain in the concrete - ε<sub>cu2</sub>
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteEc2.Epscu3">
            <summary>
            Ultimate compressive strain in the concrete - ε<sub>cu3</sub>
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteEc2.Fctm">
            <summary>
            Mean value of axial tensile strength of concrete - f<sub>ctm</sub>
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteEc2.Fctk_0_05">
            <summary>
            Characteristic axial tensile strength of concrete 5% quantile - f<sub>ctk,0,05</sub>
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteEc2.Fctk_0_95">
            <summary>
            Characteristic axial tensile strength of concrete 95% quantile - f<sub>ctk,0,95</sub>
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteEc2.NFactor">
            <summary>
            Coefficient n-factor - necessary parabolic part of stress-strain diagram - n
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteEc2.Fcm">
            <summary>
            Mean value of concrete cylinder compressive strength - f<sub>cm</sub>
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteEc2.StoneDiameter">
            <summary>
            Diameter of stone
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteEc2.CementClass">
            <summary>
            Type of cement class
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteEc2.AggregateType">
            <summary>
            Type of aggregate
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteEc2.DiagramType">
            <summary>
            Type of stress-strain diagram bilinear/parabolic/general for ULS calculation
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteEc2.SilicaFume">
            <summary>
            Contains silica fume
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteEc2.PlainConcreteDiagram">
            <summary>
            Stress strain diagram with tension part
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteEc2.UserDiagram">
            <summary>
            Stress-strain diagram defined by user
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.ConcCementClassSIA">
            <summary>
            Cement class
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ConcCementClassSIA.S">
            <summary>
            cement of strength Classes CEM 32,5 N (Class S)
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ConcCementClassSIA.R">
            <summary>
            cement of strength Classes CEM 42,5 R, CEM 52,5 N and CEM 52,5 R (Class R)
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ConcCementClassSIA.N">
            <summary>
            cement of strength Classes CEM 32,5 R, CEM 42,5 N (Class N)
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.ConcAggregateTypeSIA">
            <summary>
            Concrete aggreage type
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ConcAggregateTypeSIA.AlluvialGravel">
            <summary>
            Alluvial gravel
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ConcAggregateTypeSIA.CrushedLimestone">
            <summary>
            Crushed limestone
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ConcAggregateTypeSIA.Micaceous">
            <summary>
            Micaceous
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.CrackWidthRequirementsSIA">
            <summary>
            crack width requirement
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.CrackWidthRequirementsSIA.NotNecessary">
            <summary>
            calculation is nod defined it means not necessary
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.CrackWidthRequirementsSIA.A">
            <summary>
            type A
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.CrackWidthRequirementsSIA.B">
            <summary>
            type B
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.CrackWidthRequirementsSIA.C">
            <summary>
            type C
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.CrackWidthRequirementsSIA.Value">
            <summary>
            value is define as fsd-value
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.MatConcreteSIA">
            <summary>
            Material concrete SIA
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteSIA.CalculateDependentValues">
            <summary>
            setting calculation dependent values on fck
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteSIA.Fck">
            <summary>
            characteristic compressive cylinder strength of concrete at 28 days
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteSIA.Fcm">
            <summary>
            mean value of concrete cylinder compressive strength
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteSIA.Ecm">
            <summary>
            secant modulus of elasticity of concrete
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteSIA.Fctm">
            <summary>
            mean value of axial tensile strength of concrete
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteSIA.Fctk_0_05">
            <summary>
            characteristic axial tensile strength of concrete 5% quantile
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteSIA.Fctk_0_95">
            <summary>
            characteristic axial tensile strength of concrete 95% quantile
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteSIA.Nfc">
            <summary>
            conversion factor nfc
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteSIA.Tck">
            <summary>
            characteristic  value of the shear stress limit
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteSIA.Epsc1d">
            <summary>
            compressive strain in the concrete
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteSIA.Epsc2d">
            <summary>
            compressive strain in the concrete
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteSIA.StoneDiameter">
            <summary>
            diameter of stone
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteSIA.AggregateType">
            <summary>
            type of aggregate
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteSIA.CementClass">
            <summary>
            type of cement class
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteSIA.DiagramType">
            <summary>
            type of stress-strain diagram bilinear/parabolic/general for ULS calculation
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatConcreteSIA.PlainConcreteDiagram">
            <summary>
            Stress strain diagram with tension part
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.ThermalExpansionState">
            <summary>
            Type of curvature -  thermal expansion
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ThermalExpansionState.None">
            <summary>
            The curvature is not defined
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ThermalExpansionState.Code">
            <summary>
            The curvatire is defined by the code
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ThermalExpansionState.User">
            <summary>
            The curvature is input by the user
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.ThermalConductivityState">
            <summary>
            Type of curvature - thermal conductivity
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ThermalConductivityState.None">
            <summary>
            The curvature is not defined
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ThermalConductivityState.Code">
            <summary>
            The curvatire is defined by the code
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ThermalConductivityState.User">
            <summary>
            The curvature is input by the user
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.ThermalSpecificHeatState">
            <summary>
            Type of curvature - thermal specific heat
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ThermalSpecificHeatState.None">
            <summary>
            The curvature is not defined
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ThermalSpecificHeatState.Code">
            <summary>
            The curvatire is defined by the code
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ThermalSpecificHeatState.User">
            <summary>
            The curvature is input by the user
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.ThermalStressStrainState">
            <summary>
            Type of curvature - thermal stress-strain curvature
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ThermalStressStrainState.None">
            <summary>
            The curvature is not defined
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ThermalStressStrainState.Code">
            <summary>
            The curvatire is defined by the code
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ThermalStressStrainState.User">
            <summary>
            The curvature is input by the user
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.ThermalStrainState">
            <summary>
            Type of curvature - thermal strain curvature
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ThermalStrainState.None">
            <summary>
            The curvature is not defined
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ThermalStrainState.Code">
            <summary>
            The curvatire is defined by the code
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ThermalStrainState.User">
            <summary>
            The curvature is input by the user
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.Material">
            <summary>
            Material base class
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.Material.Name">
            <summary>
            Name of material
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.Material.E">
            <summary>
            Young's modulus
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.Material.G">
            <summary>
            Shear modulus
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.Material.Poisson">
            <summary>
            Poisson's ratio
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.Material.UnitMass">
            <summary>
            Unit weight
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.Material.SpecificHeat">
            <summary>
            Specific heat capacity
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.Material.ThermalExpansion">
            <summary>
            Thermal expansion
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.Material.ThermalConductivity">
            <summary>
            Thermal conductivity
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.Material.IsDefaultMaterial">
            <summary>
            True if material is default material from the code
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.Material.OrderInCode">
            <summary>
            Order of this material in the code
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.Material.StateOfThermalExpansion">
            <summary>
            State of thermal expansion curvature
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.Material.StateOfThermalConductivity">
            <summary>
            State of thermal conductivity curvature
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.Material.StateOfThermalSpecificHeat">
            <summary>
            State of thermal specific heat curvature
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.Material.StateOfThermalStressStrain">
            <summary>
            State of thermal specific stress-strain curvature
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.Material.StateOfThermalStrain">
            <summary>
            State of thermal strain curvature
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.Material.UserThermalSpecificHeatCurvature">
            <summary>
            User-defined curvature for thermal specific heat { x = Θ[K], y = c<sub>p</sub>[J/(kg K)] }
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.Material.UserThermalConductivityCurvature">
            <summary>
            User-defined curvature for thermal conductivity curvature { x = Θ[K], y = λ<sub>c</sub>[W/(m K)] }
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.Material.UserThermalExpansionCurvature">
            <summary>
            User-defined curvature for thermal expansion curvature { x = Θ[K], y = γ[K<sup>-1</sup>] }
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.Material.UserThermalStrainCurvature">
            <summary>
            User-defined curvature for thermal strain curvature { x = Θ[K], y = ε<sub>c</sub>[Δl/l] }
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.Material.UserThermalStressStrainCurvature">
            <summary>
            User-defined curvature for thermal stress,strain { Temperature = Θ[K], {x = ε[-], y = σ[Pa]}}
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.MatPrestressSteel">
            <summary>
            Material prestressing steel base class
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatPrestressSteel.Diameter">
            <summary>
            Diameter
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatPrestressSteel.Area">
            <summary>
            Area
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatPrestressSteel.NumberOfWires">
            <summary>
            number of wires in strand
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatPrestressSteel.EquivalentDiameter">
            <summary>
            Equivalent diameter
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.PrestressSteelType">
            <summary>
            Type of prestress steel
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.PrestressSteelType.PlainRoundWire">
            <summary>
            Plain round wire - hladké  dráty
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.PrestressSteelType.IndentedWire">
            <summary>
            Indneted wire - draty s vtisky
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.PrestressSteelType.Strand">
            <summary>
            Strand - lana
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.PrestressSteelType.PlainRoundBar">
            <summary>
            Plain round bar - hladké tyče 
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.PrestressSteelType.RibbedBar">
            <summary>
            Ribbed bar - žebírkové tyče
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.PrestressSteelType.CompactedStrand">
            <summary>
            Compacted strand - lana
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.SurfaceCharacteristicType">
            <summary>
            Surface characteristic
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.SurfaceCharacteristicType.Plain">
            <summary>
            Plain
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.SurfaceCharacteristicType.Indented">
            <summary>
            Indented
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.SurfaceCharacteristicType.Ribbed">
            <summary>
            Ribbed
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.ProductionType">
            <summary>
            Production type
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ProductionType.HotRolledAndProcessed">
            <summary>
            Hot rolled and processed
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ProductionType.Patented">
            <summary>
            Patented
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ProductionType.ColdDrawn">
            <summary>
            Cold drawn
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ProductionType.StressRelieved">
            <summary>
            Stress relieved
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ProductionType.LowRelaxation">
            <summary>
            Low relaxation
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.MatPrestressSteelEc2">
            <summary>
            Material prestressing steel Ec2
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Material.MatPrestressSteelEc2.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatPrestressSteelEc2.Fm">
            <summary>
            Char. value of max. force (prEN 10138)
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatPrestressSteelEc2.Fp01">
            <summary>
            Char. 0.1% proof force
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatPrestressSteelEc2.Agt">
            <summary>
            Total elongation at max. force (prEN 10138)
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatPrestressSteelEc2.Fr">
            <summary>
            Fatigue stress range (prEN 10138)
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatPrestressSteelEc2.Fpk">
            <summary>
            Characteristic tensile strength (EN 1992-1-1)
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatPrestressSteelEc2.Fp01k">
            <summary>
            0,1% proof-stress (EN 1992-1-1)
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatPrestressSteelEc2.Epsuk">
            <summary>
            Characteristic strain at maximum load (EN 1992-1-1)
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatPrestressSteelEc2.Type">
            <summary>
            Type of prestress steel
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatPrestressSteelEc2.SurfaceCharacteristic">
            <summary>
            Surface characteristic
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatPrestressSteelEc2.Production">
            <summary>
            Production type
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatPrestressSteelEc2.DiagramType">
            <summary>
            Type of diagram
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.PrestressSteelTypeSIA">
            <summary>
            Type of prestress steel
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.PrestressSteelTypeSIA.Wire">
            <summary>
            wire - drát
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.PrestressSteelTypeSIA.Strand">
            <summary>
            Strand - lana
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.PrestressSteelTypeSIA.Bar">
            <summary>
            bar - tyč
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.SurfaceCharacteristicTypeSIA">
            <summary>
            Surface characteristic
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.SurfaceCharacteristicTypeSIA.Plain">
            <summary>
            Plain
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.SurfaceCharacteristicTypeSIA.Indented">
            <summary>
            Indented
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.SurfaceCharacteristicTypeSIA.Ribbed">
            <summary>
            Ribbed
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.MatPrestressSteelSIA">
            <summary>
            Material prestressing steel SIA
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Material.MatPrestressSteelSIA.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatPrestressSteelSIA.Fpk">
            <summary>
            characteristic value of tensile strength of prestressing steel
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatPrestressSteelSIA.Fp01k">
            <summary>
            characteristic value of yield strength of prestressing steel
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatPrestressSteelSIA.Epsuk">
            <summary>
            characteristic value of ultimate strain of reinforcing steel or strain at maximum load for prestressing steel
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatPrestressSteelSIA.Fpd">
            <summary>
            dimensioning value of yield strength of prestressing steel
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatPrestressSteelSIA.Epsud">
            <summary>
            dimensioning value of ultimate strain of reinforcing steel or prestressing steel
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatPrestressSteelSIA.Type">
            <summary>
            Type of prestress steel
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatPrestressSteelSIA.SurfaceCharacteristic">
            <summary>
            Surface characteristic
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatPrestressSteelSIA.DiagramType">
            <summary>
            Type of diagram
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.ReinfBarSurface">
            <summary>
            Reinforcement bar surface
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ReinfBarSurface.Smooth">
            <summary>
            Smooth bar surface
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ReinfBarSurface.Ribbed">
            <summary>
            Ribbed bar surface
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.ReinfDiagramType">
            <summary>
            Reinforcement stress-strain diagram
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ReinfDiagramType.BilinerWithAnInclinedTopBranch">
            <summary>
            Billinear with an inclined top branch
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ReinfDiagramType.BilinerWithOutAnInclinedTopBranch">
            <summary>
            Billinear without an inclined top branch
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ReinfDiagramType.DefinedByUser">
            <summary>
            Defined by user
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.MatReinforcement">
            <summary>
            Material reinforcement base class
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatReinforcement.BarSurface">
            <summary>
            Surface of bar
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.ReinfClass">
            <summary>
            Reinforcement class type
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ReinfClass.A">
            <summary>
            Class A
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ReinfClass.B">
            <summary>
            Class B
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ReinfClass.C">
            <summary>
            Class C
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.ReinfType">
            <summary>
            Type of reinforcement
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ReinfType.Bars">
            <summary>
            Bars
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ReinfType.DecoiledRods">
            <summary>
            Decoiled rods
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ReinfType.WireFabrics">
            <summary>
            Wire fabrics
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ReinfType.LatticeGirders">
            <summary>
            Lattice girders
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.ReinfFabrication">
            <summary>
            Reinforcement fabrication
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ReinfFabrication.HotRolled">
            <summary>
            Hot rolled
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ReinfFabrication.ColdWorked">
            <summary>
            Cold worked
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.ReinfFireDiagramType">
            <summary>
            Stress-strain reeinforcemnt diagram for fire
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ReinfFireDiagramType.FireBilinerWithAnInclinedTopBranch">
            <summary>
            Billinear with an inclined top branch
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.ReinfFireDiagramType.FireBilinerWithOutAnInclinedTopBranch">
            <summary>
            Billinear without an inclined top branch
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.MatReinforcementEc2">
            <summary>
            Material reinforcement Ec2
            </summary>
            <example> 
            This sample shows how to create reinforcement material.
            <code lang = "C#">
            //Creating the model
            OpenModel openModel = new OpenModel();
            
            //Reinforcement material
            MatReinforcementEc2 matR = new MatReinforcementEc2();
            matR.Name = "Reinf";
            matR.UnitMass = 7850.0;
            matR.E = 200e9;
            matR.Poisson = 0.2;
            matR.G = 83.333e9;
            matR.SpecificHeat = 0.6;
            matR.ThermalExpansion = 0.00001;
            matR.ThermalConductivity = 45;
            matR.BarSurface = ReinfBarSurface.Ribbed;
            matR.Fyk = 387e6;
            matR.CoeffFtkByFyk = 1.05;
            matR.Epsuk = 0.025;
            matR.Class = ReinfClass.A;
            matR.Type = ReinfType.Bars;
            matR.Fabrication = ReinfFabrication.HotRolled;
            matR.DiagramType = ReinfDiagramType.BilinerWithAnInclinedTopBranch;
            
            //Setting thermal characteristcs of material (in this case by the code)
            matR.StateOfThermalConductivity = ThermalConductivityState.Code;
            matR.StateOfThermalExpansion = ThermalExpansionState.Code;
            matR.StateOfThermalSpecificHeat = ThermalSpecificHeatState.Code;
            matR.StateOfThermalStressStrain = ThermalStressStrainState.Code;
            
            openModel.AddObject(matR);
            </code>
            </example>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatReinforcementEc2.Fyk">
            <summary>
            Characteristic yield strength of reinforcement - f<sub>yk</sub>
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatReinforcementEc2.CoeffFtkByFyk">
            <summary>
            Coefficient  f<sub>tk</sub>/f<sub>yk</sub> - k
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatReinforcementEc2.Epsuk">
            <summary>
            Characteristic strain of reinforcement at maximum load - ε<sub>uk</sub>
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatReinforcementEc2.Ftk">
            <summary>
            Characteristic tensile strength of reinforcement - f<sub>tk</sub>
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatReinforcementEc2.Class">
            <summary>
            Class of reinforcement
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatReinforcementEc2.Type">
            <summary>
            Type of reinforcement
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatReinforcementEc2.Fabrication">
            <summary>
            Fabrication of reinforcement
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatReinforcementEc2.DiagramType">
            <summary>
            Type of material diagram
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatReinforcementEc2.UserDiagram">
            <summary>
            Stress-strain diagram defined by user
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.MatSteel">
            <summary>
            Material steel base class
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.MatSteelAISC">
            <summary>
            Material steel AISC
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatSteelAISC.fy">
            <summary>
            Yield strength for nominal thickness of the element &lt;= 40mm - f<sub>y</sub>
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatSteelAISC.fu">
            <summary>
            Ultimate strength  for nominal thickness of the element &lt;= 40mm - f<sub>u</sub>
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatSteelAISC.fy40">
            <summary>
            Yield strength for nominal thickness of the element &gt; 40mm and &lt;= 100mm - f<sub>y,(&gt;40)</sub>
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatSteelAISC.fu40">
            <summary>
            Ultimate strength for nominal thickness of the element &gt; 40mm and &lt;= 100mm - f<sub>u,(&gt;40)</sub>
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.SteelDiagramType">
            <summary>
            Steel stress-strain diagram
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.SteelDiagramType.Bilinear">
            <summary>
            Billinear
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Material.SteelDiagramType.DefinedByUser">
            <summary>
            Defined by user
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.MatSteelEc2">
            <summary>
            Material steel Ec2
            </summary>
            <example> 
            This sample shows how to create steel material.
            <code lang = "C#">
            //Creating the model
            OpenModel openModel = new OpenModel();
            
            //Steel material
            MatSteelEc2 matS = new MatSteelEc2();
            matS.Name = "S275";
            matS.UnitMass = 7850.0;
            matS.E = 200e9;
            matS.Poisson = 0.2;
            matS.G = 83.333e9;
            matS.SpecificHeat = 0.6;
            matS.ThermalExpansion = 0.00001;
            matS.ThermalConductivity = 45;
            matS.fy = 235e6;
            matS.fu = 360e6;
            matS.fy40 = 215e6;
            matS.fu40 = 340e6;
            
            //Setting thermal characteristcs of material (in this case by the code)
            matS.StateOfThermalConductivity = ThermalConductivityState.Code;
            matS.StateOfThermalExpansion = ThermalExpansionState.Code;
            matS.StateOfThermalSpecificHeat = ThermalSpecificHeatState.Code;
            matS.StateOfThermalStressStrain = ThermalStressStrainState.Code;
            
            matS.DiagramType = SteelDiagramType.Bilinear;
            openModel.AddObject(matS);
            </code>
            </example>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatSteelEc2.fy">
            <summary>
            Yield strength for nominal thickness of the element &lt;= 40mm - f<sub>y</sub>
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatSteelEc2.fu">
            <summary>
            Ultimate strength  for nominal thickness of the element &lt;= 40mm - f<sub>u</sub>
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatSteelEc2.fy40">
            <summary>
            Yield strength for nominal thickness of the element &gt; 40mm and &lt;= 100mm - f<sub>y,(&gt;40)</sub>
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatSteelEc2.fu40">
            <summary>
            Ultimate strength for nominal thickness of the element &gt; 40mm and &lt;= 100mm - f<sub>u,(&gt;40)</sub>
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatSteelEc2.DiagramType">
            <summary>
            Type of material diagram
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatSteelEc2.UserDiagram">
            <summary>
            Stress-strain diagram defined by user
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Material.MatSteelRUS">
            <summary>
            Material steel RUS
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatSteelRUS.fy">
            <summary>
            Yield strength
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Material.MatSteelRUS.fu">
            <summary>
            Ultimate strength
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Loading.ResultClass">
            <summary>
            ResultClass object
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Loading.ResultClass.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.ResultClass.Name">
            <summary>
            Name of ResultClass
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.ResultClass.ListItem">
            <summary>
            List of objects in this library
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.ResultClass.Description">
            <summary>
            Description of IResultClass 
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.ResultClass.TypeResultClass">
            <summary>
            TypeResultsClass
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.ResultClass.IdConstructionStage">
            <summary>
            Id of IConstructionStage, 0 == IConstructionStage is not defined
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.ResultClass.TypeUpdateResultClass">
            <summary>
            Type of update RC. If TypeUpdateResultClass is Update, ListItem will be updated
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.ResultClass.Nonlinear">
            <summary>
            Class contains nonlinear combinations (loaded as loadcase)
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Loading.TypeUpdateResultClass">
            <summary>
            TypeUpdateResultClass
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeUpdateResultClass.Update">
            <summary>
            Update
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeUpdateResultClass.DoNotUpdate">
            <summary>
            Do not update
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Loading.TypeResultsClass">
            <summary>
            TypeResultsClass
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeResultsClass.ULSResultsClass">
            <summary>
            ULSResultsClass
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeResultsClass.SLSResultsClass">
            <summary>
            SLSResultsClass
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeResultsClass.ULSCheckClass">
            <summary>
            ULSCheckClass
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeResultsClass.SLSFrequentCheckClass">
            <summary>
            SLSFrequentCheckClass
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeResultsClass.SLSQuasiPermanentCheckClass">
            <summary>
            SLSQuasiPermanentCheckClass
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeResultsClass.SLSCharacteristicsCheckClass">
            <summary>
            SLSCharacteristicsCheckClass
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeResultsClass.SLSDeflectionResultsClass">
            <summary>
            SLSDeflectionResultsClass
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeResultsClass.ULSAccidentalResultsClass">
            <summary>
            ULSAccidentalResultsClass
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeResultsClass.FatigueResultsClass">
            <summary>
            FatigueResultsClass
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeResultsClass.CheckClassFireResistance">
            <summary>
            CheckClassFireResistance
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeResultsClass.CheckClassBridgeLoadRating">
            <summary>
            CheckClassBridgeLoadRating
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Loading.SelectionItemForResults">
            <summary>
            SelectionItemForResults
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.SelectionItemForResults.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.SelectionItemForResults.TypeOfLoad">
            <summary>
            TypeOfLoad
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.SelectionItemForResults.TypeClassEvaluation">
            <summary>
            TypeClassEvaluation
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.SelectionItemForResults.Item">
            <summary>
            ILibraryItem
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.SelectionItemForResults.Coeff">
            <summary>
            Coefficient
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Loading.TypeClassEvaluation">
            <summary>
            Load of evaluation
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeClassEvaluation.eLoadCase">
            <summary>
            LoadCase
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeClassEvaluation.eLinCombi">
            <summary>
            LinCombi
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeClassEvaluation.eNonLinCombi">
            <summary>
            NonLinCombi
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Loading.TemperatureDirection">
            <summary>
            Temperature direction
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TemperatureDirection.EveryWhere">
            <summary>
            Every where
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TemperatureDirection.SpecifiedEdges">
            <summary>
            Specified edges
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Loading.CrossSectionComponentEdges">
            <summary>
            Cross-section component edges
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Loading.CrossSectionComponentEdges.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.CrossSectionComponentEdges.ComponentIndex">
            <summary>
            Zero based index of component
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.CrossSectionComponentEdges.EdgeIndexes">
            <summary>
            List of zero based edge indexes of component
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Loading.TemperatureLoadOnLine">
             <summary>
             Temperature load on line
             </summary>
             <example> 
             This sample shows how to create a temperature load.
             <code lang = "C#">
             //Creating the model
             OpenModel openModel = new OpenModel();
             
             //Create nodes
             Point3D pointA = new Point3D();
             pointA.X = 0;
             pointA.Y = 0;
             pointA.Z = 0;
             openModel.AddObject(pointA);
             
             Point3D pointB = new Point3D();
             pointB.X = 0;
             pointB.Y = 0;
             pointB.Z = 1.2;
             openModel.AddObject(pointB);
             
             Point3D pointC = new Point3D();
             pointC.X = 0;
             pointC.Y = 0;
             pointC.Z = 2.4;
             openModel.AddObject(pointC);
             
             //Line between nodes
             LineSegment3D line1 = new LineSegment3D();
             line1.StartPoint = new ReferenceElement(pointA);
             line1.EndPoint = new ReferenceElement(pointB);
             //LCS of line
             line1.LocalCoordinateSystem = new CoordSystemByZup();
             openModel.AddObject(line1);
             
             //Line between nodes
             LineSegment3D line2 = new LineSegment3D();
             line2.StartPoint = new ReferenceElement(pointB);
             line2.EndPoint = new ReferenceElement(pointC);
             //LCS of line
             line2.LocalCoordinateSystem = new CoordSystemByZup();
             openModel.AddObject(line2);
            
             //Load case
             LoadCase loadCase = new LoadCase();
             //...
             openModel.AddObject(loadCase);
             
             //temperature load on the line 2 defined to edge 0 and 1 of the component 0 of crossection
             var tempload = new TemperatureLoadOnLine();
             tempload.Geometry = new ReferenceElement(line2);
             tempload.RelativeBeginPosition = 0.0;
             tempload.RelativeEndPosition = 1.0;
             tempload.Direction = TemperatureDirection.SpecifiedEdges;
             var edges = new CrossSectionComponentEdges();
             edges.ComponentIndex = 0;
             edges.EdgeIndexes.Add(0);
             edges.EdgeIndexes.Add(1);
             tempload.DirectionEdges.Add(edges);
             tempload.ConvectionCoefficient = 25.0;
             tempload.RadiationCoefficient = 0.0;
             
             //temperature curve sec vs K
             var curve = new Polygon2D();
             curve.Points.Add(new Point2D() { X = 0, Y = 296.15 });
             curve.Points.Add(new Point2D() { X = 600, Y = 954.15 });
             curve.Points.Add(new Point2D() { X = 1200, Y = 1057.15 });
             curve.Points.Add(new Point2D() { X = 1800, Y = 1117.15 });
             curve.Points.Add(new Point2D() { X = 2400, Y = 1160.15 });
             curve.Points.Add(new Point2D() { X = 3000, Y = 1194.15 });
             curve.Points.Add(new Point2D() { X = 3600, Y = 1221.15 });
             curve.Points.Add(new Point2D() { X = 4200, Y = 1244.15 });
             curve.Points.Add(new Point2D() { X = 4800, Y = 1264.15 });
             curve.Points.Add(new Point2D() { X = 5200, Y = 1276.15 });
             curve.Points.Add(new Point2D() { X = 6000, Y = 1296.15 });
             tempload.TemperatureCurve = curve;
             
             openModel.AddObject(tempload);
             loadCase.TemperatureLoadsOnLine.Add(new ReferenceElement(tempload));
             </code>
             </example>
        </member>
        <member name="M:IdeaRS.OpenModel.Loading.TemperatureLoadOnLine.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.TemperatureLoadOnLine.TemperatureCurve">
            <summary>
            Temperature curve  { x = t[s], y = Θ[K] }
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.TemperatureLoadOnLine.Geometry">
            <summary>
            Segment3D
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.TemperatureLoadOnLine.RelativeBeginPosition">
            <summary>
            Relative position on segment - begin
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.TemperatureLoadOnLine.RelativeEndPosition">
            <summary>
            Relative position on segment - end
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.TemperatureLoadOnLine.Direction">
            <summary>
            Direction on temperaure
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.TemperatureLoadOnLine.DirectionEdges">
            <summary>
            Edges of direction
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.TemperatureLoadOnLine.ConvectionCoefficient">
            <summary>
            Convection coefficient per area - α<sub>c</sub>[W/(m<sup>2</sup>K)]
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.TemperatureLoadOnLine.RadiationCoefficient">
            <summary>
            Radiation coefficient per area - α<sub>r</sub>[W/(m<sup>2</sup>K)]
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Loading.CombiInput">
            <summary>
            Basic class combination
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Loading.CombiInput.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.CombiInput.Name">
            <summary>
            Name of combination
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.CombiInput.Items">
            <summary>
            Combi Items in combination
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.CombiInput.Description">
            <summary>
            Additional info
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Loading.CombiInputEC">
            <summary>
            Combination according to EC in the model
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Loading.CombiInputEC.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.CombiInputEC.TypeCombiEC">
            <summary>
            Type of EC combination
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.CombiInputEC.TypeCalculationCombi">
            <summary>
            Type of combination
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Loading.TypeCalculationCombiEC">
            <summary>
            Type of combination
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeCalculationCombiEC.Linear">
            <summary>
            Linear combination
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeCalculationCombiEC.Envelope">
            <summary>
            Envelope combination
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeCalculationCombiEC.Code610">
            <summary>
            Combination according to 6.10
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeCalculationCombiEC.Code610ab">
            <summary>
            Combination according to 6.10ab
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Loading.TypeOfCombiEC">
            <summary>
            Type of combination
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeOfCombiEC.ULS">
            <summary>
            combination
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeOfCombiEC.Accidental">
            <summary>
            accidental combination 1
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeOfCombiEC.SLS_Char">
            <summary>
            characteristic combination
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeOfCombiEC.SLS_Freq">
            <summary>
            frequent combination
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeOfCombiEC.SLS_Quasi">
            <summary>
            quasi combination
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeOfCombiEC.Fatigue">
            <summary>
            Fatigue combination
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Loading.CombiInputSIA">
            <summary>
            Combination according to SIA in the model
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Loading.CombiInputSIA.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.CombiInputSIA.TypeCombiSIA">
            <summary>
            Type of EC combination
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.CombiInputSIA.TypeCalculationCombi">
            <summary>
            Type of combination
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Loading.TypeCalculationCombiSIA">
            <summary>
            Type of combination
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeCalculationCombiSIA.Linear">
            <summary>
            Linear combination
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeCalculationCombiSIA.Envelope">
            <summary>
            Envelope combination
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeCalculationCombiSIA.Code">
            <summary>
            Combination according to code
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Loading.TypeOfCombiSIA">
            <summary>
            Type of combination
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeOfCombiSIA.ULS">
            <summary>
            combination
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeOfCombiSIA.Accidental">
            <summary>
            accidental combination 1
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeOfCombiSIA.SLS_Char">
            <summary>
            characteristic combination
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeOfCombiSIA.SLS_Freq">
            <summary>
            frequent combination
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeOfCombiSIA.SLS_Quasi">
            <summary>
            quasi combination
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeOfCombiSIA.Fatigue">
            <summary>
            Fatigue combination
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Loading.CombiItem">
            <summary>
            Combi item
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Loading.CombiItem.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.CombiItem.Id">
            <summary>
            Id of CombiItem
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.CombiItem.LoadCase">
            <summary>
            Load case
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.CombiItem.Coeff">
            <summary>
            Coefficient
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.CombiItem.Combination">
            <summary>
            Inserted another combination
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Loading.LoadCaseType">
            <summary>
            Load case type
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.LoadCaseType.Permanent">
            <summary>
            Permanent
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.LoadCaseType.Variable">
            <summary>
            Variable
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.LoadCaseType.Accidental">
            <summary>
            Accidental
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.LoadCaseType.Nonlinear">
            <summary>
            Loadcase is for nonlinear analysis
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Loading.LoadCaseSubType">
            <summary>
            Load case sub type
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.LoadCaseSubType.PermanentSelfweight">
            <summary>
            Permanent - self weight
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.LoadCaseSubType.PermanentStandard">
            <summary>
            Permanent - standard
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.LoadCaseSubType.PermanentPrestress">
            <summary>
            Permanent - prestress (posttensioned)
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.LoadCaseSubType.PermanentRheologic">
            <summary>
            Permanent - Rheologic
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.LoadCaseSubType.PermanentPrimaryEffect">
            <summary>
            Permanent - primary effect
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.LoadCaseSubType.VariableStatic">
            <summary>
            Variable - static
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.LoadCaseSubType.VariableDynamic">
            <summary>
            Variable - dynamic
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.LoadCaseSubType.VariablePrimaryEffect">
            <summary>
            Variable - primary effect
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.LoadCaseSubType.PermanentPrestressPretensioned">
            <summary>
            Permanent - prestress (posttensioned)
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.LoadCaseSubType.PermanentPrestressPrimary">
            <summary>
             Permanent - prestress primary effect
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.LoadCaseSubType.PermanentSelfweightLocal">
            <summary>
            Permanent - self weight - local
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Loading.VariableType">
            <summary>
            Variable type
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.VariableType.Standard">
            <summary>
            Standard
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.VariableType.MobileEnvelope">
            <summary>
            Mobile envelope
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.VariableType.Seismicity">
            <summary>
            Seismicity
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.VariableType.NotSet">
            <summary>
            variable loads is not set for some reasons - in fact loads is not variable
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Loading.TypeDuration">
            <summary>
            Duration of load case
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeDuration.LongTerm">
            <summary>
            Long term
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeDuration.MediumTerm">
            <summary>
            Medium term
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeDuration.ShortTerm">
            <summary>
            Short term
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.TypeDuration.InstantaneousTerm">
            <summary>
            Instantaneous term
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Loading.LoadCase">
            <summary>
            Load case in the model
            </summary>
            <example> 
            This sample shows how to create a load case.
            <code lang = "C#">
            //Creating the model
            OpenModel openModel = new OpenModel();
            
            //Load group - needed for Load case
            LoadGroupEC loadGroup = new LoadGroupEC();
            loadGroup.Name = "LG1";
            loadGroup.GammaQ = 1.5;
            loadGroup.Psi0 = 0.7;
            loadGroup.Psi1 = 0.5;
            loadGroup.Psi2 = 0.3;
            loadGroup.GammaGInf = 1.0;
            loadGroup.GammaGSup = 1.35;
            loadGroup.Dzeta = 0.85;
            openModel.AddObject(loadGroup);
            
            //Load case
            LoadCase loadCase = new LoadCase();
            loadCase.Name = "LC1";
            loadCase.LoadType = LoadCaseType.Permanent;
            loadCase.Type = LoadCaseSubType.PermanentStandard;
            loadCase.Variable = VariableType.NotSet;
            loadCase.LoadGroup = new ReferenceElement(loadGroup);
            openModel.AddObject(loadCase);
            </code>
            </example>
        </member>
        <member name="M:IdeaRS.OpenModel.Loading.LoadCase.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadCase.Name">
            <summary>
            Name of load case
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadCase.LoadType">
            <summary>
            Load case type
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadCase.Type">
            <summary>
            Sub type
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadCase.Variable">
            <summary>
            Variable type
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadCase.LoadGroup">
            <summary>
            Load group
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadCase.Description">
            <summary>
            Additional info
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadCase.LoadsInPoint">
            <summary>
            List of point load impulses in this load case
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadCase.LoadsOnLine">
            <summary>
            List of line load impulses in this load case
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadCase.StrainLoadsOnLine">
            <summary>
            List of generalized strain load impulses along the line in this load case.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadCase.PointLoadsOnLine">
            <summary>
            List of point load impulses in this load case
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadCase.LoadsOnSurface">
            <summary>
            List surafce load in this load case
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadCase.Settlements">
            <summary>
            Settlements in this load case
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadCase.TemperatureLoadsOnLine">
            <summary>
            List of temperature load in this load case
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Loading.LoadGroup">
            <summary>
            Load group
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadGroup.Name">
            <summary>
            Name of load group
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadGroup.Relation">
            <summary>
            Relation
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadGroup.GroupType">
            <summary>
            Group type
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadGroup.GammaQ">
            <summary>
            γ <sub>Q</sub>
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadGroup.Dzeta">
            <summary>
            ζ
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadGroup.GammaGInf">
            <summary>
            γ <sub>G,Inf</sub>
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadGroup.GammaGSup">
            <summary>
            γ <sub>G,Sup</sub>
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Loading.LoadGroupType">
            <summary>
            Load group type
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.LoadGroupType.Permanent">
            <summary>
            Permanent
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.LoadGroupType.Variable">
            <summary>
            Variable
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.LoadGroupType.Accidental">
            <summary>
            Accidental
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.LoadGroupType.Seismic">
            <summary>
            Seismic
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.LoadGroupType.Fatigue">
            <summary>
            Fatigue
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Loading.Relation">
            <summary>
            Relation
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.Relation.Standard">
            <summary>
            More load cases  from this load group will be used in a combination
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.Relation.Exclusive">
            <summary>
            Only one load case from this load group will be used in a combination
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Loading.LoadGroupEC">
            <summary>
            Load group for EC
            </summary>
            <example> 
            This sample shows how to create a load group.
            <code lang = "C#">
            //Creating the model
            OpenModel openModel = new OpenModel();
            
            //Load group - needed for Load case
            LoadGroupEC loadGroup = new LoadGroupEC();
            loadGroup.Name = "LG1";
            loadGroup.GammaQ = 1.5;
            loadGroup.Psi0 = 0.7;
            loadGroup.Psi1 = 0.5;
            loadGroup.Psi2 = 0.3;
            loadGroup.GammaGInf = 1.0;
            loadGroup.GammaGSup = 1.35;
            loadGroup.Dzeta = 0.85;
            openModel.AddObject(loadGroup);
            </code>
            </example>
        </member>
        <member name="M:IdeaRS.OpenModel.Loading.LoadGroupEC.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadGroupEC.Psi0">
            <summary>
            ψ <sub>0</sub>
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadGroupEC.Psi1">
            <summary>
            ψ <sub>1</sub>
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadGroupEC.Psi2">
            <summary>
            ψ <sub>2</sub>
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Loading.LoadGroupSIA">
            <summary>
            Load group for SIA
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Loading.LoadGroupSIA.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadGroupSIA.Psi0">
            <summary>
            ψ <sub>0</sub>
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadGroupSIA.Psi1">
            <summary>
            ψ <sub>1</sub>
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadGroupSIA.Psi2">
            <summary>
            ψ <sub>2</sub>
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Loading.LoadDirection">
            <summary>
            Direction of load
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.LoadDirection.InLcs">
            <summary>
            Direction in Local coordinate system
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.LoadDirection.InGcs">
            <summary>
            Direction in global coordinate system
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Loading.LoadInPoint">
             <summary>
             Concentrated load
             </summary>
             <example> 
             This sample shows how to create a load in the point.
             <code lang = "C#">
             //Creating the model
             OpenModel openModel = new OpenModel();
             
             //Create nodes
             Point3D pointA = new Point3D();
             pointA.X = 0;
             pointA.Y = 0;
             pointA.Z = 0;
             openModel.AddObject(pointA);
             
             Point3D pointB = new Point3D();
             pointB.X = 0;
             pointB.Y = 0;
             pointB.Z = 1.2;
             openModel.AddObject(pointB);
             
             Point3D pointC = new Point3D();
             pointC.X = 0;
             pointC.Y = 0;
             pointC.Z = 2.4;
             openModel.AddObject(pointC);
             
             //Line between nodes
             LineSegment3D line1 = new LineSegment3D();
             line1.StartPoint = new ReferenceElement(pointA);
             line1.EndPoint = new ReferenceElement(pointB);
             //LCS of line
             line1.LocalCoordinateSystem = new CoordSystemByZup();
             openModel.AddObject(line1);
             
             //Line between nodes
             LineSegment3D line2 = new LineSegment3D();
             line2.StartPoint = new ReferenceElement(pointB);
             line2.EndPoint = new ReferenceElement(pointC);
             //LCS of line
             line2.LocalCoordinateSystem = new CoordSystemByZup();
             openModel.AddObject(line2);
            
             //Load case
             LoadCase loadCase = new LoadCase();
             //...
             openModel.AddObject(loadCase);
             
             //Point loading impulse in the node - int rthe LCS of node = GCS
             LoadInPoint loadPoint = new LoadInPoint();
             loadPoint.Geometry = new ReferenceElement(pointB);
             loadPoint.Fx = -5e3; //in the global X direction
             
             openModel.AddObject(loadPoint);
             loadCase.LoadsInPoint.Add(new ReferenceElement(loadPoint));
             </code>
             </example>
        </member>
        <member name="M:IdeaRS.OpenModel.Loading.LoadInPoint.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadInPoint.Fx">
            <summary>
            Force in X direction
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadInPoint.Fy">
            <summary>
            Force in Y direction
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadInPoint.Fz">
            <summary>
            Force in Z direction
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadInPoint.Mx">
            <summary>
            Moment about the x-axis
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadInPoint.My">
            <summary>
            Moment about the y-axis
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadInPoint.Mz">
            <summary>
            Moment about the z-axis
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadInPoint.Geometry">
            <summary>
            Gets, sets geometry
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadInPoint.Direction">
            <summary>
            Local / global
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Loading.LoadOnLine">
             <summary>
             Load on line
             </summary>
             <example> 
             This sample shows how to create a load on the line.
             <code lang = "C#">
             //Creating the model
             OpenModel openModel = new OpenModel();
             
             //Create nodes
             Point3D pointA = new Point3D();
             pointA.X = 0;
             pointA.Y = 0;
             pointA.Z = 0;
             openModel.AddObject(pointA);
             
             Point3D pointB = new Point3D();
             pointB.X = 0;
             pointB.Y = 0;
             pointB.Z = 1.2;
             openModel.AddObject(pointB);
             
             Point3D pointC = new Point3D();
             pointC.X = 0;
             pointC.Y = 0;
             pointC.Z = 2.4;
             openModel.AddObject(pointC);
             
             //Line between nodes
             LineSegment3D line1 = new LineSegment3D();
             line1.StartPoint = new ReferenceElement(pointA);
             line1.EndPoint = new ReferenceElement(pointB);
             //LCS of line
             line1.LocalCoordinateSystem = new CoordSystemByZup();
             openModel.AddObject(line1);
             
             //Line between nodes
             LineSegment3D line2 = new LineSegment3D();
             line2.StartPoint = new ReferenceElement(pointB);
             line2.EndPoint = new ReferenceElement(pointC);
             //LCS of line
             line2.LocalCoordinateSystem = new CoordSystemByZup();
             openModel.AddObject(line2);
            
             //Load case
             LoadCase loadCase = new LoadCase();
             //...
             openModel.AddObject(loadCase);
            
             //Uniform load on line2 - relative between 0.1-0.6. In the LCS of line. -2kN in the z-direction
             LoadOnLine loadLine = new LoadOnLine();
             loadLine.Bimp = new LoadImpulse() { Z = -2e3 };
             loadLine.Eimp = new LoadImpulse() { Z = -2e3 };
             loadLine.Type = LoadType.LoadForce;
             loadLine.Direction = LoadDirection.InLcs;
             loadLine.Geometry = new ReferenceElement(line2);
             loadLine.LoadProjection = LoadProjection.Length;
             loadLine.RelativeBeginPosition = 0.1;
             loadLine.RelativeBeginPosition = 0.6;
             
             openModel.AddObject(loadLine);
             loadCase.LoadsOnLine.Add(new ReferenceElement(loadLine));
             </code>
             </example>
        </member>
        <member name="M:IdeaRS.OpenModel.Loading.LoadOnLine.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadOnLine.RelativeBeginPosition">
            <summary>
            Begin position on Segment3D
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadOnLine.RelativeEndPosition">
            <summary>
            End position on Segment3D
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadOnLine.ExY">
            <summary>
            Eccentricity local Y on the beginning
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadOnLine.ExZ">
            <summary>
            Eccentricity local Z on the beginning
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadOnLine.ExYEnd">
            <summary>
            Eccentricity local Y at the end
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadOnLine.ExZEnd">
            <summary>
            Eccentricity local Z at the end
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadOnLine.Type">
            <summary>
            Type of load
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadOnLine.Direction">
            <summary>
            1=global, 0=local
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadOnLine.Bimp">
            <summary>
            Impulse at the begin
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadOnLine.Eimp">
            <summary>
            Impulse at the end
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadOnLine.Geometry">
            <summary>
            Segment3D or PolyLine3D
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadOnLine.LoadProjection">
            <summary>
            Gets, sets load projection
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Loading.LoadImpulse">
            <summary>
            LoadImpulse
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadImpulse.X">
            <summary>
            Load in X direction
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadImpulse.Y">
            <summary>
            Load in Y direction
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadImpulse.Z">
            <summary>
            Load in Z direction
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Loading.LoadProjection">
            <summary>
            Type of load projection
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.LoadProjection.Length">
            <summary>
            Impuls on member length
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.LoadProjection.Projection">
            <summary>
            Impuls on member projection
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Loading.LoadType">
            <summary>
            Type of load impuls
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.LoadType.LoadForce">
            <summary>
            Force load impuls
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Loading.LoadType.LoadMoment">
            <summary>
            Moment load impuls
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Loading.LoadOnSurface">
            <summary>
            Load on surface
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Loading.LoadOnSurface.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadOnSurface.Fx">
            <summary>
            Force in X direction
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadOnSurface.Fy">
            <summary>
            Force in Y direction
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadOnSurface.Fz">
            <summary>
            Force in Z direction
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadOnSurface.Direction">
            <summary>
            Load direction LCS or GCS
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.LoadOnSurface.Geometry">
            <summary>
            Gets, sets geometry of this LoadOnSurface
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Loading.PointLoadOnLine">
             <summary>
             Load in specific point on line
             </summary>
             <example> 
             This sample shows how to create a point load on the line.
             <code lang = "C#">
             //Creating the model
             OpenModel openModel = new OpenModel();
             
             //Create nodes
             Point3D pointA = new Point3D();
             pointA.X = 0;
             pointA.Y = 0;
             pointA.Z = 0;
             openModel.AddObject(pointA);
             
             Point3D pointB = new Point3D();
             pointB.X = 0;
             pointB.Y = 0;
             pointB.Z = 1.2;
             openModel.AddObject(pointB);
             
             Point3D pointC = new Point3D();
             pointC.X = 0;
             pointC.Y = 0;
             pointC.Z = 2.4;
             openModel.AddObject(pointC);
             
             //Line between nodes
             LineSegment3D line1 = new LineSegment3D();
             line1.StartPoint = new ReferenceElement(pointA);
             line1.EndPoint = new ReferenceElement(pointB);
             //LCS of line
             line1.LocalCoordinateSystem = new CoordSystemByZup();
             openModel.AddObject(line1);
             
             //Line between nodes
             LineSegment3D line2 = new LineSegment3D();
             line2.StartPoint = new ReferenceElement(pointB);
             line2.EndPoint = new ReferenceElement(pointC);
             //LCS of line
             line2.LocalCoordinateSystem = new CoordSystemByZup();
             openModel.AddObject(line2);
            
             //Load case
             LoadCase loadCase = new LoadCase();
             //...
             openModel.AddObject(loadCase);
             
             //Point loading impulse on the bottom of the "line1" - in the LCS of line
             PointLoadOnLine pointLoadA = new PointLoadOnLine();
             pointLoadA.Geometry = new ReferenceElement(line1);
             pointLoadA.RelativePosition = 0.0;
             pointLoadA.Fx = 10e3;
             pointLoadA.Ez = 0.024;
             
             openModel.AddObject(pointLoadA);
             loadCase.PointLoadsOnLine.Add(new ReferenceElement(pointLoadA));
             </code>
             </example>
        </member>
        <member name="M:IdeaRS.OpenModel.Loading.PointLoadOnLine.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.PointLoadOnLine.Direction">
            <summary>
            Local / global
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.PointLoadOnLine.Fx">
            <summary>
            Force in X direction
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.PointLoadOnLine.Fy">
            <summary>
            Force in Y direction
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.PointLoadOnLine.Fz">
            <summary>
            Force in Z direction
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.PointLoadOnLine.Mx">
            <summary>
            Moment about the x-axis
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.PointLoadOnLine.My">
            <summary>
            Moment about the y-axis
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.PointLoadOnLine.Mz">
            <summary>
            Moment about the z-axis
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.PointLoadOnLine.Ey">
            <summary>
            Eccentricity in Y direction
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.PointLoadOnLine.Ez">
            <summary>
            Eccentricity in Z direction
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.PointLoadOnLine.Geometry">
            <summary>
            Segment3D or PolyLine3D
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.PointLoadOnLine.RelativePosition">
            <summary>
            Relative position on geometry line
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Loading.Settlement">
             <summary>
             Settlement of point support
             </summary>
             <example> 
             This sample shows how to create a .
             <code lang = "C#">
             //Creating the model
             OpenModel openModel = new OpenModel();
             
             //Create nodes
             Point3D pointA = new Point3D();
             pointA.X = 0;
             pointA.Y = 0;
             pointA.Z = 0;
             openModel.AddObject(pointA);
             
             Point3D pointB = new Point3D();
             pointB.X = 0;
             pointB.Y = 0;
             pointB.Z = 1.2;
             openModel.AddObject(pointB);
             
             Point3D pointC = new Point3D();
             pointC.X = 0;
             pointC.Y = 0;
             pointC.Z = 2.4;
             openModel.AddObject(pointC);
             
             //Line between nodes
             LineSegment3D line1 = new LineSegment3D();
             line1.StartPoint = new ReferenceElement(pointA);
             line1.EndPoint = new ReferenceElement(pointB);
             //LCS of line
             line1.LocalCoordinateSystem = new CoordSystemByZup();
             openModel.AddObject(line1);
             
             //Line between nodes
             LineSegment3D line2 = new LineSegment3D();
             line2.StartPoint = new ReferenceElement(pointB);
             line2.EndPoint = new ReferenceElement(pointC);
             //LCS of line
             line2.LocalCoordinateSystem = new CoordSystemByZup();
             openModel.AddObject(line2);
            
             //Point support in the bottom node
             PointSupportNode pointSupportA = new PointSupportNode();
             pointSupportA.Point = new ReferenceElement(pointA);
             pointSupportA.SupportTypeRX = SupportTypeInDirrection.Free;
             pointSupportA.SupportTypeRY = SupportTypeInDirrection.Free;
             pointSupportA.SupportTypeRZ = SupportTypeInDirrection.Rigid;
             pointSupportA.SupportTypeX = SupportTypeInDirrection.Rigid;
             pointSupportA.SupportTypeY = SupportTypeInDirrection.Rigid;
             pointSupportA.SupportTypeZ = SupportTypeInDirrection.Rigid;
             openModel.AddObject(pointSupportA);
             
             //Point support in the top node
             PointSupportNode pointSupportB = new PointSupportNode();
             pointSupportB.Point = new ReferenceElement(pointC);
             pointSupportB.SupportTypeRX = SupportTypeInDirrection.Free;
             pointSupportB.SupportTypeRY = SupportTypeInDirrection.Free;
             pointSupportB.SupportTypeRZ = SupportTypeInDirrection.Free;
             pointSupportB.SupportTypeX = SupportTypeInDirrection.Rigid;
             pointSupportB.SupportTypeY = SupportTypeInDirrection.Rigid;
             pointSupportB.SupportTypeZ = SupportTypeInDirrection.Free;
             openModel.AddObject(pointSupportB);
             
             //Load case
             LoadCase loadCase = new LoadCase();
             //...
             openModel.AddObject(loadCase);
             
             //Setlement on the Support A - 1mm in global Z - direction
             var settl = new Settlement();
             settl.ValueX = 0.0;
             settl.ValueY = 0.0;
             settl.ValueZ = -0.001;
             settl.ValueRx = 0.0;
             settl.ValueRy = 0.0;
             settl.ValueRz = 0.0;
             settl.Support = new ReferenceElement(pointSupportA);
             
             openModel.AddObject(settl);
             loadCase.Settlements.Add(new ReferenceElement(settl));
             </code>
             </example>
        </member>
        <member name="M:IdeaRS.OpenModel.Loading.Settlement.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.Settlement.ValueX">
            <summary>
            Settlement in X dirrection of support
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.Settlement.ValueY">
            <summary>
            Settlement in Y dirrection of support
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.Settlement.ValueZ">
            <summary>
            Settlement in Z dirrection of support
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.Settlement.ValueRx">
            <summary>
            Rotation around X-axis
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.Settlement.ValueRy">
            <summary>
            Rotation around Y-axis
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.Settlement.ValueRz">
            <summary>
            Rotation around Z-axis
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.Settlement.Support">
            <summary>
            Support with settlement
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Loading.StrainLoadOnLine">
             <summary>
             Linearly distributed generalized strain load along a line.
             Strain load is in local coordinate system and there are no possible eccentricities.
             </summary>
             <example> 
             This sample shows how to create a strain load on the line.
             <code lang = "C#">
             //Creating the model
             OpenModel openModel = new OpenModel();
             
             //Create nodes
             Point3D pointA = new Point3D();
             pointA.X = 0;
             pointA.Y = 0;
             pointA.Z = 0;
             openModel.AddObject(pointA);
             
             Point3D pointB = new Point3D();
             pointB.X = 0;
             pointB.Y = 0;
             pointB.Z = 1.2;
             openModel.AddObject(pointB);
             
             Point3D pointC = new Point3D();
             pointC.X = 0;
             pointC.Y = 0;
             pointC.Z = 2.4;
             openModel.AddObject(pointC);
             
             //Line between nodes
             LineSegment3D line1 = new LineSegment3D();
             line1.StartPoint = new ReferenceElement(pointA);
             line1.EndPoint = new ReferenceElement(pointB);
             //LCS of line
             line1.LocalCoordinateSystem = new CoordSystemByZup();
             openModel.AddObject(line1);
             
             //Line between nodes
             LineSegment3D line2 = new LineSegment3D();
             line2.StartPoint = new ReferenceElement(pointB);
             line2.EndPoint = new ReferenceElement(pointC);
             //LCS of line
             line2.LocalCoordinateSystem = new CoordSystemByZup();
             openModel.AddObject(line2);
            
             //Load case
             LoadCase loadCase = new LoadCase();
             //...
             openModel.AddObject(loadCase);
             
             	/Uniform strain load on line1 - relative between 0.5-1.0. epsX = -0.0002
             StrainLoadOnLine strainLoadLine = new StrainLoadOnLine();
             strainLoadLine.Bimp = new StrainImpulse() { EpsX = -2e-4 };
             strainLoadLine.Eimp = new StrainImpulse() { EpsX = -2e-4 };
             strainLoadLine.GeometryPolyLine = new ReferenceElement(line1);
             strainLoadLine.RelativeBeginPosition = 0.5;
             strainLoadLine.RelativeBeginPosition = 1.0;
             
             openModel.AddObject(strainLoadLine);
             loadCase.StrainLoadsOnLine.Add(new ReferenceElement(strainLoadLine));
             </code>
             </example>
        </member>
        <member name="M:IdeaRS.OpenModel.Loading.StrainLoadOnLine.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.StrainLoadOnLine.Bimp">
            <summary>
            Gets or sets the strain impulse at the begin position.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.StrainLoadOnLine.Eimp">
            <summary>
            Gets or sets the strain impulse at the end position.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.StrainLoadOnLine.Geometry">
            <summary>
            PolyLine3D or Segment3D
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.StrainLoadOnLine.RelativeBeginPosition">
            <summary>
            Beginnig position on ISegment3D
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.StrainLoadOnLine.RelativeEndPosition">
            <summary>
            End position on ISegment3D
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Loading.StrainImpulse">
            <summary>
            Generalized strain load impulse.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.StrainImpulse.EpsX">
            <summary>
            The normal strain.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.StrainImpulse.PhiX">
            <summary>
            The torsion slope around x axis.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.StrainImpulse.PhiY">
            <summary>
            The curvature around z axis.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.StrainImpulse.PhiZ">
            <summary>
            The curvature around y axis.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.StrainImpulse.GammaXY">
            <summary>
            The shear strain.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Loading.StrainImpulse.GammaXZ">
            <summary>
            The shear strain.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Message.NonConformity">
            <summary>
            Non-conformity
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Message.NonConformity.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Message.NonConformity.Guid">
            <summary>
            Description of the nonconformity
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Message.NonConformity.Severity">
            <summary>
            severity of this nonconformity
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Message.NonConformitySeverity">
            <summary>
            Nonconformity severities
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Message.NonConformitySeverity.Info">
            <summary>
            Information
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Message.NonConformitySeverity.Warning">
            <summary>
            Deal as warning
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Message.NonConformitySeverity.Error">
            <summary>
            Error
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Message.NonConformitySeverity.TerminatedError">
            <summary>
            Error, coancel of the calculation required
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Message.NonConformityIssue">
            <summary>
            Non-conformity issue
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Message.NonConformityIssue.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Message.NonConformityIssue.Guid">
            <summary>
            Description of the nonconformity
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Message.NonConformityIssue.Description">
            <summary>
            Description of the nonconformity
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Message.NonConformityIssue.Severity">
            <summary>
            severity of this nonconformity
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Message.ErrorMessage">
            <summary>
            Open Error message
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Message.ErrorMessage.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Message.ErrorMessage.#ctor(IdeaRS.OpenModel.Message.MessageNumber,IdeaRS.OpenModel.OpenObject,System.String,System.String,IdeaRS.OpenModel.Message.OpenMessage)">
            <summary>
            Constructor
            </summary>
            <param name="number">Number of the message</param>
            <param name="description">Description of the message</param>
            <param name="openObject">Affected object</param>
            <param name="propertyName">Affected property</param>
            <param name="innerMessage">Inner message</param>
        </member>
        <member name="P:IdeaRS.OpenModel.Message.ErrorMessage.Message">
            <summary>
            Gets the Message
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Message.IDEAProgressReport">
            <summary>
            Data for progress report of IOM
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Message.IDEAProgressReport.CurrentProgressAmount">
            <summary>
            current progress
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Message.IDEAProgressReport.TotalProgressAmount">
            <summary>
            total progress
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Message.IDEAProgressReport.CurrentProgressMessage">
            <summary>
            some message to pass to the UI of current progress
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Message.IDEAProgress">
            <summary>
            Progress Report for IOM
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Message.IDEAProgress.callback">
            <summary>
            Callback function of progress
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Message.IDEAProgress.#ctor(System.Action{IdeaRS.OpenModel.Message.IDEAProgressReport})">
            <summary>
            Constructor
            </summary>
            <param name="callback">Callback function of progress</param>
        </member>
        <member name="M:IdeaRS.OpenModel.Message.IDEAProgress.Report(IdeaRS.OpenModel.Message.IDEAProgressReport)">
            <summary>
            Report
            </summary>
            <param name="data">Data for progress report of IOM</param>
        </member>
        <member name="T:IdeaRS.OpenModel.Message.InformationMessage">
            <summary>
            Open Information message
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Message.InformationMessage.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Message.InformationMessage.#ctor(IdeaRS.OpenModel.Message.MessageNumber,IdeaRS.OpenModel.OpenObject,System.String,System.String,IdeaRS.OpenModel.Message.OpenMessage)">
            <summary>
            Constructor
            </summary>
            <param name="number">Number of the message</param>
            <param name="description">Description of the message</param>
            <param name="openObject">Affected object</param>
            <param name="propertyName">Affected property</param>
            <param name="innerMessage">Inner message</param>
        </member>
        <member name="P:IdeaRS.OpenModel.Message.InformationMessage.Message">
            <summary>
            Gets the Message
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Message.IIOMSettings">
            <summary>
            interface IIOMSettings
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Message.IIOMSettings.FileName">
            <summary>
            File name
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Message.IIOMSettings.CreatedSuccessfully">
            <summary>
            IOM was generated Successfully
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Message.IIOMSettings.CountryCode">
            <summary>
             CountryCode
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Message.IOMSettings">
            <summary>
            IOM Settings
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Message.IOMSettings.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Message.IOMSettings.FileName">
            <summary>
            File name
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Message.IOMSettings.CreatedSuccessfully">
            <summary>
            Create OK
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Message.IOMSettings.CountryCode">
            <summary>
             CountryCode
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Message.OpenMessage">
            <summary>
            Open message base class
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Message.OpenMessage.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Message.OpenMessage.#ctor(IdeaRS.OpenModel.Message.MessageNumber,IdeaRS.OpenModel.OpenObject,System.String,System.String,IdeaRS.OpenModel.Message.OpenMessage)">
            <summary>
            Constructor
            </summary>
            <param name="number">Number of the message</param>
            <param name="description">Description of the message</param>
            <param name="openObject">Affected object</param>
            <param name="propertyName">Affected property</param>
            <param name="innerMessage">Inner message</param>
        </member>
        <member name="M:IdeaRS.OpenModel.Message.OpenMessage.Create(IdeaRS.OpenModel.Message.MessageNumber,IdeaRS.OpenModel.OpenObject,System.String,System.String,IdeaRS.OpenModel.Message.OpenMessage)">
            <summary>
            Creating message
            </summary>
            <param name="number">Number of the message</param>
            <param name="description">Description of the message</param>
            <param name="openObject">Affected object</param>
            <param name="propertyName">Affected property</param>
            <param name="innerMessage">Inner message</param>
            <returns>The created message or null if the number is not supported</returns>
        </member>
        <member name="P:IdeaRS.OpenModel.Message.OpenMessage.Number">
            <summary>
            Number of message
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Message.OpenMessage.InnerMessage">
            <summary>
            Inner message
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Message.OpenMessage.Description">
            <summary>
            Description of message
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Message.OpenMessage.Object">
            <summary>
            Affected object
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Message.OpenMessage.PropertyName">
            <summary>
            Affected property name
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Message.OpenMessage.PropertyValue">
            <summary>
            Gets the value of affected property
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Message.OpenMessage.Message">
            <summary>
            Gets the Message
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Message.MessageNumber">
            <summary>
            Message numbers
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Message.MessageNumber.Unspecified">
            <summary>
            <!-- No matching elements were found for the following include tag --><include file="../Properties/Resources.resx" path="root/data[@name=&quot;Unspecified&quot;]/value/text()/*" />
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Message.MessageNumber.Information">
            <summary>
            <!-- No matching elements were found for the following include tag --><include file="../Properties/Resources.resx" path="root/data[@name=&quot;GeneralInformation&quot;]/value/text()/*" />
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Message.MessageNumber.Warning">
            <summary>
            <!-- No matching elements were found for the following include tag --><include file="../Properties/Resources.resx" path="root/data[@name=&quot;GeneralWarning&quot;]/value/text()/*" />
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Message.MessageNumber.Error">
            <summary>
            <!-- No matching elements were found for the following include tag --><include file="../Properties/Resources.resx" path="root/data[@name=&quot;GeneralError&quot;]/value/text()/*" />
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Message.MessageNumber.Reserved">
            <summary>
            <!-- No matching elements were found for the following include tag --><include file="../Properties/Resources.resx" path="root/data[@name=&quot;Reserved&quot;]/value/text()/*" />
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Message.MessageNumber.WarnNoPropertyInData">
            <summary>
            <!-- No matching elements were found for the following include tag --><include file="../Properties/Resources.resx" path="root/data[@name=&quot;WarnNoPropertyInData&quot;]/value/text()/*" />
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Message.MessageNumber.WarnValueOutOfRange">
            <summary>
            <!-- No matching elements were found for the following include tag --><include file="../Properties/Resources.resx" path="root/data[@name=&quot;WarnValueOutOfRange&quot;]/value/text()/*" />
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Message.MessageNumber.WarnCurveCount">
            <summary>
            <!-- No matching elements were found for the following include tag --><include file="../Properties/Resources.resx" path="root/data[@name=&quot;WarnCurveCount&quot;]/value/text()/*" />
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Message.MessageNumber.WarnReinforcementBarsCollision">
            <summary>
            <!-- No matching elements were found for the following include tag --><include file="../Properties/Resources.resx" path="root/data[@name=&quot;WarnReinforcementBarsCollision&quot;]/value/text()/*" />
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Message.MessageNumber.ErrNoOpenObject">
            <summary>
            <!-- No matching elements were found for the following include tag --><include file="../Properties/Resources.resx" path="root/data[@name=&quot;ErrNoOpenObject&quot;]/value/text()/*" />
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Message.MessageNumber.ErrDataObjectNotCreated">
            <summary>
            <!-- No matching elements were found for the following include tag --><include file="../Properties/Resources.resx" path="root/data[@name=&quot;ErrDataObjectNotCreated&quot;]/value/text()/*" />
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Message.MessageNumber.ErrNoObjectInOpenModel">
            <summary>
            <!-- No matching elements were found for the following include tag --><include file="../Properties/Resources.resx" path="root/data[@name=&quot;ErrNoObjectInOpenModel&quot;]/value/text()/*" />
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Message.MessageNumber.ErrNoReferenceObjectInOpenModel">
            <summary>
            <!-- No matching elements were found for the following include tag --><include file="../Properties/Resources.resx" path="root/data[@name=&quot;ErrNoReferenceObjectInOpenModel&quot;]/value/text()/*" />
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Message.MessageNumber.ErrNoEquivalentObjectInDataModel">
            <summary>
            <!-- No matching elements were found for the following include tag --><include file="../Properties/Resources.resx" path="root/data[@name=&quot;ErrNoEquivalentObjectInDataModel&quot;]/value/text()/*" />
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Message.MessageNumber.ErrNoCrossSectionParameter">
            <summary>
            <!-- No matching elements were found for the following include tag --><include file="../Properties/Resources.resx" path="root/data[@name=&quot;ErrNoCrossSectionParameter&quot;]/value/text()/*" />
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Message.MessageNumber.ErrBoltsTooClose">
            <summary>
            <!-- No matching elements were found for the following include tag --><include file="../Properties/Resources.resx" path="root/data[@name=&quot;ErrBoltsTooClose&quot;]/value/text()/*" />
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Message.MessageNumber.ErrBoltsTooCloseEdge">
            <summary>
            <!-- No matching elements were found for the following include tag --><include file="../Properties/Resources.resx" path="root/data[@name=&quot;ErrBoltsTooCloseEdge&quot;]/value/text()/*" />
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Message.MessageNumber.ErrContactsAngle">
            <summary>
            <!-- No matching elements were found for the following include tag --><include file="../Properties/Resources.resx" path="root/data[@name=&quot;ErrContactsAngle&quot;]/value/text()/*" />
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Message.MessageNumber.ErrIncorrentMaterialE">
            <summary>
            <!-- No matching elements were found for the following include tag --><include file="../Properties/Resources.resx" path="root/data[@name=&quot;ErrIncorrentMaterialE&quot;]/value/text()/*" />
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Message.MessageNumber.ErrIncorrectMaterialEGP">
            <summary>
            <!-- No matching elements were found for the following include tag --><include file="../Properties/Resources.resx" path="root/data[@name=&quot;ErrIncorrectMaterialEGP&quot;]/value/text()/*" />
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Message.MessageNumber.ErrPreloadedBoltGrade">
            <summary>
            <!-- No matching elements were found for the following include tag --><include file="../Properties/Resources.resx" path="root/data[@name=&quot;ErrPreloadedBoltGrade&quot;]/value/text()/*" />
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Message.MessageNumber.ErrValueOutOfRange">
            <summary>
            <!-- No matching elements were found for the following include tag --><include file="../Properties/Resources.resx" path="root/data[@name=&quot;ErrValueOutOfRange&quot;]/value/text()/*" />
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Message.MessageNumber.ErrCurveZeroPoint">
            <summary>
            <!-- No matching elements were found for the following include tag --><include file="../Properties/Resources.resx" path="root/data[@name=&quot;ErrCurveZeroPoint&quot;]/value/text()/*" />
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Message.MessageNumber.ErrCurveFunction">
            <summary>
            <!-- No matching elements were found for the following include tag --><include file="../Properties/Resources.resx" path="root/data[@name=&quot;ErrCurveFunction&quot;]/value/text()/*" />
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Message.MessageNumber.ErrCurveDecreaseFunction">
            <summary>
            <!-- No matching elements were found for the following include tag --><include file="../Properties/Resources.resx" path="root/data[@name=&quot;ErrCurveDecreaseFunction&quot;]/value/text()/*" />
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Message.MessageNumber.ErrCurveDerivation">
            <summary>
            <!-- No matching elements were found for the following include tag --><include file="../Properties/Resources.resx" path="root/data[@name=&quot;ErrCurveDerivation&quot;]/value/text()/*" />
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Message.MessageNumber.ErrCurveNotSet">
            <summary>
            <!-- No matching elements were found for the following include tag --><include file="../Properties/Resources.resx" path="root/data[@name=&quot;ErrCurveNotSet&quot;]/value/text()/*" />
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Message.MessageNumber.ErrValidPolyline">
            <summary>
            <!-- No matching elements were found for the following include tag --><include file="../Properties/Resources.resx" path="root/data[@name=&quot;ErrValidPolyline&quot;]/value/text()/*" />
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Message.MessageNumber.ErrWarningLoad">
            <summary>
            <!-- No matching elements were found for the following include tag --><include file="../Properties/Resources.resx" path="root/data[@name=&quot;ErrWarningLoad&quot;]/value/text()/*" />
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Message.MessageNumber.ErrTimeout">
            <summary>
            <!-- No matching elements were found for the following include tag --><include file="../Properties/Resources.resx" path="root/data[@name=&quot;TimeoutError&quot;]/value/text()/*" />
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Message.OpenMessageProvider">
            <summary>
            Open message provider
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Message.OpenMessageProvider.#cctor">
            <summary>
            Static constructor
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Message.OpenMessageProvider.GetMessageText(IdeaRS.OpenModel.Message.MessageNumber)">
            <summary>
            Gets message text
            </summary>
            <param name="number">Message number</param>
            <returns>Message text or empty</returns>
        </member>
        <member name="T:IdeaRS.OpenModel.Message.OpenMessages">
            <summary>
            Open messages collection
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Message.OpenMessages.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Message.OpenMessages.Messages">
            <summary>
            List of messages
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Message.OpenMessages.Add(IdeaRS.OpenModel.Message.OpenMessage)">
            <summary>
            Add a message
            </summary>
            <param name="message">Message to be added</param>
        </member>
        <member name="P:IdeaRS.OpenModel.Message.OpenMessages.ErrorMessages">
            <summary>
            List Error messages only
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Message.OpenMessages.WarningMessages">
            <summary>
            List Worning messages only
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Message.OpenMessages.InformationMessages">
            <summary>
            List Information messages only
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Message.WarningMessage">
            <summary>
            Open Warning message
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Message.WarningMessage.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Message.WarningMessage.#ctor(IdeaRS.OpenModel.Message.MessageNumber,IdeaRS.OpenModel.OpenObject,System.String,System.String,IdeaRS.OpenModel.Message.OpenMessage)">
            <summary>
            Constructor
            </summary>
            <param name="number">Number of the message</param>
            <param name="description">Description of the message</param>
            <param name="openObject">Affected object</param>
            <param name="propertyName">Affected property</param>
            <param name="innerMessage">Inner message</param>
        </member>
        <member name="P:IdeaRS.OpenModel.Message.WarningMessage.Message">
            <summary>
            Gets the Message
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Model.BondedTendon">
            <summary>
            Bonded tendon
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Model.BondedTendon.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.BondedTendon.Geometry">
            <summary>
            Geometry
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Model.CheckMember">
            <summary>
            Check member base class
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Model.CheckMember.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Model.CheckMember1D">
            <summary>
            Check meber 1D
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Model.CheckMember1D.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Model.Element2DType">
            <summary>
            Analysis Type of 2D IOM element
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Model.Element2DType.Shell">
            <summary>
            Shell
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Model.Element2DType.Slab">
            <summary>
            Slab
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Model.Element2DType.Wall">
            <summary>
            Wall
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Model.Element2D">
            <summary>
            Representation of element2D
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Model.Element2D.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.Element2D.Material">
            <summary>
            Material
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.Element2D.GeometricRegion">
            <summary>
            Geometry region of element2D
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.Element2D.Thickness">
            <summary>
            Thicknes of Element2D
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.Element2D.EccentricityZ">
            <summary>
            Displacement in local axis Z 
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.Element2D.InnerLines">
            <summary>
            Inner lines of this region
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.Element2D.InnerPoints">
            <summary>
            Inner points of this region
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.Element2D.ElementType">
            <summary>
            Analysis type - shell, plate, wall
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Model.Member2D">
            <summary>
            Representation of member2D
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Model.Member2D.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.Member2D.Name">
            <summary>
            Name of Member
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.Member2D.Elements2D">
            <summary>
            Array of element2D
            </summary>
            <returns>List of Element2D</returns>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.Member2D.Members1D">
            <summary>
            Array of internal members, ribs
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Model.PretensionedTendonGroup">
            <summary>
            The Pretensioned tendon group
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Model.PretensionedTendonGroup.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.PretensionedTendonGroup.Items">
            <summary>
            List of the pretensioned tendon in the group
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Model.PretensionedTendonGroupItem">
            <summary>
            The pretensionede tendon group item
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.PretensionedTendonGroupItem.Geometry">
            <summary>
            Geometry
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Model.Tendon">
            <summary>
            Tendon base class
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.Tendon.Material">
            <summary>
            Material
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.Tendon.NumberOfStrand">
            <summary>
            Number of strands
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Model.InitialImperfectionOfPoint">
             <summary>
             Initial deformation of point - geometry nonlinear calculation
             </summary>
             <example> 
             This sample shows how to create an initial imperfection of the point.
             <code lang = "C#">
             //Creating the model
             OpenModel openModel = new OpenModel();
            
             //Create nodes
             Point3D pointA = new Point3D();
             pointA.X = 0;
             pointA.Y = 0;
             pointA.Z = 0;
             openModel.AddObject(pointA);
             
             Point3D pointB = new Point3D();
             pointB.X = 0;
             pointB.Y = 0;
             pointB.Z = 1.2;
             openModel.AddObject(pointB);
             
             Point3D pointC = new Point3D();
             pointC.X = 0;
             pointC.Y = 0;
             pointC.Z = 2.4;
             openModel.AddObject(pointC);
             
             //Line between nodes
             LineSegment3D line1 = new LineSegment3D();
             line1.StartPoint = new ReferenceElement(pointA);
             line1.EndPoint = new ReferenceElement(pointB);
             //LCS of line
             line1.LocalCoordinateSystem = new CoordSystemByZup();
             openModel.AddObject(line1);
             
             //Line between nodes
             LineSegment3D line2 = new LineSegment3D();
             line2.StartPoint = new ReferenceElement(pointB);
             line2.EndPoint = new ReferenceElement(pointC);
             //LCS of line
             line2.LocalCoordinateSystem = new CoordSystemByZup();
             openModel.AddObject(line2);
             
             //Cocrete material
             MatConcreteEc2 mat = new MatConcreteEc2();
             //...
             openModel.AddObject(mat);
             
             //Reinforcement material
             MatReinforcementEc2 matR = new MatReinforcementEc2();
             //...
             openModel.AddObject(matR);
             
             //Cross-section without the bars
             IdeaRS.OpenModel.CrossSection.CrossSectionComponent css = new IdeaRS.OpenModel.CrossSection.CrossSectionComponent();
             //...
             openModel.AddObject(css);
             
             //Reinforced cross-section (referemnces cross-section and ads the bars)
             ReinforcedCrossSection rcs = new ReinforcedCrossSection();
             //...
             openModel.AddObject(rcs);
             
             //Model element along the "line1" - part of member1D
             Element1D element1D1 = new Element1D();
             element1D1.CrossSectionBegin = new ReferenceElement(rcs);
             element1D1.CrossSectionEnd = new ReferenceElement(rcs);
             element1D1.Segment = new ReferenceElement(line1);
             openModel.AddObject(element1D1);
             
             //Model element along the "line2" - part of member1D
             Element1D element1D2 = new Element1D();
             element1D2.CrossSectionBegin = new ReferenceElement(rcs);
             element1D2.CrossSectionEnd = new ReferenceElement(rcs);
             element1D2.Segment = new ReferenceElement(line2);
             openModel.AddObject(element1D2);
             
             //Model member assembles element1D
             Member1D member1D = new Member1D();
             member1D.Elements1D.Add(new ReferenceElement(element1D1));
             member1D.Elements1D.Add(new ReferenceElement(element1D2));
             member1D.Member1DType = Member1DType.Column;
             member1D.Name = "COLUMN1";
             openModel.AddObject(member1D);
             
             //Point support in the bottom node
             PointSupportNode pointSupportA = new PointSupportNode();
             pointSupportA.Point = new ReferenceElement(pointA);
             pointSupportA.SupportTypeRX = SupportTypeInDirrection.Free;
             pointSupportA.SupportTypeRY = SupportTypeInDirrection.Free;
             pointSupportA.SupportTypeRZ = SupportTypeInDirrection.Rigid;
             pointSupportA.SupportTypeX = SupportTypeInDirrection.Rigid;
             pointSupportA.SupportTypeY = SupportTypeInDirrection.Rigid;
             pointSupportA.SupportTypeZ = SupportTypeInDirrection.Rigid;
             openModel.AddObject(pointSupportA);
             
             //Point support in the top node
             PointSupportNode pointSupportB = new PointSupportNode();
             pointSupportB.Point = new ReferenceElement(pointC);
             pointSupportB.SupportTypeRX = SupportTypeInDirrection.Free;
             pointSupportB.SupportTypeRY = SupportTypeInDirrection.Free;
             pointSupportB.SupportTypeRZ = SupportTypeInDirrection.Free;
             pointSupportB.SupportTypeX = SupportTypeInDirrection.Rigid;
             pointSupportB.SupportTypeY = SupportTypeInDirrection.Rigid;
             pointSupportB.SupportTypeZ = SupportTypeInDirrection.Free;
             openModel.AddObject(pointSupportB);
            
             //set initial imperfection to node B and C
             InitialImperfectionOfPoint initPointB = new InitialImperfectionOfPoint();
             initPointB.Displacement = new Vector3D();
             initPointB.Displacement.X = 0.005;
             initPointB.Point = new ReferenceElement(pointB);
             openModel.AddObject(initPointB);
             
             InitialImperfectionOfPoint initPointC = new InitialImperfectionOfPoint();
             initPointC.Displacement = new Vector3D();
             initPointC.Displacement.X = 0.01;
             initPointC.Point = new ReferenceElement(pointC);
             openModel.AddObject(initPointC);
             </code>
             </example>
        </member>
        <member name="M:IdeaRS.OpenModel.Model.InitialImperfectionOfPoint.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.InitialImperfectionOfPoint.Point">
            <summary>
            Reference to geometrical point
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.InitialImperfectionOfPoint.Displacement">
            <summary>
            Displacement of structure point
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Model.Element1D">
             <summary>
             Representation of element1D
             </summary>
             <example> 
             This sample shows how to create an element 1D .
             <code lang = "C#">
             //Creating the model
             OpenModel openModel = new OpenModel();
            
             //Create nodes
             Point3D pointA = new Point3D();
             pointA.X = 0;
             pointA.Y = 0;
             pointA.Z = 0;
             openModel.AddObject(pointA);
             
             Point3D pointB = new Point3D();
             pointB.X = 0;
             pointB.Y = 0;
             pointB.Z = 1.2;
             openModel.AddObject(pointB);
             
             Point3D pointC = new Point3D();
             pointC.X = 0;
             pointC.Y = 0;
             pointC.Z = 2.4;
             openModel.AddObject(pointC);
             
             //Line between nodes
             LineSegment3D line1 = new LineSegment3D();
             line1.StartPoint = new ReferenceElement(pointA);
             line1.EndPoint = new ReferenceElement(pointB);
             //LCS of line
             line1.LocalCoordinateSystem = new CoordSystemByZup();
             openModel.AddObject(line1);
             
             //Line between nodes
             LineSegment3D line2 = new LineSegment3D();
             line2.StartPoint = new ReferenceElement(pointB);
             line2.EndPoint = new ReferenceElement(pointC);
             //LCS of line
             line2.LocalCoordinateSystem = new CoordSystemByZup();
             openModel.AddObject(line2);
             
             //Cocrete material
             MatConcreteEc2 mat = new MatConcreteEc2();
             //...
             openModel.AddObject(mat);
             
             //Reinforcement material
             MatReinforcementEc2 matR = new MatReinforcementEc2();
             //...
             openModel.AddObject(matR);
             
             //Cross-section without the bars
             IdeaRS.OpenModel.CrossSection.CrossSectionComponent css = new IdeaRS.OpenModel.CrossSection.CrossSectionComponent();
             //...
             openModel.AddObject(css);
             
             //Reinforced cross-section (referemnces cross-section and ads the bars)
             ReinforcedCrossSection rcs = new ReinforcedCrossSection();
             //...
             openModel.AddObject(rcs);
             
             //Model element along the "line1" - part of member1D
             Element1D element1D1 = new Element1D();
             element1D1.CrossSectionBegin = new ReferenceElement(rcs);
             element1D1.CrossSectionEnd = new ReferenceElement(rcs);
             element1D1.Segment = new ReferenceElement(line1);
             openModel.AddObject(element1D1);
             
             //Model element along the "line2" - part of member1D
             Element1D element1D2 = new Element1D();
             element1D2.CrossSectionBegin = new ReferenceElement(rcs);
             element1D2.CrossSectionEnd = new ReferenceElement(rcs);
             element1D2.Segment = new ReferenceElement(line2);
             openModel.AddObject(element1D2);
             
             </code>
             </example>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.Element1D.Name">
            <summary>
            Name of Element
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.Element1D.CrossSectionBegin">
            <summary>
            Gets, sets cross section located in the begining of this element1D
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.Element1D.CrossSectionEnd">
            <summary>
            Gets, sets cross section located at the end of this element1D
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.Element1D.Segment">
            <summary>
            Line segment with start point and end point
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.Element1D.RotationRx">
            <summary>
            Rotation of Cross-section of Element1D. Difference from default Line LCS
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.Element1D.EccentricityBeginX">
            <summary>
            Local eccentricity X at the begin of Element1D
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.Element1D.EccentricityBeginY">
            <summary>
            Local eccentricity Y at the begin of Element1D
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.Element1D.EccentricityBeginZ">
            <summary>
             Local eccentricity Z at the begin of Element1D
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.Element1D.EccentricityEndX">
            <summary>
             Local eccentricity X at the end of Element1D
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.Element1D.EccentricityEndY">
            <summary>
             Local eccentricity Y at the end of Element1D
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.Element1D.EccentricityEndZ">
            <summary>
             Local eccentricity Z at the end of Element1D
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Model.HingeTypeInDirrection">
            <summary>
            Type of hinge in the direction
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Model.HingeTypeInDirrection.NoHinge">
            <summary>
            No hinge defined
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Model.HingeTypeInDirrection.FullHinge">
            <summary>
            Full hinge, zero stiffness is aplied
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Model.HingeTypeInDirrection.Flexible">
            <summary>
            Initial stiffness is aplied
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Model.HingeTypeInDirrection.Nonlinear">
            <summary>
            Nonlinear function is aplied
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Model.HingeElement1D">
            <summary>
            Representation of hinge element 1D
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.HingeElement1D.InitialStiffnessX">
            <summary>
            Initial stiffness X dirrection
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.HingeElement1D.InitialStiffnessY">
            <summary>
            Initial stiffness Y dirrection
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.HingeElement1D.InitialStiffnessZ">
            <summary>
            Initial stiffness Z dirrection
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.HingeElement1D.InitialStiffnessRX">
            <summary>
            Initial stiffness rotational RX
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.HingeElement1D.InitialStiffnessRY">
            <summary>
            Initial stiffness rotational RY
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.HingeElement1D.InitialStiffnessRZ">
            <summary>
            Initial stiffness rotational RZ
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.HingeElement1D.HingeTypeX">
            <summary>
            Hinge type in dirrection X
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.HingeElement1D.HingeTypeY">
            <summary>
            Hinge type in dirrection Y
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.HingeElement1D.HingeTypeZ">
            <summary>
            Hinge type in dirrection Z
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.HingeElement1D.HingeTypeRX">
            <summary>
            Hinge type in dirrection round X
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.HingeElement1D.HingeTypeRY">
            <summary>
            Hinge type in dirrection round Y
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.HingeElement1D.HingeTypeRZ">
            <summary>
            Hinge type in dirrection round Z
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Model.LineSupportSegment">
            <summary>
            Line support on segment
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.LineSupportSegment.Segment">
            <summary>
            Reference to geometrical segment3D
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.LineSupportSegment.LocalCoordinateSystem">
            <summary>
            Support local coord system
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.LineSupportSegment.FlexibleStiffnessX">
            <summary>
            Support stiffness X dirrection
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.LineSupportSegment.FlexibleStiffnessY">
            <summary>
            Support stiffness Y dirrection
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.LineSupportSegment.FlexibleStiffnessZ">
            <summary>
            Support stiffness Z dirrection
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.LineSupportSegment.FlexibleStiffnessRX">
            <summary>
            Support stiffness rotational RX
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.LineSupportSegment.FlexibleStiffnessRY">
            <summary>
            Support stiffness rotational RY
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.LineSupportSegment.FlexibleStiffnessRZ">
            <summary>
            Support stiffness rotational RZ
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.LineSupportSegment.SupportTypeX">
            <summary>
            Support type in dirrection X
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.LineSupportSegment.SupportTypeY">
            <summary>
            Support type in dirrection Y
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.LineSupportSegment.SupportTypeZ">
            <summary>
            Support type in dirrection Z
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.LineSupportSegment.SupportTypeRX">
            <summary>
            Support type in dirrection round X
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.LineSupportSegment.SupportTypeRY">
            <summary>
            Support type in dirrection round Y
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.LineSupportSegment.SupportTypeRZ">
            <summary>
            Support type in dirrection round Z
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Model.Member1DType">
            <summary>
            Type of Member 1D
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Model.Member1DType.Beam">
            <summary>
            Beam member
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Model.Member1DType.Column">
            <summary>
            Column member
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Model.Member1DType.Truss">
            <summary>
            Truss member
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Model.Member1DType.Rib">
            <summary>
            Rib member
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Model.Member1DType.BeamSlab">
            <summary>
            Beam slab, rcs element
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Model.Member1D">
             <summary>
             Representation of member1D
             </summary>
             <example> 
             This sample shows how to create a member 1D .
             <code lang = "C#">
             //Creating the model
             OpenModel openModel = new OpenModel();
            
             //Create nodes
             Point3D pointA = new Point3D();
             pointA.X = 0;
             pointA.Y = 0;
             pointA.Z = 0;
             openModel.AddObject(pointA);
             
             Point3D pointB = new Point3D();
             pointB.X = 0;
             pointB.Y = 0;
             pointB.Z = 1.2;
             openModel.AddObject(pointB);
             
             Point3D pointC = new Point3D();
             pointC.X = 0;
             pointC.Y = 0;
             pointC.Z = 2.4;
             openModel.AddObject(pointC);
             
             //Line between nodes
             LineSegment3D line1 = new LineSegment3D();
             line1.StartPoint = new ReferenceElement(pointA);
             line1.EndPoint = new ReferenceElement(pointB);
             //LCS of line
             line1.LocalCoordinateSystem = new CoordSystemByZup();
             openModel.AddObject(line1);
             
             //Line between nodes
             LineSegment3D line2 = new LineSegment3D();
             line2.StartPoint = new ReferenceElement(pointB);
             line2.EndPoint = new ReferenceElement(pointC);
             //LCS of line
             line2.LocalCoordinateSystem = new CoordSystemByZup();
             openModel.AddObject(line2);
             
             //Cocrete material
             MatConcreteEc2 mat = new MatConcreteEc2();
             //...
             openModel.AddObject(mat);
             
             //Reinforcement material
             MatReinforcementEc2 matR = new MatReinforcementEc2();
             //...
             openModel.AddObject(matR);
             
             //Cross-section without the bars
             IdeaRS.OpenModel.CrossSection.CrossSectionComponent css = new IdeaRS.OpenModel.CrossSection.CrossSectionComponent();
             //...
             openModel.AddObject(css);
             
             //Reinforced cross-section (referemnces cross-section and ads the bars)
             ReinforcedCrossSection rcs = new ReinforcedCrossSection();
             //...
             openModel.AddObject(rcs);
             
             //Model element along the "line1" - part of member1D
             Element1D element1D1 = new Element1D();
             element1D1.CrossSectionBegin = new ReferenceElement(rcs);
             element1D1.CrossSectionEnd = new ReferenceElement(rcs);
             element1D1.Segment = new ReferenceElement(line1);
             openModel.AddObject(element1D1);
             
             //Model element along the "line2" - part of member1D
             Element1D element1D2 = new Element1D();
             element1D2.CrossSectionBegin = new ReferenceElement(rcs);
             element1D2.CrossSectionEnd = new ReferenceElement(rcs);
             element1D2.Segment = new ReferenceElement(line2);
             openModel.AddObject(element1D2);
             
             //Model member assembles element1D
             Member1D member1D = new Member1D();
             member1D.Elements1D.Add(new ReferenceElement(element1D1));
             member1D.Elements1D.Add(new ReferenceElement(element1D2));
             member1D.Member1DType = Member1DType.Column;
             member1D.Name = "COLUMN1";
             openModel.AddObject(member1D);
             </code>
             </example>
        </member>
        <member name="M:IdeaRS.OpenModel.Model.Member1D.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.Member1D.Name">
            <summary>
            Name of Element
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.Member1D.Elements1D">
            <summary>
            Array of element1D
            </summary>
            <returns>List of Element1D</returns>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.Member1D.Member1DType">
            <summary>
            Beam, column,...
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.Member1D.HingeBegin">
            <summary>
            Gets, sets hinge located in the begining of element
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.Member1D.HingeEnd">
            <summary>
            Gets, sets hinge located in the end of element
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Model.SupportTypeInDirrection">
            <summary>
            Type opf support in the direction
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Model.SupportTypeInDirrection.Rigid">
            <summary>
            Rigid support
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Model.SupportTypeInDirrection.Free">
            <summary>
            Free support (no support defined)
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Model.SupportTypeInDirrection.Flexible">
            <summary>
            Flexible support (Flexible Stiffness is present)
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Model.SupportTypeInDirrection.RigidPressOnly">
            <summary>
            Nonlinear press only
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Model.SupportTypeInDirrection.FlexiblePressOnly">
            <summary>
            Nonlinear flexible press only
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Model.PointSupportNode">
             <summary>
             Point support in point
             </summary>
             <example> 
             This sample shows how to create a support in the point.
             <code lang = "C#">
             //Creating the model
             OpenModel openModel = new OpenModel();
            
             //Create nodes
             Point3D pointA = new Point3D();
             pointA.X = 0;
             pointA.Y = 0;
             pointA.Z = 0;
             openModel.AddObject(pointA);
             
             Point3D pointB = new Point3D();
             pointB.X = 0;
             pointB.Y = 0;
             pointB.Z = 1.2;
             openModel.AddObject(pointB);
             
             Point3D pointC = new Point3D();
             pointC.X = 0;
             pointC.Y = 0;
             pointC.Z = 2.4;
             openModel.AddObject(pointC);
             
             //Line between nodes
             LineSegment3D line1 = new LineSegment3D();
             line1.StartPoint = new ReferenceElement(pointA);
             line1.EndPoint = new ReferenceElement(pointB);
             //LCS of line
             line1.LocalCoordinateSystem = new CoordSystemByZup();
             openModel.AddObject(line1);
             
             //Line between nodes
             LineSegment3D line2 = new LineSegment3D();
             line2.StartPoint = new ReferenceElement(pointB);
             line2.EndPoint = new ReferenceElement(pointC);
             //LCS of line
             line2.LocalCoordinateSystem = new CoordSystemByZup();
             openModel.AddObject(line2);
             
             //Cocrete material
             MatConcreteEc2 mat = new MatConcreteEc2();
             //...
             openModel.AddObject(mat);
             
             //Reinforcement material
             MatReinforcementEc2 matR = new MatReinforcementEc2();
             //...
             openModel.AddObject(matR);
             
             //Cross-section without the bars
             IdeaRS.OpenModel.CrossSection.CrossSectionComponent css = new IdeaRS.OpenModel.CrossSection.CrossSectionComponent();
             //...
             openModel.AddObject(css);
             
             //Reinforced cross-section (referemnces cross-section and ads the bars)
             ReinforcedCrossSection rcs = new ReinforcedCrossSection();
             //...
             openModel.AddObject(rcs);
             
             //Model element along the "line1" - part of member1D
             Element1D element1D1 = new Element1D();
             element1D1.CrossSectionBegin = new ReferenceElement(rcs);
             element1D1.CrossSectionEnd = new ReferenceElement(rcs);
             element1D1.Segment = new ReferenceElement(line1);
             openModel.AddObject(element1D1);
             
             //Model element along the "line2" - part of member1D
             Element1D element1D2 = new Element1D();
             element1D2.CrossSectionBegin = new ReferenceElement(rcs);
             element1D2.CrossSectionEnd = new ReferenceElement(rcs);
             element1D2.Segment = new ReferenceElement(line2);
             openModel.AddObject(element1D2);
             
             //Model member assembles element1D
             Member1D member1D = new Member1D();
             member1D.Elements1D.Add(new ReferenceElement(element1D1));
             member1D.Elements1D.Add(new ReferenceElement(element1D2));
             member1D.Member1DType = Member1DType.Column;
             member1D.Name = "COLUMN1";
             openModel.AddObject(member1D);
             
             //Point support in the bottom node
             PointSupportNode pointSupportA = new PointSupportNode();
             pointSupportA.Point = new ReferenceElement(pointA);
             pointSupportA.SupportTypeRX = SupportTypeInDirrection.Free;
             pointSupportA.SupportTypeRY = SupportTypeInDirrection.Free;
             pointSupportA.SupportTypeRZ = SupportTypeInDirrection.Rigid;
             pointSupportA.SupportTypeX = SupportTypeInDirrection.Rigid;
             pointSupportA.SupportTypeY = SupportTypeInDirrection.Rigid;
             pointSupportA.SupportTypeZ = SupportTypeInDirrection.Rigid;
             openModel.AddObject(pointSupportA);
             
             //Point support in the top node
             PointSupportNode pointSupportB = new PointSupportNode();
             pointSupportB.Point = new ReferenceElement(pointC);
             pointSupportB.SupportTypeRX = SupportTypeInDirrection.Free;
             pointSupportB.SupportTypeRY = SupportTypeInDirrection.Free;
             pointSupportB.SupportTypeRZ = SupportTypeInDirrection.Free;
             pointSupportB.SupportTypeX = SupportTypeInDirrection.Rigid;
             pointSupportB.SupportTypeY = SupportTypeInDirrection.Rigid;
             pointSupportB.SupportTypeZ = SupportTypeInDirrection.Free;
             openModel.AddObject(pointSupportB);
            
             </code>
             </example>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.PointSupportNode.Point">
            <summary>
            Reference to geometrical point
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.PointSupportNode.LocalCoordinateSystem">
            <summary>
            Support local coord system
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.PointSupportNode.FlexibleStiffnessX">
            <summary>
            Support stiffness X dirrection
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.PointSupportNode.FlexibleStiffnessY">
            <summary>
            Support stiffness Y dirrection
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.PointSupportNode.FlexibleStiffnessZ">
            <summary>
            Support stiffness Z dirrection
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.PointSupportNode.FlexibleStiffnessRX">
            <summary>
            Support stiffness rotational RX
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.PointSupportNode.FlexibleStiffnessRY">
            <summary>
            Support stiffness rotational RY
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.PointSupportNode.FlexibleStiffnessRZ">
            <summary>
            Support stiffness rotational RZ
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.PointSupportNode.SupportTypeX">
            <summary>
            Support type in dirrection X
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.PointSupportNode.SupportTypeY">
            <summary>
            Support type in dirrection Y
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.PointSupportNode.SupportTypeZ">
            <summary>
            Support type in dirrection Z
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.PointSupportNode.SupportTypeRX">
            <summary>
            Support type in dirrection round X
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.PointSupportNode.SupportTypeRY">
            <summary>
            Support type in dirrection round Y
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.PointSupportNode.SupportTypeRZ">
            <summary>
            Support type in dirrection round Z
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Model.RigidLink">
            <summary>
            Rigid link between nodes
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Model.RigidLink.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.RigidLink.MasterNode">
            <summary>
            Node to which all six independent
            degrees of freedom for the element are assigned
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.RigidLink.SlaveNodes">
            <summary>
            Dependent nodes
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.RigidLink.RigidRX">
            <summary>
            DOF rigid in RX dirrection
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.RigidLink.RigidRY">
            <summary>
            DOF rigid in RY dirrection
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.RigidLink.RigidRZ">
            <summary>
            DOF rigid in RZ dirrection
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.RigidLink.RigidX">
            <summary>
            DOF rigid in X dirrection
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.RigidLink.RigidY">
            <summary>
            DOF rigid in Y dirrection
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Model.RigidLink.RigidZ">
            <summary>
            DOF rigid in Z dirrection
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.OpenModelContainer">
            <summary>
            Open Model Container 
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModelContainer.OpenModel">
            <summary>
            Open Model
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModelContainer.OpenModelResult">
            <summary>
            Open Model Result
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.OpenModelResult">
            <summary>
            Results of open model
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.OpenModelResult.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.OpenModelResult.ResultOnMembers">
            <summary>
            Results on members
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.OpenModelResult.SaveToXmlFile(System.String)">
            <summary>
            Saves content into file as a XML format
            </summary>
            <param name="xmlFileName">XML file name</param>
            <returns>True if succeeded</returns>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.OpenModelResult.LoadFromXmlFile(System.String)">
            <summary>
            Creates the instance of Open Model Result from the XML file
            </summary>
            <param name="xmlFileName">XML file name</param>
            <returns>Open Model Result or null</returns>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.OpenModelResult.LoadFromStream(System.IO.Stream)">
            <summary>
            Creates the instance of Open Model Result  from the stream
            </summary>
            <param name="xmlFileStream">The input stream</param>
            <returns>The new instance of Open Model Result </returns>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.LoadingType">
            <summary>
            Type of loading
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Result.LoadingType.LoadCase">
            <summary>
            Load case
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Result.LoadingType.Combination">
            <summary>
            Combination
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Result.LoadingType.ResultClass">
            <summary>
            Result Class
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.Loading">
            <summary>
            Loading identification
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.Loading.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.Loading.#ctor(IdeaRS.OpenModel.Result.LoadingType,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="loadingType">Type of loading</param>
            <param name="id">Id of loading</param>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.Loading.LoadingType">
            <summary>
            Type of loading
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.Loading.Id">
            <summary>
            Id of loading
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.MemberType">
            <summary>
            Type of member
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Result.MemberType.Member1D">
            <summary>
            Member 1D
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Result.MemberType.Element1D">
            <summary>
            Element 1D
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.Member">
            <summary>
            Member identification
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.Member.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.Member.#ctor(IdeaRS.OpenModel.Result.MemberType,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="memberType">Type of member</param>
            <param name="id">Id of member</param>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.Member.MemberType">
            <summary>
            Type of member
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.Member.Id">
            <summary>
            Id of member
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.ResultInSection">
            <summary>
            Common result
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultInSection.Position">
            <summary>
            Position
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultInSection.ResultOfLoading">
            <summary>
            Result In Section
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.ResultPoint">
            <summary>
            Point of results
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultPoint.Id">
            <summary>
            Id of Point
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultPoint.Point">
            <summary>
            Location of Point
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.ResultOfDeformation2">
            <summary>
            Result of deformation in the one positon
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.ResultOfDeformation2.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfDeformation2.Loading">
            <summary>
            LoadingTypeClass
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfDeformation2.Ux">
            <summary>
            Deformation in the x direction
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfDeformation2.Uy">
            <summary>
            Deformation in the y direction
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfDeformation2.Uz">
            <summary>
            Deformation in the z direction
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfDeformation2.Fix">
            <summary>
            Rotation around x-axis
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfDeformation2.Fiy">
            <summary>
            Rotation  around y-axis
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfDeformation2.Fiz">
            <summary>
            Rotation  around z-axis
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.ResultOfInternalForces2">
            <summary>
            Result of internal forces in the one position
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.ResultOfInternalForces2.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfInternalForces2.Loading">
            <summary>
            LoadingTypeClass
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfInternalForces2.N">
            <summary>
            Normal force
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfInternalForces2.Qy">
            <summary>
            Shear force in y dirrection
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfInternalForces2.Qz">
            <summary>
            Shear force in z dirrection
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfInternalForces2.Mx">
            <summary>
            Bending moment around x-axis
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfInternalForces2.My">
            <summary>
            Bending moment around y-axis
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfInternalForces2.Mz">
            <summary>
            Bending moment around z-axis
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.ResultOfLoading2">
            <summary>
            Result of internal forces in the one position
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.ResultOfLoading2.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.ResultOfMember2">
            <summary>
            Result of the member
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.ResultOfMember2.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.ResultOfMember2.#ctor(IdeaRS.OpenModel.Result.Member)">
            <summary>
            Constructor
            </summary>
            <param name="member">Member</param>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfMember2.Member">
            <summary>
            Member
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfMember2.Results">
            <summary>
            List of result
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.ResultOnMembers2">
            <summary>
            Result of member
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.ResultOnMembers2.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.ResultOnMembers2.#ctor(IdeaRS.OpenModel.Result.ResultType)">
            <summary>
            Constructor
            <param name="resultType">Type of result</param>
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOnMembers2.ResultType">
            <summary>
            Type of  result
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOnMembers2.Results">
            <summary>
            List of results of members
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.ResultOfNLA2">
            <summary>
            Result of internal forces in the one position
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.ResultOfNLA2.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfNLA2.Points">
            <summary>
            Results in section
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.ResultOfNLAPoint2">
            <summary>
            Result of internal forces in the one position
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.ResultOfNLAPoint2.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfNLAPoint2.Id">
            <summary>
            Id of point
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfNLAPoint2.X">
            <summary>
            X coordinates on cross-section
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfNLAPoint2.Y">
            <summary>
            Y coordinates on cross-section
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfNLAPoint2.ResultOfIncrements">
            <summary>
            Results in load case
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.ResultOfIncrement2">
            <summary>
            Result of internal forces in the one position
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfIncrement2.Increment">
            <summary>
            Increment of load case
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfIncrement2.AxialForce">
            <summary>
            Axial force
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfIncrement2.AxialStress">
            <summary>
            Axial stress
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfIncrement2.AxialStrain">
            <summary>
            Axial strain
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.PointResultOfTA">
            <summary>
            Point Result of TA
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.PointResultOfTA.Temp">
            <summary>
            Temperature
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.PointResultBase">
            <summary>
            Point Result Base abstract class
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.PointResultBase.Loading">
            <summary>
            Loading
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.PointResultOfNLA">
            <summary>
            Point Result of NLA
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.PointResultOfNLA.AxialForce">
            <summary>
            Axial force
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.PointResultOfNLA.AxialStress">
            <summary>
            Axial stress
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.PointResultOfNLA.AxialStrain">
            <summary>
            Axial strain
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.PointResults">
            <summary>
            Point results
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.PointResults.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.PointResults.Point">
            <summary>
            Point
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.PointResults.Results">
            <summary>
            List of results in the point
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.ResultBase">
            <summary>
            Result base abstract class
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.ResultOfDeformation">
            <summary>
            Result of deformation in the one positon
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.ResultOfDeformation.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfDeformation.Ux">
            <summary>
            Deformation in the x direction
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfDeformation.Uy">
            <summary>
            Deformation in the y direction
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfDeformation.Uz">
            <summary>
            Deformation in the z direction
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfDeformation.Fix">
            <summary>
            Rotation around x-axis
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfDeformation.Fiy">
            <summary>
            Rotation  around y-axis
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfDeformation.Fiz">
            <summary>
            Rotation  around z-axis
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.PointOfID">
            <summary>
            Point of interaction diagram
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.PointOfID.N">
            <summary>
            Normal force
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.PointOfID.My">
            <summary>
            Bending moment around y-axis
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.PointOfID.Mz">
            <summary>
            Bending moment around z-axis
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.PolygonPointID">
            <summary>
            Polygon of pointIDs
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.PolygonPointID.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.PolygonPointID.Points">
            <summary>
            Points
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.ResultOfInteractionDiagramPlane">
            <summary>
            Result of Interaction diagram in plane
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.ResultOfInteractionDiagramPlane.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfInteractionDiagramPlane.Plane">
            <summary>
            Polygon of interaction diagram plane
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfInteractionDiagramPlane.LoadChart">
            <summary>
            Polygon of Load
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.ResultOfInternalForces">
            <summary>
            Result of internal forces in the one position
            </summary>
            <remarks>Convention of internal forces on 1D members <br/>
            <img src="Images\InternalForcesConvention.png" /> <br/>
            Internal forces on 1D members perform following actions:<br/>
            •	positive bending moment My causes tension in cross-section fibers with negative z-coordinate<br/>
            •	positive bending moment Mz causes tension in fibers with negative y-coordinate<br/>
            •	positive torsional moment Mx acts about x-axis of 1D member<br/>
            •	positive axial force N acts in direction of x-axis of member and causes tension in cross-section fibers<br/>
            •	positive shear force Qz acts in direction of z-axis of cross-section<br/>
            •	positive shear force Qy acts in direction of y-axis of cross-section<br/>
            </remarks>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.ResultOfInternalForces.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfInternalForces.N">
            <summary>
            Normal force
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfInternalForces.Qy">
            <summary>
            Shear force in y dirrection
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfInternalForces.Qz">
            <summary>
            Shear force in z dirrection
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfInternalForces.Mx">
            <summary>
            Bending moment around x-axis
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfInternalForces.My">
            <summary>
            Bending moment around y-axis
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfInternalForces.Mz">
            <summary>
            Bending moment around z-axis
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.ResultOfLoading">
            <summary>
            Result Of Loading
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.ResultOfLoading.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfLoading.Items">
            <summary>
            Items od loading
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.ResultOfLoadingItem">
            <summary>
            Item of Result of Loading
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfLoadingItem.Loading">
            <summary>
            Loading
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfLoadingItem.Coefficient">
            <summary>
            Coefficient of loading
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.ResultType">
            <summary>
            Type of results
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Result.ResultType.InternalForces">
            <summary>
            Internal forces
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Result.ResultType.Deformation">
            <summary>
            Deformation
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Result.ResultType.CrossSectionNLA">
            <summary>
            NLA on cross-section
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Result.ResultType.CrossSectionTA">
            <summary>
            TA on cross-section
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Result.ResultType.InteractionDiagram">
            <summary>
            Interaction digaram on section
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Result.ResultType.CrossSectionMesh">
            <summary>
            Mesh on cross-section
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.ResultOnMember">
            <summary>
            Result of the member
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.ResultOnMember.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.ResultOnMember.#ctor(IdeaRS.OpenModel.Result.Member,IdeaRS.OpenModel.Result.ResultType)">
            <summary>
            Constructor
            </summary>
            <param name="member">Member</param>
            <param name="resultType">Type of result</param>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOnMember.Member">
            <summary>
            Member
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOnMember.ResultType">
            <summary>
            Type of  result
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOnMember.Results">
            <summary>
            List of result
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.ListOfResultOfMember">
            <summary>
            List of result of member
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.ListOfResultOfMember.GetSchema">
            <summary>
            Gets schema
            </summary>
            <returns></returns>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.ListOfResultOfMember.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads XML
            </summary>
            <param name="reader">XML reader</param>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.ListOfResultOfMember.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes XML
            </summary>
            <param name="writer">XML writer</param>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.ResultOnMembers">
            <summary>
            Result of the member
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.ResultOnMembers.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOnMembers.Loading">
            <summary>
            Loading
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOnMembers.Members">
            <summary>
            List of result of members
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.ResultOfNLA">
            <summary>
            Result of internal forces in the one position
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.ResultOfNLA.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfNLA.Sections">
            <summary>
            Results in section
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.ResultOfNLASection">
            <summary>
            Result of internal forces in the one position
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.ResultOfNLASection.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfNLASection.Position">
            <summary>
            Position on member
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfNLASection.Points">
            <summary>
            Results in points
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.ResultOfNLAPoint">
            <summary>
            Result of internal forces in the one position
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.ResultOfNLAPoint.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfNLAPoint.Id">
            <summary>
            Id of point
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfNLAPoint.X">
            <summary>
            X coordinates on cross-section
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfNLAPoint.Y">
            <summary>
            Y coordinates on cross-section
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfNLAPoint.ResultOfIncrements">
            <summary>
            Results in load case
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.ResultOfIncrement">
            <summary>
            Result of internal forces in the one position
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfIncrement.Increment">
            <summary>
            Increment of load case
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfIncrement.AxialForce">
            <summary>
            Axial force
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfIncrement.AxialStress">
            <summary>
            Axial stress
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOfIncrement.AxialStrain">
            <summary>
            Axial strain
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.ResultOnMeshType">
            <summary>
            Type of result on mesh
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Result.ResultOnMeshType.Strain">
            <summary>
            Strain
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Result.ResultOnMeshType.StrainCheck">
            <summary>
            StrainCheck
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Result.ResultOnMeshType.Stress">
            <summary>
            Stress
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Result.ResultOnMeshType.FondationStress">
            <summary>
            Foundation stress
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Result.ResultOnMeshType.OverallCheck">
            <summary>
            OverallCheck
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.StructuralPlateType">
            <summary>
            Tyoe of structural plate
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Result.StructuralPlateType.SteelPlate">
            <summary>
            Steel plate
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Result.StructuralPlateType.Weld">
            <summary>
            Weld
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.FemElement">
            <summary>
            Provides information about FEM element
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.FemElement.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.FemElement.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor for triangular element 2d
            </summary>
            <param name="node1"></param>
            <param name="node2"></param>
            <param name="node3"></param>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.FemElement.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor for quadrilateral element 2D
            </summary>
            <param name="node1"></param>
            <param name="node2"></param>
            <param name="node3"></param>
            <param name="node4"></param>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.FemElement.Type">
            <summary>
            Type of the finite element
            1 - triangular element 2D
            2 - quadrilateral element 2D
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.FemElement.Vertices">
            <summary>
            Get list of vertices of the fem element
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.PlateElements">
            <summary>
            Data of plate elements
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.PlateElements.PlateType">
            <summary>
            Type plate elements
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.PlateElements.PlateUID">
            <summary>
            Plate UID
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.PlateElements.Elements">
            <summary>
            List of fem elements for plate UID
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.PlateElements.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.PlateElements.#ctor(System.Int32)">
             <summary>
            Constructor
             </summary>
             <param name="count">Number of plate elements</param>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.ResultOnMesh">
            <Summary>
             Data structure for result mesh
            </Summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.ResultOnMesh.#ctor">
            <Summary>
             Construstor
            </Summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOnMesh.Nodes">
            <Summary>
             List of coordinates of mesh nodes.
             There are 3 'doubles' for each node (x, y, z)
            </Summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOnMesh.PlatesElement">
            <summary>
            List of elements for each plate UID
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOnMesh.Displacement">
            <Summary>
             Displacements at each node of the mesh in the global x, z ,y
            </Summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOnMesh.Value">
            <Summary>
             Values of required type (stress, strain etc.) in nodes
            </Summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.ResultOnSection">
            <summary>
            Result of section on the member
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.ResultOnSection.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOnSection.AbsoluteRelative">
            <summary>
            Absolute of relative value of position is used
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOnSection.Position">
            <summary>
            Position of section
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.ResultOnSection.Results">
            <summary>
            List of result of members
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.AbsoluteRelative">
            <summary>
            Absolute of relative value of position is used
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Result.AbsoluteRelative.Absolute">
            <summary>
            Position is defined absolutely
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Result.AbsoluteRelative.Relative">
            <summary>
            Position is defined relatively
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.SectionResultBase">
            <summary>
            Section result base
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.SectionResultBase.Loading">
            <summary>
            Loading
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.SectionResultOnPoints">
            <summary>
            Section result of points
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.SectionResultOnPoints.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.SectionResultOnPoints.Points">
            <summary>
            Section points
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.SectionResultMesh">
            <summary>
            Section result mesh
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.SectionResultMesh.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.SectionResultMesh.Points">
            <summary>
            Section points
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.SectionResultMesh.Elements">
            <summary>
            Elements
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Result.MeshElement2D">
            <summary>
            Element2D
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Result.MeshElement2D.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Result.MeshElement2D.Points">
            <summary>
            Points
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.OpenAttribute">
            <summary>
            Open attribute base class
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenAttribute.Element">
            <summary>
            Element for attribute
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.OpenObject">
            <summary>
            Open object base class
            POS - class can not be abstract -it causes problems with serialization
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.CountryCode">
            <summary>
            CountryCode
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CountryCode.None">
            <summary>
            no code
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CountryCode.ECEN">
            <summary>
            Eurocode
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CountryCode.SIA">
            <summary>
            Swiss code
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CountryCode.American">
            <summary>
            American design code as ACI, AISC, ASTM standards etc.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CountryCode.Canada">
            <summary>
            Canadian design code
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CountryCode.Australia">
            <summary>
            Australian design code
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CountryCode.RUS">
            <summary>
            Russia design code
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.CrossSectionConversionTable">
            <summary>
            Conversion table of cross-section
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSectionConversionTable.NoUsed">
            <summary>
            Conversion table will be not used
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSectionConversionTable.SCIA">
            <summary>
            Conversion table of SCIA CSS will be used
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSectionConversionTable.Autodesk">
            <summary>
            Conversion table of Autodesk CSS will be used, it is useable for Robot, Revit, ...
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSectionConversionTable.SAP2000">
            <summary>
            Conversion table of SAP2000 will be used, it is useable for SAP2000 ...
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSectionConversionTable.StaadPro">
            <summary>
            Conversion table of StaadPro CSS will be used, it is useable for StaadPro, ...
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.CrossSectionConversionTable.AdvanceDesign">
            <summary>
            Conversion table of AdvanceDesign CSS will be used, it is useable for AdvanceDesign, ...
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.OriginSettings">
            <summary>
            OriginProject
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.OriginSettings.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OriginSettings.ProjectName">
            <summary>
            Name of project
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OriginSettings.ProjectDescription">
            <summary>
            Description of project
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OriginSettings.Author">
            <summary>
            Name of author of project
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OriginSettings.DateOfCreate">
            <summary>
            Date of create project 
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OriginSettings.CrossSectionConversionTable">
            <summary>
            Conversion table for Parameters
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OriginSettings.CountryCode">
            <summary>
             CountryCode
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Parameters.AnchorType">
            <summary>
            Defines a type of anchor end.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Parameters.AnchorType.Straight">
            <summary>
            Straight end - no washer.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Parameters.AnchorType.WasherPlateCircular">
            <summary>
            Circular washer plate.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Parameters.AnchorType.WasherPlateRectangular">
            <summary>
            Rectangular washer plate.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Parameters.AnchorParam">
            <summary>
            Parameter which represts the record of the anchor in IDEA MPRL
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Parameters.AnchorParam.Length">
            <summary>
            Gets or sets the anchor length.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Parameters.AnchorParam.AnchorTypeData">
            <summary>
            Gets or sets the various type of anchor.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Parameters.AnchorParam.AnchorTypeSize">
            <summary>
            Gets or sets the size of washer plate.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Parameters.PositionRelatedTo">
            <summary>
            Position, to which is input related to.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Parameters.PositionRelatedTo.Axis">
            <summary>
            Position is related to any axis.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Parameters.PositionRelatedTo.TopOfSteel">
            <summary>
            Position is related to top of steel.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Parameters.PositionRelatedTo.Profile">
            <summary>
            Position is related to the related profile (cross-section) bounding box.
            In this case is Rows and Cols position are on the positive axes (top, right),
            RowsNegative and ColsNegative are on the negative axes.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Parameters.PositionRelatedTo.LeftSide">
            <summary>
            Position is related to the left side of main plate.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Parameters.PositionRelatedTo.RightSide">
            <summary>
            Position is related to the right side of main plate.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Parameters.PolarInputType">
            <summary>
            Type of polar input
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Parameters.PolarInputType.ByCount">
            <summary>
            Polar input defined by count in circle.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Parameters.PolarInputType.ByAngle">
            <summary>
            Polar input defined by angles.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Parameters.ConnectorGridType">
            <summary>
            Defines a type of fasteners grid.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Parameters.ConnectorGridType.Regular">
            <summary>
            Regular type of grid.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Parameters.ConnectorGridType.FirstShiftedFull">
            <summary>
            First row is shifted.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Parameters.ConnectorGridType.SecondShiftedFull">
            <summary>
            Second row is shifted
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Parameters.ConnectorGridType.FirstShiftedShort">
            <summary>
            First row is shifted, second row is short.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Parameters.ConnectorGridType.SecondShiftedShort">
            <summary>
            Second row is shifted, first is short.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Parameters.ConnectorGridType.FirstShifted">
            <summary>
            First shifted.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Parameters.ConnectorGridType.SecondShifted">
            <summary>
            Second shifted.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Parameters.ConnectorGridType.Full">
            <summary>
            Rows are full.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Parameters.ConnectorGridType.Short">
            <summary>
            Rows are short.
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Parameters.BoltShearType">
            <summary>
            Defines a transfer of shear force in bolts.
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Parameters.BoltShearType.Bearing">
            <summary>
            TODO DRA 1
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Parameters.BoltShearType.Interaction">
            <summary>
            TODO DRA 2
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Parameters.BoltShearType.Friction">
            <summary>
            TODO DRA 3
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Parameters.ValueCount">
            <summary>
            Specifies pair of value and their count.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Parameters.ValueCount.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Parameters.ValueCount.Count">
            <summary>
            Gets or sets the repeating of value.
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Parameters.ValueCount.Create(System.Double)">
            <summary>
            Creates a new instance with specified value.
            </summary>
            <param name="value">The value to set.</param>
            <returns>A new instance of ValueCount.</returns>
        </member>
        <member name="M:IdeaRS.OpenModel.Parameters.ValueCount.Create(System.Double,System.Int32)">
            <summary>
            Creates a new instance with value and their repeating.
            </summary>
            <param name="value">The value to set.</param>
            <param name="count">The number of repeating.</param>
            <returns>A new instance of ValueCount.</returns>
        </member>
        <member name="T:IdeaRS.OpenModel.Parameters.NumberGroups">
            <summary>
            Defines used input of groups of numbers.
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.Parameters.NumberGroups.Create(System.Collections.Generic.List{IdeaRS.OpenModel.Parameters.ValueCount})">
            <summary>
            Creates new instance with list of ValueCount .
            </summary>
            <param name="list">The list of ValueCount objects.</param>
            <returns>A new instance of group.</returns>
        </member>
        <member name="M:IdeaRS.OpenModel.Parameters.NumberGroups.Create(System.Double)">
            <summary>
            Creates new instance with one group with one value.
            </summary>
            <param name="value">The value to set to group.</param>
            <returns>A new instance of group.</returns>
        </member>
        <member name="M:IdeaRS.OpenModel.Parameters.NumberGroups.Create(System.Double,System.Int32)">
            <summary>
            Creates a new instance of one group with several values (defined by count).
            </summary>
            <param name="value">The input value.</param>
            <param name="count">The count, defined value repeating.</param>
            <returns>A new instance of group.</returns>
        </member>
        <member name="M:IdeaRS.OpenModel.Parameters.NumberGroups.Create(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Creates new instance with one group with specified sequence of numbers.
            </summary>
            <param name="positions">The sequence of numbers to add to group.</param>
            <returns>A new instance of group.</returns>
        </member>
        <member name="M:IdeaRS.OpenModel.Parameters.NumberGroups.Create(System.Double[])">
            <summary>
            Creates new instance with one group with specified sequence of numbers.
            </summary>
            <param name="positions">The sequence of numbers to add to group.</param>
            <returns>A new instance of group.</returns>
        </member>
        <member name="M:IdeaRS.OpenModel.Parameters.NumberGroups.CreateGroups(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Creates new instance with groups with with one value in group.
            </summary>
            <param name="positions">The sequence of numbers to create groups.</param>
            <returns>A new instance of groups.</returns>
        </member>
        <member name="M:IdeaRS.OpenModel.Parameters.NumberGroups.CreateGroups(System.Double[])">
            <summary>
            Creates new instance with groups with with one value in group.
            </summary>
            <param name="positions">The sequence of numbers to create groups.</param>
            <returns>A new instance of groups.</returns>
        </member>
        <member name="T:IdeaRS.OpenModel.Parameters.BoltParam">
            <summary>
            Parameter which represts the record of the bolt in IDEA MPRL
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Parameters.BoltParam.CoordinateSystem">
            <summary>
            Gets or sets the coordinate system type.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Parameters.BoltParam.Positions">
            <summary>
            Gets or sets the fasteners positions {X, Y}.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Parameters.BoltParam.Rows">
            <summary>
            Gets or sets the rows of a fasteners positions.
            Absolute positions of groups, in group are relative positions.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Parameters.BoltParam.Cols">
            <summary>
            Gets or sets the columns of fasteners positions.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Parameters.BoltParam.RowsNegative">
            <summary>
            Gets or sets the rows of a negative fasteners positions in case of RowsPosition equals to Profile.
            Absolute positions of groups, in group are relative positions.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Parameters.BoltParam.ColsNegative">
            <summary>
            Gets or sets the rows of a negative fasteners positions in case of RowsPosition equals to Profile.
            Absolute positions of groups, in group are relative positions.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Parameters.BoltParam.RowsSymmetry">
            <summary>
            Gets or sets the type of symmetry of rows positions.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Parameters.BoltParam.ColsSymmetry">
            <summary>
            Gets or sets the type of symmetry of columns positions.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Parameters.BoltParam.RowsPosition">
            <summary>
            Gets or sets the position, to which are bolt rows realted to.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Parameters.BoltParam.ColsPosition">
            <summary>
            Gets or sets the position, to which are bolt columns realted to.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Parameters.BoltParam.RowsGridType">
            <summary>
            Gets or sets the type of rows - regular or shifted.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Parameters.BoltParam.ColsGridType">
            <summary>
            Gets or sets the type of cols - regular or shifted.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Parameters.BoltParam.PolarInput">
            <summary>
            Gets or sets the type, that spefifies polar input.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Parameters.BoltParam.Counts">
            <summary>
            Gets or sets the count of bolts in the circle (polar coordinate system).
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Parameters.BoltParam.Radii">
            <summary>
            Gets or sets the radii of bolts (polar coordinate system).
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Parameters.BoltParam.Angles">
            <summary>
            Gets or sets the groups and positions for angles.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Parameters.BoltParam.PolarPosition">
            <summary>
            Gets or sets the position, to which are bolt radii realted to (polar coordinate system).
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Parameters.BoltParam.ShearInThread">
            <summary>
            Indicates, whether a shear plane is in the thread of a bolt.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Parameters.BoltParam.BoltInteraction">
            <summary>
            Indicates type of shear transfer
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Parameters.CrossSectionParam">
            <summary>
            Parameter which represts the record of the cross-section in IDEA MPRL
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Parameters.MaterialParam">
            <summary>
            Parameter which represts the record of the material in IDEA MPRL
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Parameters.MprlRecord">
            <summary>
            Parameter which represts the general record in IDEA MPRL
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Parameters.MprlRecord.Name">
            <summary>
            Name of the item
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Parameters.MprlRecord.TableId">
            <summary>
            Mprl TableId
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Parameters.MprlRecord.ItemId">
            <summary>
             Mprl ItemId
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Parameters.WeldType">
            <summary>
            Represents the code of the position
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Parameters.WeldType.None">
            <summary>
            No weld
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Parameters.WeldType.LeftFillet">
            <summary>
            Fillet weld is on the left side
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Parameters.WeldType.RightFillet">
            <summary>
            Fillet weld on the right side
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Parameters.WeldType.DoubleFillet">
            <summary>
            Fillet weld on both sides (double fillet)
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.Parameters.WeldType.Bevel">
            <summary>
            Bevel weld
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Parameters.WeldParam">
            <summary>
            Parameter which represts the record of the weld in IDEA MPRL
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Parameters.WeldParam.WeldType">
            <summary>
            Gets or sets the type of the weld
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Parameters.WeldParam.Size">
            <summary>
            Gets or sets the size of the weld
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.ProjectData">
            <summary>
            Defines certain data about user project.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ProjectData.Name">
            <summary>
            Gets or sets the name of project.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ProjectData.Description">
            <summary>
            Gets or sets the description of project.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ProjectData.Number">
            <summary>
            Gets or sets the number of project.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ProjectData.Author">
            <summary>
            Gets or sets the project author.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ProjectData.Date">
            <summary>
            Gets or sets the date.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ProjectData.CodeDependentData">
            <summary>
            Code dependent data
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.ProjectDataEc">
            <summary>
            Additional data for Ec project
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ProjectDataEc.AnnexCode">
            <summary>
            Gets or sets the actual national annex
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ProjectDataEc.FatigueCheck">
            <summary>
            To allow fatigue check
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ProjectDataEc.FatigueAnnexNN">
            <summary>
            True for check fatigue accorting 1992-2 Annex NN
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Properties.Resources.ErrBoltsTooClose">
            <summary>
              Looks up a localized string similar to Bolts are too close to each other..
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Properties.Resources.ErrBoltsTooCloseEdge">
            <summary>
              Looks up a localized string similar to Bolts are too close to plate edge or outside of the connected plate..
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Properties.Resources.ErrContactsAngle">
            <summary>
              Looks up a localized string similar to Angle of plates in contact is out of limit (sin(alfa) &gt; 0.001)..
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Properties.Resources.ErrCurveDecreaseFunction">
            <summary>
              Looks up a localized string similar to The curve mustn&apos;t be a decrease function..
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Properties.Resources.ErrCurveDerivation">
            <summary>
              Looks up a localized string similar to The curve derivation is out of range..
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Properties.Resources.ErrCurveFunction">
            <summary>
              Looks up a localized string similar to The curve isn&apos;t a function..
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Properties.Resources.ErrCurveNotSet">
            <summary>
              Looks up a localized string similar to The curve isn&apos;t set..
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Properties.Resources.ErrCurveZeroPoint">
            <summary>
              Looks up a localized string similar to The curve doesn&apos;t contain the point (0, 0)..
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Properties.Resources.ErrDataObjectNotCreated">
            <summary>
              Looks up a localized string similar to The Data object in Data Model was not created. Internal error..
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Properties.Resources.ErrIncorrectMaterialEGP">
            <summary>
              Looks up a localized string similar to Material properties don&apos;t satisfy the condition: &quot;(1.0 - E / (2.0 * (1.0 + Poisson) * G)) &lt; 0.01&quot;..
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Properties.Resources.ErrIncorrentMaterialE">
            <summary>
              Looks up a localized string similar to Incorrect material E-modulus..
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Properties.Resources.ErrNoCrossSectionParameter">
            <summary>
              Looks up a localized string similar to No cross-section parameter in the Open Model Cross-section .
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Properties.Resources.ErrNoEquivalentObjectInDataModel">
            <summary>
              Looks up a localized string similar to No equivalent Data object in the Data Model..
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Properties.Resources.ErrNoObjectInOpenModel">
            <summary>
              Looks up a localized string similar to No Open Model object in the Idea Open Model..
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Properties.Resources.ErrNoOpenObject">
            <summary>
              Looks up a localized string similar to No Open Model object..
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Properties.Resources.ErrNoReferenceObjectInOpenModel">
            <summary>
              Looks up a localized string similar to No referenced Open Model object in the Idea Open Model..
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Properties.Resources.Error">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Properties.Resources.ErrPreloadedBoltGrade">
            <summary>
              Looks up a localized string similar to Bolt grade is not allowed in slip-resistant joints..
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Properties.Resources.ErrValidPolyline">
            <summary>
              Looks up a localized string similar to The geometry of the polyline is not valid. The segments are not continuous or they have a different orientation..
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Properties.Resources.ErrValueOutOfRange">
            <summary>
              Looks up a localized string similar to The value is out of the range..
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Properties.Resources.ErrWarningLoad">
            <summary>
              Looks up a localized string similar to Connected member is overloaded.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Properties.Resources.GeneralError">
            <summary>
              Looks up a localized string similar to General error.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Properties.Resources.GeneralInformation">
            <summary>
              Looks up a localized string similar to General information.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Properties.Resources.GeneralWarning">
            <summary>
              Looks up a localized string similar to General warning.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Properties.Resources.Information">
            <summary>
              Looks up a localized string similar to Information.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Properties.Resources.Object">
            <summary>
              Looks up a localized string similar to Object.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Properties.Resources.Property">
            <summary>
              Looks up a localized string similar to Property.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Properties.Resources.Reserved">
            <summary>
              Looks up a localized string similar to Reserved.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Properties.Resources.TimeoutError">
            <summary>
              Looks up a localized string similar to Calculation timeout.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Properties.Resources.Unspecified">
            <summary>
              Looks up a localized string similar to Unspecified.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Properties.Resources.WarnCurveCount">
            <summary>
              Looks up a localized string similar to The number of points of the curve is exceed 100..
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Properties.Resources.Warning">
            <summary>
              Looks up a localized string similar to Warning.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Properties.Resources.WarnNoPropertyInData">
            <summary>
              Looks up a localized string similar to No equivalent property in the Data object.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Properties.Resources.WarnReinforcementBarsCollision">
            <summary>
              Looks up a localized string similar to Some of bars in the reinforced cross-section are in collision..
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.Properties.Resources.WarnValueOutOfRange">
            <summary>
              Looks up a localized string similar to The value is out of the range..
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.ReferenceElement">
            <summary>
            Reference element class
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.ReferenceElement.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.ReferenceElement.#ctor(IdeaRS.OpenModel.OpenElementId)">
            <summary>
            Constructor
            </summary>
            <param name="element">Referenced element</param>
        </member>
        <member name="P:IdeaRS.OpenModel.ReferenceElement.TypeName">
            <summary>
            Element type name
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ReferenceElement.Id">
            <summary>
            Element Id
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ReferenceElement.Element">
            <summary>
            Referenced element
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.OpenElementId">
            <summary>
            Open element base class
            POS - class can not be abstract -it causes problems with serialization
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenElementId.Id">
            <summary>
            Element Id
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.WeldEvaluation">
            <summary>
            WeldEvaluation
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.WeldEvaluation.MaxForceElement">
            <summary>
            Check is calculated in element with max force in weld (too conservative)
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.WeldEvaluation.ForceResultant">
            <summary>
            Check is calculated as resultant of all forces in weld
            </summary>
        </member>
        <member name="F:IdeaRS.OpenModel.WeldEvaluation.ApplyPlasticWelds">
            <summary>
            Plasticity in welds is taken into account in AM
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.ConnectionSetup">
            <summary>
            ConnectionSetup
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.ConnectionSetup.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.SteelSetup">
            <summary>
            Steel Setup
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.StopAtLimitStrain">
            <summary>
            Stop analysis when the limit strain is reached.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.WeldEvaluationData">
            <summary>
            Method of evaluation of stress in welds
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.CheckDetailing">
            <summary>
            Perform check of bolt positions
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.ApplyConeBreakoutCheck">
            <summary>
            Apply cone breakout check
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.PretensionForceFpc">
            <summary>
            Pretension force fpc = k * fub * As
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.GammaInst">
            <summary>
            Partial safety factor of instalation safety
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.GammaM3">
            <summary>
            Preloaded bolts safety factor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.AnchorLengthForStiffness">
            <summary>
            Length of anchor to define the anchor stiffness in analysis model, as a multiple of anchor diameter (E A /n * [d])
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.JointBetaFactor">
            <summary>
            Joint coefficient βj - Used for Fjd calculation
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.EffectiveAreaStressCoeff">
            <summary>
            Effective area is taken from intersection of stress area and area of joined items according to EN1993-1-8 art. 6.2.5
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.FrictionCoefficient">
            <summary>
            Coefficient of friction between base plate and concrete block
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.LimitPlasticStrain">
            <summary>
            Limit of plastic strain used in 2D plate element check
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.LimitDeformation">
            <summary>
            Limit deformation on closed sections 
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.LimitDeformationCheck">
            <summary>
            Limit deformation on closed sections check or not
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.WarnPlasticStrain">
            <summary>
            Warning plastic strain
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.WarnCheckLevel">
            <summary>
            Warning check level
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.OptimalCheckLevel">
            <summary>
            Optimal check level
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.DistanceBetweenBolts">
            <summary>
            Limit distance between bolts as a multiple of bolt diameter
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.DistanceDiameterBetweenBP">
            <summary>
            Anchor pitch
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.DistanceBetweenBoltsEdge">
            <summary>
            Limit distance between bolt and plate edge as a multiple of bolt diameter
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.BearingAngle">
            <summary>
            Load distribution angle of concrete block in calculation of factor Kj 
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.DecreasingFtrd">
            <summary>
            Decreasing Ftrd of anchors. Worse quality influence
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.BracedSystem">
            <summary>
            Consider the frame system as braced for stiffness calculation. Braced system reduces horizontal displacements.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.BearingCheck">
            <summary>
            Apply bearing check including αb
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.ApplyBetapInfluence">
            <summary>
            Apply βp influence in bolt shear resistance. ΕΝ 1993-1-8 chapter 3.6.1 (12)
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.MemberLengthRatio">
            <summary>
            A multiple of cross-section height to determine the default length of member
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.DivisionOfSurfaceOfCHS">
            <summary>
            Number of straight lines to substitute circle of circular tube in analysis model
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.DivisionOfArcsOfRHS">
            <summary>
            Number of straight lines to substitute corner arc of rectangular tubes in analysis model
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.NumElement">
            <summary>
            Ratio of length of decisive plate edge and Elements on edge count determines the average size of mesh element
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.NumberIterations">
            <summary>
            More iterations helps to find better solutions in contact elements but increases calculation time
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.Mdiv">
            <summary>
            Number of iteration steps to evaluate analysis divergence
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.MinSize">
            <summary>
            Minimal size of generated finite mesh element
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.MaxSize">
            <summary>
            Maximal size of generated finite mesh element
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.NumElementRhs">
            <summary>
            Number of mesh elements in RHS height
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.RigidBP">
            <summary>
            True if rigid base plate is considered
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.AlphaCC">
            <summary>
            Long-term effect on fcd
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.CrackedConcrete">
            <summary>
            True if cracked concrete is considered
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.ExtensionLengthRationOpenSections">
            <summary>
            Minimal length of end part of open sections
            Ration of the maximal size of the cross section
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.ConnectionSetup.ExtensionLengthRationCloseSections">
            <summary>
            Minimal length of end part of hollow sections
            Ration of the maximal size of the cross section
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.SteelSetupAISC">
            <summary>
            Steel setup IBC class
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.SteelSetupAISC.ReductionFactorTension">
            <summary>
            ACI 318
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.SteelSetupAISC.ReductionFactorShear">
            <summary>
            ACI 318
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.SteelSetupAISC.BoltTensileShear_Omega">
            <summary>
            Safety factor BoltTensileShear_Omega
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.SteelSetupAISC.BoltTensileShearCombined_Omega">
            <summary>
            Safety factor BoltTensileShearCombined_Omega
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.SteelSetupAISC.BoltBearing_Omega">
            <summary>
            Safety factor BoltBearing_Omega
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.SteelSetupAISC.FilletWelds_Omega">
            <summary>
            Safety factor FilletWelds_Omega
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.SteelSetupAISC.BoltTensileShear_Phi">
            <summary>
            Safety factor BoltTensileShear_Phi
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.SteelSetupAISC.BoltTensileShearCombined_Phi">
            <summary>
            Safety factor BoltTensileShearCombined_Phi
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.SteelSetupAISC.BoltBearing_Phi">
            <summary>
            Safety factor BoltBearing_Phi
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.SteelSetupAISC.FilletWelds_Phi">
            <summary>
            Safety factor FilletWelds_Phi
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.SteelSetupAISC.MaterialFy_Omega">
            <summary>
            Safety factor MaterialFy_Omega
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.SteelSetupAISC.MaterialFy_Phi">
            <summary>
            Safety factor MaterialFy_Phi
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.SteelSetupAISC.BoltSlipRes_Phi">
            <summary>
            Safety factor BoltSlipRes_Phi
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.SteelSetupAISC.BoltSlipRes_Omega">
            <summary>
            Safety factor BoltSlipRes_Phi
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.SteelSetupAUS">
            <summary>
            Steel setup IBC class
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.SteelSetupAUS.Structural_Fi">
            <summary>
            Safety factor Structural_Fi
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.SteelSetupAUS.Bolt_Fib">
            <summary>
            Safety factor Bolt_Fib
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.SteelSetupAUS.Bolt_Fip">
            <summary>
            Safety factor preloaded bolt
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.SteelSetupAUS.Weld_Fiw">
            <summary>
            Safety factor Weld_Fiw
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.SteelSetupAUS.Anchor_Fiar">
            <summary>
            Safety factor Anchor_Fiar
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.SteelSetupAUS.CrtBearing">
            <summary>
            Concrete bearing factor
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.SteelSetupCISC">
            <summary>
            Steel setup IBC class
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.SteelSetupCISC.Structural_Fi">
            <summary>
            Safety factor Structural_Fi
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.SteelSetupCISC.Bolt_Fib">
            <summary>
            Safety factor Bolt_Fib
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.SteelSetupCISC.Weld_Fiw">
            <summary>
            Safety factor Weld_Fiw
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.SteelSetupCISC.Anchor_Fiar">
            <summary>
            Safety factor Anchor_Fiar
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.SteelSetup">
            <summary>
            ISteelSetup
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.SteelSetupECEN">
            <summary>
            Steel setup ECEN class
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.SteelSetupECEN.GammaM0">
            <summary>
            GammaM0
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.SteelSetupECEN.GammaM1">
            <summary>
            GammaM1
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.SteelSetupECEN.GammaM2">
            <summary>
            GammaM2
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.SteelSetupRUS">
            <summary>
            Steel setup RUS class
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.SteelSetupRUS.Structural_Fi">
            <summary>
            Safety factor Structural_Fi
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.SteelSetupRUS.Bolt_Fib">
            <summary>
            Safety factor Bolt_Fib
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.SteelSetupRUS.Bolt_Fip">
            <summary>
            Safety factor preloaded bolt
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.SteelSetupRUS.Weld_Fiw">
            <summary>
            Safety factor Weld_Fiw
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.SteelSetupRUS.Anchor_Fiar">
            <summary>
            Safety factor Anchor_Fiar
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.SteelSetupRUS.CrtBearing">
            <summary>
            Concrete bearing factor
            </summary>
        </member>
        <member name="T:IdeaRS.OpenModel.OpenModelClassAttribute">
            <summary>
            Base attribute of the Open model
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModelClassAttribute.StructuralModelClassType">
            <summary>
            
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModelClassAttribute.StructuralModelContainerType">
            <summary>
            
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModelClassAttribute.OpenModelListType">
            <summary>
            
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.OpenModelClassAttribute.#ctor(System.String,System.String,System.Type)">
            <summary>
            Constructor
            </summary>
            <param name="structuralModelClassType">Equivalent SM type</param>
            <param name="structuralModelContainerType">SM container type</param>
            <param name="openModelListType">List type in Open Model</param>
        </member>
        <member name="M:IdeaRS.OpenModel.OpenModelClassAttribute.#ctor(System.String,System.Type)">
            <summary>
            Constructor
            </summary>
            <param name="structuralModelClassType">Equivalent SM type</param>
            <param name="openModelListType">List type in Open Model</param>
        </member>
        <member name="M:IdeaRS.OpenModel.OpenModelClassAttribute.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="structuralModelClassType">Equivalent SM type</param>
            <param name="structuralModelContainerType">SM container type</param>
        </member>
        <member name="M:IdeaRS.OpenModel.OpenModelClassAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="structuralModelClassType">Equivalent SM type</param>
        </member>
        <member name="M:IdeaRS.OpenModel.OpenModelClassAttribute.#ctor(System.Type)">
            <summary>
            Constructor
            </summary>
            <param name="openModelListType">List type in Open Model</param>
        </member>
        <member name="T:IdeaRS.OpenModel.OpenModel">
            <summary>
            Open model
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.OpenModel.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.Version">
            <summary>
            Data format version
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.OriginSettings">
            <summary>
            Information about origin project
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.Point3D">
            <summary>
            List of Point3D
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.LineSegment3D">
            <summary>
            List of LineSegment3D
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.ArcSegment3D">
            <summary>
            List of ArcSegment3D
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.PolyLine3D">
            <summary>
            List of PolyLine3D
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.Region3D">
            <summary>
            List of Region3D
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.MatConcrete">
            <summary>
            List of MatConcrete
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.MatReinforcement">
            <summary>
            List of MatReinforcement
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.MatSteel">
            <summary>
            List of MatSteel
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.MatPrestressSteel">
            <summary>
            List of MatPrestressSteel
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.CrossSection">
            <summary>
            List of CrossSection
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.ReinforcedCrossSection">
            <summary>
            List of Reinforced CrossSection
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.HingeElement1D">
            <summary>
            List of hinge elements 1D
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.Opening">
            <summary>
            List of openings for Detail
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.DappedEnd">
            <summary>
            List of dapped ends in Detail
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.PatchDevice">
            <summary>
            List of dapped ends in Detail
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.Element1D">
            <summary>
            List of Elements 1D
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.Beam">
            <summary>
            List of Elements 1D
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.Member1D">
            <summary>
            List of Member 1D
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.Element2D">
            <summary>
            List of Elements 2D
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.Wall">
            <summary>
            List of Elements 2D
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.Member2D">
            <summary>
            List of Member 2D
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.RigidLink">
            <summary>
            List of Rigid link
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.PointOnLine3D">
            <summary>
            List of Point on line 3D
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.PointSupportNode">
            <summary>
            List of Point support in node
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.LineSupportSegment">
            <summary>
            List of Line support on segment
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.LoadsInPoint">
            <summary>
            List of point load impulses in this load case
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.LoadsOnLine">
            <summary>
            List of line load impulses in this load case
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.StrainLoadsOnLine">
            <summary>
            List of generalized strain load impulses along the line in this load case.
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.PointLoadsOnLine">
            <summary>
            List of point load impulses in this load case
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.LoadsOnSurface">
            <summary>
            List surafce load in this load case
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.Settlements">
            <summary>
            Settlements in this load case
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.TemperatureLoadsOnLine">
            <summary>
            List of temperature load in this load case
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.LoadGroup">
            <summary>
            List of Load groups
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.LoadCase">
            <summary>
            List of Load cases
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.CombiInput">
            <summary>
            List of Combinations
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.Attribute">
            <summary>
            List of attributes
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.ConnectionPoint">
            <summary>
            List of Connection Points
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.Connections">
            <summary>
            List of Connection data
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.Reinforcement">
            <summary>
            List of reinforcement in IDEA StatiCa Detail
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.ISDModel">
            <summary>
            List of Details
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.InitialImperfectionOfPoint">
            <summary>
            List of InitialmperfectionOfPoint
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.Tendon">
            <summary>
            Tendon
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.ResultClass">
            <summary>
            Result Class
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.ConnectionSetup">
            <summary>
            Information about Connection Setup
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.ProjectData">
            <summary>
            Gets or sets the projet data
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.CheckMember">
            <summary>
            List of the Check members
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.ConcreteCheckSection">
            <summary>
            List of the concrete check section
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.ConcreteSetup">
            <summary>
            Gets or sets the concrete member data
            </summary>
        </member>
        <member name="P:IdeaRS.OpenModel.OpenModel.ProjectDataConcrete">
            <summary>
            Gets or sets the projet data concrete
            </summary>
        </member>
        <member name="M:IdeaRS.OpenModel.OpenModel.GetMaxId(System.String)">
            <summary>
            Get max Id value for specified type
            </summary>
            <param name="typeName">Name of type</param>
            <returns>Max Id value or zero if don't any exists</returns>
        </member>
        <member name="M:IdeaRS.OpenModel.OpenModel.GetMaxId(IdeaRS.OpenModel.OpenElementId)">
            <summary>
            Get max Id value for specified type
            </summary>
            <param name="obj">Object</param>
            <returns>Max Id value or zero if don't any exists</returns>
        </member>
        <member name="M:IdeaRS.OpenModel.OpenModel.GetMaxId(System.Type)">
            <summary>
            Get max Id value for specified type
            </summary>
            <param name="t">Type</param>
            <returns>Max Id value or zero if don't any exists</returns>
        </member>
        <member name="M:IdeaRS.OpenModel.OpenModel.AddObject(IdeaRS.OpenModel.OpenElementId)">
            <summary>
            Add new object into collections
            </summary>
            <param name="obj">Added object</param>
            <returns>Return value 0 - OK, -1 - duplicit Id, -10 - the type of object there is not in the data colections</returns>
            <remarks>
            If the obj.Id is set to zero or lesser, this method finds the first available free Id and sets it into the obj.Id.
            </remarks>
        </member>
        <member name="M:IdeaRS.OpenModel.OpenModel.AddObject(IdeaRS.OpenModel.OpenAttribute)">
             <summary>
             Add new atribute object into collections
             </summary>
             <param name="obj">Added object</param>
             <returns>Return value 0 - OK, -1 - false</returns>
             <remarks>
            
             </remarks>
        </member>
        <member name="M:IdeaRS.OpenModel.OpenModel.SaveToXmlFile(System.String)">
            <summary>
            Saves content into file as a XML format
            </summary>
            <param name="xmlFileName">XML file name</param>
            <returns>True if succeeded</returns>
        </member>
        <member name="M:IdeaRS.OpenModel.OpenModel.LoadFromXmlFile(System.String)">
            <summary>
            Creates the instance of Open Model from the XML file
            </summary>
            <param name="xmlFileName">XML file name</param>
            <returns>Open Model or null</returns>
        </member>
        <member name="M:IdeaRS.OpenModel.OpenModel.LoadFromStream(System.IO.Stream)">
            <summary>
            Creates the instance of Open Model from the stream
            </summary>
            <param name="xmlFileStream">The input stream</param>
            <returns>The new instance of Open Model</returns>
        </member>
        <member name="M:IdeaRS.OpenModel.OpenModel.LoadFromString(System.String)">
            <summary>
            Creates the instance of Open Model from xml string
            </summary>
            <param name="xmlString">The input string</param>
            <returns>The new instance of Open Model</returns>
        </member>
        <member name="M:IdeaRS.OpenModel.OpenModel.GetObject(IdeaRS.OpenModel.ReferenceElement)">
            <summary>
            Gets the Open element object from the Reference element
            </summary>
            <param name="element">Reference element</param>
            <returns>The instance of  OpenElementId object</returns>
        </member>
    </members>
</doc>
